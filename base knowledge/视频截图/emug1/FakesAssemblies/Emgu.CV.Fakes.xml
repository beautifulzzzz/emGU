<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Emgu.CV.Fakes</name>
    </assembly>
    <members>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlob">
            <summary>Emgu.CV.Cvb.CvBlob 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.#ctor(Emgu.CV.Cvb.CvBlob)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AreaGet">
            <summary>设置 CvBlob.get_Area() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.BlobMomentsGet">
            <summary>设置 CvBlob.get_BlobMoments() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.BoundingBoxGet">
            <summary>设置 CvBlob.get_BoundingBox() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.CentroidGet">
            <summary>设置 CvBlob.get_Centroid() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.ConstructorIntPtr">
            <summary>设置 CvBlob.CvBlob(IntPtr blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.GetContourMemStorage">
            <summary>设置 CvBlob.GetContour(MemStorage stor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.ImplicitOpCvBlobIntPtr">
            <summary>设置 CvBlob.op_Implicit(CvBlob obj) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.LabelGet">
            <summary>设置 CvBlob.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.PtrGet">
            <summary>设置 CvBlob.get_Ptr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.AreaGet">
            <summary>设置 CvBlob.get_Area() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.BlobMomentsGet">
            <summary>设置 CvBlob.get_BlobMoments() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.BoundingBoxGet">
            <summary>设置 CvBlob.get_BoundingBox() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.CentroidGet">
            <summary>设置 CvBlob.get_Centroid() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.GetContourMemStorage">
            <summary>设置 CvBlob.GetContour(MemStorage stor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.LabelGet">
            <summary>设置 CvBlob.get_Label() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.AllInstances.PtrGet">
            <summary>设置 CvBlob.get_Ptr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments">
            <summary>Emgu.CV.Cvb.CvBlob+Moments 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlob.ShimMoments.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector">
            <summary>Emgu.CV.Cvb.CvBlobDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.#ctor(Emgu.CV.Cvb.CvBlobDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.Constructor">
            <summary>设置 CvBlobDetector.CvBlobDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.DetectImageOfGrayByteCvBlobs">
            <summary>设置 CvBlobDetector.Detect(Image`2&lt;Gray,Byte&gt; img, CvBlobs blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.DisposeObject">
            <summary>设置 CvBlobDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.DrawBlobsImageOfGrayByteCvBlobsCvBlobDetectorBlobRenderTypeDouble">
            <summary>设置 CvBlobDetector.DrawBlobs(Image`2&lt;Gray,Byte&gt; image, CvBlobs blobs, BlobRenderType type, Double alpha) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.DrawBlobsMaskCvBlobs">
            <summary>设置 CvBlobDetector.DrawBlobsMask(CvBlobs blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.MeanColorCvBlobImageOfBgrByte">
            <summary>设置 CvBlobDetector.MeanColor(CvBlob blob, Image`2&lt;Bgr,Byte&gt; originalImage) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.StaticConstructor">
            <summary>设置 CvBlobDetector.CvBlobDetector() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances.DetectImageOfGrayByteCvBlobs">
            <summary>设置 CvBlobDetector.Detect(Image`2&lt;Gray,Byte&gt; img, CvBlobs blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances.DisposeObject">
            <summary>设置 CvBlobDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances.DrawBlobsImageOfGrayByteCvBlobsCvBlobDetectorBlobRenderTypeDouble">
            <summary>设置 CvBlobDetector.DrawBlobs(Image`2&lt;Gray,Byte&gt; image, CvBlobs blobs, BlobRenderType type, Double alpha) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances.DrawBlobsMaskCvBlobs">
            <summary>设置 CvBlobDetector.DrawBlobsMask(CvBlobs blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobDetector.AllInstances.MeanColorCvBlobImageOfBgrByte">
            <summary>设置 CvBlobDetector.MeanColor(CvBlob blob, Image`2&lt;Bgr,Byte&gt; originalImage) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlobs">
            <summary>Emgu.CV.Cvb.CvBlobs 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.#ctor(Emgu.CV.Cvb.CvBlobs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.UInt32,Emgu.CV.Cvb.CvBlob}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UInt32,Emgu.CV.Cvb.CvBlob}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Bind(System.Collections.Generic.IDictionary{System.UInt32,Emgu.CV.Cvb.CvBlob})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AddKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Add(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AddUInt32CvBlob">
            <summary>设置 CvBlobs.Add(UInt32 label, CvBlob blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Clear">
            <summary>设置 CvBlobs.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.Constructor">
            <summary>设置 CvBlobs.CvBlobs() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.ContainsKeyUInt32">
            <summary>设置 CvBlobs.ContainsKey(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.ContainsKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Contains(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.CopyToKeyValuePairOfUInt32CvBlobArrayInt32">
            <summary>设置 CvBlobs.CopyTo(KeyValuePair`2&lt;UInt32,CvBlob&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.CountGet">
            <summary>设置 CvBlobs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.DisposeObject">
            <summary>设置 CvBlobs.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.FilterByAreaInt32Int32">
            <summary>设置 CvBlobs.FilterByArea(Int32 minArea, Int32 maxArea) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.GetBlobsUInt32ArrayOutCvBlobArrayOut">
            <summary>设置 CvBlobs.GetBlobs(UInt32[]&amp; labels, CvBlob[]&amp; blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.GetEnumerator">
            <summary>设置 CvBlobs.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.IsReadOnlyGet">
            <summary>设置 CvBlobs.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.ItemGetUInt32">
            <summary>设置 CvBlobs.get_Item(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.ItemSetUInt32CvBlob">
            <summary>设置 CvBlobs.set_Item(UInt32 label, CvBlob value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.KeysGet">
            <summary>设置 CvBlobs.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.RemoveKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Remove(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.RemoveUInt32">
            <summary>设置 CvBlobs.Remove(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CvBlobs.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.TryGetValueUInt32CvBlobOut">
            <summary>设置 CvBlobs.TryGetValue(UInt32 label, CvBlob&amp; blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.ValuesGet">
            <summary>设置 CvBlobs.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.AddKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Add(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.AddUInt32CvBlob">
            <summary>设置 CvBlobs.Add(UInt32 label, CvBlob blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.Clear">
            <summary>设置 CvBlobs.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.ContainsKeyUInt32">
            <summary>设置 CvBlobs.ContainsKey(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.ContainsKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Contains(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.CopyToKeyValuePairOfUInt32CvBlobArrayInt32">
            <summary>设置 CvBlobs.CopyTo(KeyValuePair`2&lt;UInt32,CvBlob&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.CountGet">
            <summary>设置 CvBlobs.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.DisposeObject">
            <summary>设置 CvBlobs.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.FilterByAreaInt32Int32">
            <summary>设置 CvBlobs.FilterByArea(Int32 minArea, Int32 maxArea) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.GetBlobsUInt32ArrayOutCvBlobArrayOut">
            <summary>设置 CvBlobs.GetBlobs(UInt32[]&amp; labels, CvBlob[]&amp; blobs) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.GetEnumerator">
            <summary>设置 CvBlobs.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.IsReadOnlyGet">
            <summary>设置 CvBlobs.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.ItemGetUInt32">
            <summary>设置 CvBlobs.get_Item(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.ItemSetUInt32CvBlob">
            <summary>设置 CvBlobs.set_Item(UInt32 label, CvBlob value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.KeysGet">
            <summary>设置 CvBlobs.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.RemoveKeyValuePairOfUInt32CvBlob">
            <summary>设置 CvBlobs.Remove(KeyValuePair`2&lt;UInt32,CvBlob&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.RemoveUInt32">
            <summary>设置 CvBlobs.Remove(UInt32 label) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CvBlobs.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.TryGetValueUInt32CvBlobOut">
            <summary>设置 CvBlobs.TryGetValue(UInt32 label, CvBlob&amp; blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvBlobs.AllInstances.ValuesGet">
            <summary>设置 CvBlobs.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvTrack">
            <summary>Emgu.CV.Cvb.CvTrack 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTrack.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTrack.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTrack.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTrack.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvTrack.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvTracks">
            <summary>Emgu.CV.Cvb.CvTracks 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.#ctor(Emgu.CV.Cvb.CvTracks)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.UInt32,Emgu.CV.Cvb.CvTrack}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UInt32,Emgu.CV.Cvb.CvTrack}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.ShimCvTracks.Bind(System.Collections.Generic.IDictionary{System.UInt32,Emgu.CV.Cvb.CvTrack})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AddKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Add(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AddUInt32CvTrack">
            <summary>设置 CvTracks.Add(UInt32 id, CvTrack track) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.Clear">
            <summary>设置 CvTracks.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.Constructor">
            <summary>设置 CvTracks.CvTracks() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.ContainsKeyUInt32">
            <summary>设置 CvTracks.ContainsKey(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.ContainsKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Contains(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.CopyToKeyValuePairOfUInt32CvTrackArrayInt32">
            <summary>设置 CvTracks.CopyTo(KeyValuePair`2&lt;UInt32,CvTrack&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.CountGet">
            <summary>设置 CvTracks.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.DisposeObject">
            <summary>设置 CvTracks.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.GetEnumerator">
            <summary>设置 CvTracks.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.GetTracksUInt32ArrayOutCvTrackArrayOut">
            <summary>设置 CvTracks.GetTracks(UInt32[]&amp; ids, CvTrack[]&amp; tracks) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.IsReadOnlyGet">
            <summary>设置 CvTracks.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.ItemGetUInt32">
            <summary>设置 CvTracks.get_Item(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.ItemSetUInt32CvTrack">
            <summary>设置 CvTracks.set_Item(UInt32 id, CvTrack value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.KeysGet">
            <summary>设置 CvTracks.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.RemoveKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Remove(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.RemoveUInt32">
            <summary>设置 CvTracks.Remove(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CvTracks.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.TryGetValueUInt32CvTrackOut">
            <summary>设置 CvTracks.TryGetValue(UInt32 id, CvTrack&amp; track) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.UpdateCvBlobsDoubleUInt32UInt32">
            <summary>设置 CvTracks.Update(CvBlobs blobs, Double thDistance, UInt32 thInactive, UInt32 thActive) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.ValuesGet">
            <summary>设置 CvTracks.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.AddKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Add(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.AddUInt32CvTrack">
            <summary>设置 CvTracks.Add(UInt32 id, CvTrack track) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.Clear">
            <summary>设置 CvTracks.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.ContainsKeyUInt32">
            <summary>设置 CvTracks.ContainsKey(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.ContainsKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Contains(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.CopyToKeyValuePairOfUInt32CvTrackArrayInt32">
            <summary>设置 CvTracks.CopyTo(KeyValuePair`2&lt;UInt32,CvTrack&gt;[] array, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.CountGet">
            <summary>设置 CvTracks.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.DisposeObject">
            <summary>设置 CvTracks.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.GetEnumerator">
            <summary>设置 CvTracks.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.GetTracksUInt32ArrayOutCvTrackArrayOut">
            <summary>设置 CvTracks.GetTracks(UInt32[]&amp; ids, CvTrack[]&amp; tracks) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.IsReadOnlyGet">
            <summary>设置 CvTracks.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.ItemGetUInt32">
            <summary>设置 CvTracks.get_Item(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.ItemSetUInt32CvTrack">
            <summary>设置 CvTracks.set_Item(UInt32 id, CvTrack value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.KeysGet">
            <summary>设置 CvTracks.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.RemoveKeyValuePairOfUInt32CvTrack">
            <summary>设置 CvTracks.Remove(KeyValuePair`2&lt;UInt32,CvTrack&gt; item) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.RemoveUInt32">
            <summary>设置 CvTracks.Remove(UInt32 id) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 CvTracks.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.TryGetValueUInt32CvTrackOut">
            <summary>设置 CvTracks.TryGetValue(UInt32 id, CvTrack&amp; track) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.UpdateCvBlobsDoubleUInt32UInt32">
            <summary>设置 CvTracks.Update(CvBlobs blobs, Double thDistance, UInt32 thInactive, UInt32 thActive) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.ShimCvTracks.AllInstances.ValuesGet">
            <summary>设置 CvTracks.get_Values() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.StubCvBlobDetector">
            <summary>Emgu.CV.Cvb.CvBlobDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.DisposeObject">
            <summary>设置 CvBlobDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.DisposeObject01">
            <summary>设置 CvBlobDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.InitializeStub">
            <summary>初始化 type StubCvBlobDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.StubCvBlobs">
            <summary>Emgu.CV.Cvb.CvBlobs 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobs.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobs.DisposeObject">
            <summary>设置 CvBlobs.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvBlobs.DisposeObject01">
            <summary>设置 CvBlobs.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobs.InitializeStub">
            <summary>初始化 type StubCvBlobs 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvBlobs.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvBlobs.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvBlobs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Cvb.Fakes.StubCvTracks">
            <summary>Emgu.CV.Cvb.CvTracks 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvTracks.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvTracks.DisposeObject">
            <summary>设置 CvTracks.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvTracks.DisposeObject01">
            <summary>设置 CvTracks.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvTracks.InitializeStub">
            <summary>初始化 type StubCvTracks 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Cvb.Fakes.StubCvTracks.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Cvb.Fakes.StubCvTracks.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvTracks.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvTracks.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Cvb.Fakes.StubCvTracks.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimAdaptiveSkinDetector">
            <summary>Emgu.CV.AdaptiveSkinDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.#ctor(Emgu.CV.AdaptiveSkinDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.ConstructorInt32AdaptiveSkinDetectorMorphingMethod">
            <summary>设置 AdaptiveSkinDetector.AdaptiveSkinDetector(Int32 samplingDivider, MorphingMethod morphingMethod) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.DisposeObject">
            <summary>设置 AdaptiveSkinDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.ProcessImageOfBgrByteImageOfGrayByte">
            <summary>设置 AdaptiveSkinDetector.Process(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; hueMask) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.AllInstances.DisposeObject">
            <summary>设置 AdaptiveSkinDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimAdaptiveSkinDetector.AllInstances.ProcessImageOfBgrByteImageOfGrayByte">
            <summary>设置 AdaptiveSkinDetector.Process(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; hueMask) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCameraCalibration">
            <summary>Emgu.CV.CameraCalibration 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCameraCalibration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCameraCalibration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCameraCalibration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.CalibrateCameraMCvPoint3D32fArrayArrayPointFArrayArraySizeIntrinsicCameraParametersCALIB_TYPEExtrinsicCameraParametersArrayOut">
            <summary>设置 CameraCalibration.CalibrateCamera(MCvPoint3D32f[][] objectPoints, PointF[][] imagePoints, Size imageSize, IntrinsicCameraParameters intrinsicParam, CALIB_TYPE flags, ExtrinsicCameraParameters[]&amp; extrinsicParams) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.DrawChessboardCornersImageOfGrayByteSizePointFArray">
            <summary>设置 CameraCalibration.DrawChessboardCorners(Image`2&lt;Gray,Byte&gt; image, Size patternSize, PointF[] corners) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.EstimateRigidTransformPointFArrayPointFArrayBoolean">
            <summary>设置 CameraCalibration.EstimateRigidTransform(PointF[] src, PointF[] dest, Boolean fullAffine) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.FindChessboardCornersImageOfGrayByteSizeCALIB_CB_TYPE">
            <summary>设置 CameraCalibration.FindChessboardCorners(Image`2&lt;Gray,Byte&gt; image, Size patternSize, CALIB_CB_TYPE flags) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.FindExtrinsicCameraParams2MCvPoint3D32fArrayPointFArrayIntrinsicCameraParameters">
            <summary>设置 CameraCalibration.FindExtrinsicCameraParams2(MCvPoint3D32f[] objectPoints, PointF[] imagePoints, IntrinsicCameraParameters intrin) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.FindHomographyMatrixOfSingleMatrixOfSingleHOMOGRAPHY_METHODDouble">
            <summary>设置 CameraCalibration.FindHomography(Matrix`1&lt;Single&gt; srcPoints, Matrix`1&lt;Single&gt; dstPoints, HOMOGRAPHY_METHOD method, Double ransacReprojThreshold) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.FindHomographyPointFArrayPointFArrayHOMOGRAPHY_METHODDouble">
            <summary>设置 CameraCalibration.FindHomography(PointF[] srcPoints, PointF[] dstPoints, HOMOGRAPHY_METHOD method, Double ransacReprojThreshold) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.GetAffineTransformPointFArrayPointFArray">
            <summary>设置 CameraCalibration.GetAffineTransform(PointF[] src, PointF[] dest) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.GetPerspectiveTransformPointFArrayPointFArray">
            <summary>设置 CameraCalibration.GetPerspectiveTransform(PointF[] src, PointF[] dest) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.ProjectPointsMCvPoint3D32fArrayExtrinsicCameraParametersIntrinsicCameraParametersMatrixOfSingleArray">
            <summary>设置 CameraCalibration.ProjectPoints(MCvPoint3D32f[] objectPoints, ExtrinsicCameraParameters extrin, IntrinsicCameraParameters intrin, Matrix`1&lt;Single&gt;[] mats) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.StereoCalibrateMCvPoint3D32fArrayArrayPointFArrayArrayPointFArrayArrayIntrinsicCameraParametersIntrinsicCameraParametersSizeCALIB_TYPEMCvTermCriteriaExtrinsicCameraParametersOutMatrixOfDoubleOutMatrixOfDoubleOut">
            <summary>设置 CameraCalibration.StereoCalibrate(MCvPoint3D32f[][] objectPoints, PointF[][] imagePoints1, PointF[][] imagePoints2, IntrinsicCameraParameters intrinsicParam1, IntrinsicCameraParameters intrinsicParam2, Size imageSize, CALIB_TYPE flags, MCvTermCriteria termCrit, ExtrinsicCameraParameters&amp; extrinsicParams, Matrix`1&lt;Double&gt;&amp; foundamentalMatrix, Matrix`1&lt;Double&gt;&amp; essentialMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.ToMatrixMCvPoint3D32fArrayArray">
            <summary>设置 CameraCalibration.ToMatrix(MCvPoint3D32f[][] data) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCameraCalibration.ToMatrixPointFArrayArray">
            <summary>设置 CameraCalibration.ToMatrix(PointF[][] data) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCapture">
            <summary>Emgu.CV.Capture 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.#ctor(Emgu.CV.Capture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.Bind(Emgu.CV.ICapture)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.Bind(Emgu.CV.IDuplexCapture)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCapture.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.CaptureSourceGet">
            <summary>设置 Capture.get_CaptureSource() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Constructor">
            <summary>设置 Capture.Capture() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.ConstructorCaptureType">
            <summary>设置 Capture.Capture(CaptureType captureType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.ConstructorInt32">
            <summary>设置 Capture.Capture(Int32 camIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.ConstructorString">
            <summary>设置 Capture.Capture(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.DisposeObject">
            <summary>设置 Capture.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.DuplexQueryFrame">
            <summary>设置 Capture.DuplexQueryFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.DuplexQuerySmallFrame">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipHorizontalGet">
            <summary>设置 Capture.get_FlipHorizontal() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipHorizontalSetBoolean">
            <summary>设置 Capture.set_FlipHorizontal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipTypeGet">
            <summary>设置 Capture.get_FlipType() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipTypeSetFLIP">
            <summary>设置 Capture.set_FlipType(FLIP value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipVerticalGet">
            <summary>设置 Capture.get_FlipVertical() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.FlipVerticalSetBoolean">
            <summary>设置 Capture.set_FlipVertical(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.GetCapturePropertyCAP_PROP">
            <summary>设置 Capture.GetCaptureProperty(CAP_PROP index) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Grab">
            <summary>设置 Capture.Grab() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.HeightGet">
            <summary>设置 Capture.get_Height() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.ImageGrabbedAddCaptureGrabEventHandler">
            <summary>设置 Capture.add_ImageGrabbed(GrabEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.ImageGrabbedRemoveCaptureGrabEventHandler">
            <summary>设置 Capture.remove_ImageGrabbed(GrabEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Pause">
            <summary>设置 Capture.Pause() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.QueryFrame">
            <summary>设置 Capture.QueryFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.QueryGrayFrame">
            <summary>设置 Capture.QueryGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.QuerySmallFrame">
            <summary>设置 Capture.QuerySmallFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.RetrieveBgrFrame">
            <summary>设置 Capture.RetrieveBgrFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.RetrieveBgrFrameInt32">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.RetrieveGrayFrame">
            <summary>设置 Capture.RetrieveGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.RetrieveGrayFrameInt32">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Run">
            <summary>设置 Capture.Run() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.SetCapturePropertyCAP_PROPDouble">
            <summary>设置 Capture.SetCaptureProperty(CAP_PROP property, Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Start">
            <summary>设置 Capture.Start() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Stop">
            <summary>设置 Capture.Stop() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.Wait">
            <summary>设置 Capture.Wait() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.WidthGet">
            <summary>设置 Capture.get_Width() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCapture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.CaptureSourceGet">
            <summary>设置 Capture.get_CaptureSource() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.DisposeObject">
            <summary>设置 Capture.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.DuplexQueryFrame">
            <summary>设置 Capture.DuplexQueryFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.DuplexQuerySmallFrame">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipHorizontalGet">
            <summary>设置 Capture.get_FlipHorizontal() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipHorizontalSetBoolean">
            <summary>设置 Capture.set_FlipHorizontal(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipTypeGet">
            <summary>设置 Capture.get_FlipType() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipTypeSetFLIP">
            <summary>设置 Capture.set_FlipType(FLIP value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipVerticalGet">
            <summary>设置 Capture.get_FlipVertical() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.FlipVerticalSetBoolean">
            <summary>设置 Capture.set_FlipVertical(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.GetCapturePropertyCAP_PROP">
            <summary>设置 Capture.GetCaptureProperty(CAP_PROP index) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Grab">
            <summary>设置 Capture.Grab() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.HeightGet">
            <summary>设置 Capture.get_Height() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.ImageGrabbedAddCaptureGrabEventHandler">
            <summary>设置 Capture.add_ImageGrabbed(GrabEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.ImageGrabbedRemoveCaptureGrabEventHandler">
            <summary>设置 Capture.remove_ImageGrabbed(GrabEventHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Pause">
            <summary>设置 Capture.Pause() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.QueryFrame">
            <summary>设置 Capture.QueryFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.QueryGrayFrame">
            <summary>设置 Capture.QueryGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.QuerySmallFrame">
            <summary>设置 Capture.QuerySmallFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.RetrieveBgrFrame">
            <summary>设置 Capture.RetrieveBgrFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.RetrieveBgrFrameInt32">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.RetrieveGrayFrame">
            <summary>设置 Capture.RetrieveGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.RetrieveGrayFrameInt32">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Run">
            <summary>设置 Capture.Run() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.SetCapturePropertyCAP_PROPDouble">
            <summary>设置 Capture.SetCaptureProperty(CAP_PROP property, Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Start">
            <summary>设置 Capture.Start() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Stop">
            <summary>设置 Capture.Stop() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.Wait">
            <summary>设置 Capture.Wait() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCapture.AllInstances.WidthGet">
            <summary>设置 Capture.get_Width() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimColorInfoAttribute">
            <summary>Emgu.CV.ColorInfoAttribute 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimColorInfoAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimColorInfoAttribute.#ctor(Emgu.CV.ColorInfoAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimColorInfoAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimColorInfoAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.Constructor">
            <summary>设置 ColorInfoAttribute.ColorInfoAttribute() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.ConversionCodenameGet">
            <summary>设置 ColorInfoAttribute.get_ConversionCodename() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.ConversionCodenameSetString">
            <summary>设置 ColorInfoAttribute.set_ConversionCodename(String value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimColorInfoAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.AllInstances.ConversionCodenameGet">
            <summary>设置 ColorInfoAttribute.get_ConversionCodename() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimColorInfoAttribute.AllInstances.ConversionCodenameSetString">
            <summary>设置 ColorInfoAttribute.set_ConversionCodename(String value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimConvolutionKernelF">
            <summary>Emgu.CV.ConvolutionKernelF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.#ctor(Emgu.CV.ConvolutionKernelF)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.Bind(System.IEquatable{Emgu.CV.Matrix{System.Single}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimConvolutionKernelF.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.CenterGet">
            <summary>设置 ConvolutionKernelF.get_Center() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.CenterSetPoint">
            <summary>设置 ConvolutionKernelF.set_Center(Point value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.ConstructorInt32Int32">
            <summary>设置 ConvolutionKernelF.ConvolutionKernelF(Int32 rows, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.ConstructorMatrixOfSinglePoint">
            <summary>设置 ConvolutionKernelF.ConvolutionKernelF(Matrix`1&lt;Single&gt; kernel, Point center) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.ConstructorSingleMdArray2">
            <summary>设置 ConvolutionKernelF.ConvolutionKernelF(Single[,] kernel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.ConstructorSingleMdArray2Point">
            <summary>设置 ConvolutionKernelF.ConvolutionKernelF(Single[,] kernel, Point center) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.FlipFLIP">
            <summary>设置 ConvolutionKernelF.Flip(FLIP flipType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.Transpose">
            <summary>设置 ConvolutionKernelF.Transpose() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimConvolutionKernelF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.AllInstances.CenterGet">
            <summary>设置 ConvolutionKernelF.get_Center() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.AllInstances.CenterSetPoint">
            <summary>设置 ConvolutionKernelF.set_Center(Point value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.AllInstances.FlipFLIP">
            <summary>设置 ConvolutionKernelF.Flip(FLIP flipType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimConvolutionKernelF.AllInstances.Transpose">
            <summary>设置 ConvolutionKernelF.Transpose() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCvArray`1">
            <summary>Emgu.CV.CvArray`1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.#ctor(Emgu.CV.CvArray{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.ReduceOf1CvArrayOfM0REDUCE_DIMENSIONREDUCE_TYPE``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.CvArray{``0},Emgu.CV.CvEnum.REDUCE_DIMENSION,Emgu.CV.CvEnum.REDUCE_TYPE})">
            <summary>设置 CvArray`1.Reduce(CvArray`1&lt;!!0&gt; array1D, REDUCE_DIMENSION dim, REDUCE_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.BytesGet">
            <summary>设置 CvArray`1.get_Bytes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.BytesSetByteArray">
            <summary>设置 CvArray`1.set_Bytes(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.CheckRangeDoubleDoublePointRef">
            <summary>设置 CvArray`1.CheckRange(Double min, Double max, Point&amp; position) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.ColsGet">
            <summary>设置 CvArray`1.get_Cols() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.Constructor">
            <summary>设置 CvArray`1.CvArray`1() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.CopyToCvArrayOfT0">
            <summary>设置 CvArray`1.CopyTo(CvArray`1&lt;!0&gt; dest) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.DisposeObject">
            <summary>设置 CvArray`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.DotProductCvArrayOfT0">
            <summary>设置 CvArray`1.DotProduct(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.GetSchema">
            <summary>设置 CvArray`1.GetSchema() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.HeightGet">
            <summary>设置 CvArray`1.get_Height() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.NormGet">
            <summary>设置 CvArray`1.get_Norm() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.PtrGet">
            <summary>设置 CvArray`1.get_Ptr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.PtrSetIntPtr">
            <summary>设置 CvArray`1.set_Ptr(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.RowsGet">
            <summary>设置 CvArray`1.get_Rows() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SerializationCompressionRatioGet">
            <summary>设置 CvArray`1.get_SerializationCompressionRatio() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SerializationCompressionRatioSetInt32">
            <summary>设置 CvArray`1.set_SerializationCompressionRatio(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetIdentity">
            <summary>设置 CvArray`1.SetIdentity() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetIdentityMCvScalar">
            <summary>设置 CvArray`1.SetIdentity(MCvScalar value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetRandNormalMCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandNormal(MCvScalar mean, MCvScalar std) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetRandNormalUInt64MCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandNormal(UInt64 seed, MCvScalar mean, MCvScalar std) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetRandUniformMCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandUniform(MCvScalar floorValue, MCvScalar ceilingValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetRandUniformUInt64MCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandUniform(UInt64 seed, MCvScalar floorValue, MCvScalar ceilingValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetValueDouble">
            <summary>设置 CvArray`1.SetValue(Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetValueDoubleCvArrayOfByte">
            <summary>设置 CvArray`1.SetValue(Double val, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetValueMCvScalar">
            <summary>设置 CvArray`1.SetValue(MCvScalar val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetValueMCvScalarCvArrayOfByte">
            <summary>设置 CvArray`1.SetValue(MCvScalar val, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SetZero">
            <summary>设置 CvArray`1.SetZero() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SizeGet">
            <summary>设置 CvArray`1.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.SizeOfElementGet">
            <summary>设置 CvArray`1.get_SizeOfElement() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.StaticConstructor">
            <summary>设置 CvArray`1.CvArray`1() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.TraceGet">
            <summary>设置 CvArray`1.get_Trace() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.WidthGet">
            <summary>设置 CvArray`1.get_Width() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._AndCvArrayOfT0">
            <summary>设置 CvArray`1._And(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MaxCvArrayOfT0">
            <summary>设置 CvArray`1._Max(CvArray`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MaxDouble">
            <summary>设置 CvArray`1._Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MinCvArrayOfT0">
            <summary>设置 CvArray`1._Min(CvArray`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MinDouble">
            <summary>设置 CvArray`1._Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MulCvArrayOfT0">
            <summary>设置 CvArray`1._Mul(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._MulDouble">
            <summary>设置 CvArray`1._Mul(Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._Not">
            <summary>设置 CvArray`1._Not() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1._OrCvArrayOfT0">
            <summary>设置 CvArray`1._Or(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCvArray`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.ReduceOf1CvArrayOfM0REDUCE_DIMENSIONREDUCE_TYPE``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.CvArray{`0},Emgu.CV.CvArray{``0},Emgu.CV.CvEnum.REDUCE_DIMENSION,Emgu.CV.CvEnum.REDUCE_TYPE})">
            <summary>设置 CvArray`1.Reduce(CvArray`1&lt;!!0&gt; array1D, REDUCE_DIMENSION dim, REDUCE_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.BytesGet">
            <summary>设置 CvArray`1.get_Bytes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.BytesSetByteArray">
            <summary>设置 CvArray`1.set_Bytes(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.CheckRangeDoubleDoublePointRef">
            <summary>设置 CvArray`1.CheckRange(Double min, Double max, Point&amp; position) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.ColsGet">
            <summary>设置 CvArray`1.get_Cols() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.CopyToCvArrayOfT0">
            <summary>设置 CvArray`1.CopyTo(CvArray`1&lt;!0&gt; dest) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.DisposeObject">
            <summary>设置 CvArray`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.DotProductCvArrayOfT0">
            <summary>设置 CvArray`1.DotProduct(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.GetSchema">
            <summary>设置 CvArray`1.GetSchema() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.HeightGet">
            <summary>设置 CvArray`1.get_Height() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.NormGet">
            <summary>设置 CvArray`1.get_Norm() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.PtrGet">
            <summary>设置 CvArray`1.get_Ptr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.PtrSetIntPtr">
            <summary>设置 CvArray`1.set_Ptr(IntPtr value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.RowsGet">
            <summary>设置 CvArray`1.get_Rows() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SerializationCompressionRatioGet">
            <summary>设置 CvArray`1.get_SerializationCompressionRatio() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SerializationCompressionRatioSetInt32">
            <summary>设置 CvArray`1.set_SerializationCompressionRatio(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetIdentity">
            <summary>设置 CvArray`1.SetIdentity() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetIdentityMCvScalar">
            <summary>设置 CvArray`1.SetIdentity(MCvScalar value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetRandNormalMCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandNormal(MCvScalar mean, MCvScalar std) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetRandNormalUInt64MCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandNormal(UInt64 seed, MCvScalar mean, MCvScalar std) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetRandUniformMCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandUniform(MCvScalar floorValue, MCvScalar ceilingValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetRandUniformUInt64MCvScalarMCvScalar">
            <summary>设置 CvArray`1.SetRandUniform(UInt64 seed, MCvScalar floorValue, MCvScalar ceilingValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetValueDouble">
            <summary>设置 CvArray`1.SetValue(Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetValueDoubleCvArrayOfByte">
            <summary>设置 CvArray`1.SetValue(Double val, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetValueMCvScalar">
            <summary>设置 CvArray`1.SetValue(MCvScalar val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetValueMCvScalarCvArrayOfByte">
            <summary>设置 CvArray`1.SetValue(MCvScalar val, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SetZero">
            <summary>设置 CvArray`1.SetZero() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.SizeGet">
            <summary>设置 CvArray`1.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.TraceGet">
            <summary>设置 CvArray`1.get_Trace() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.WidthGet">
            <summary>设置 CvArray`1.get_Width() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._AndCvArrayOfT0">
            <summary>设置 CvArray`1._And(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MaxCvArrayOfT0">
            <summary>设置 CvArray`1._Max(CvArray`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MaxDouble">
            <summary>设置 CvArray`1._Max(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MinCvArrayOfT0">
            <summary>设置 CvArray`1._Min(CvArray`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MinDouble">
            <summary>设置 CvArray`1._Min(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MulCvArrayOfT0">
            <summary>设置 CvArray`1._Mul(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._MulDouble">
            <summary>设置 CvArray`1._Mul(Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._Not">
            <summary>设置 CvArray`1._Not() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvArray`1.AllInstances._OrCvArrayOfT0">
            <summary>设置 CvArray`1._Or(CvArray`1&lt;!0&gt; src2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimCvInvoke">
            <summary>Emgu.CV.CvInvoke 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvInvoke.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvInvoke.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvInvoke.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimCvInvoke.CV_READ_SEQ_ELEMOf1MCvSeqReaderRef``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{Emgu.CV.Structure.MCvSeqReader,``0})">
            <summary>设置 CvInvoke.CV_READ_SEQ_ELEM(MCvSeqReader&amp; reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CV_FOURCCCharCharCharChar">
            <summary>设置 CvInvoke.CV_FOURCC(Char c1, Char c2, Char c3, Char c4) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CV_IS_SET_ELEMIntPtr">
            <summary>设置 CvInvoke.CV_IS_SET_ELEM(IntPtr ptr) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CV_MAKETYPEInt32Int32">
            <summary>设置 CvInvoke.CV_MAKETYPE(Int32 depth, Int32 cn) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CV_NEXT_SEQ_ELEMInt32MCvSeqReaderRef">
            <summary>设置 CvInvoke.CV_NEXT_SEQ_ELEM(Int32 elemSize, MCvSeqReader&amp; reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CvErrorHandlerInt32StringStringStringInt32IntPtr">
            <summary>设置 CvInvoke.CvErrorHandler(Int32 status, String funcName, String errMsg, String fileName, Int32 line, IntPtr userData) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.CvIgnoreErrorErrorHandlerInt32StringStringStringInt32IntPtr">
            <summary>设置 CvInvoke.CvIgnoreErrorErrorHandler(Int32 status, String funcName, String errMsg, String fileName, Int32 line, IntPtr userData) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.GetModuleFormatString">
            <summary>设置 CvInvoke.GetModuleFormatString() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.LoadUnmanagedModulesStringStringArray">
            <summary>设置 CvInvoke.LoadUnmanagedModules(String loadDirectory, String[] unmanagedModules) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.StaticConstructor">
            <summary>设置 CvInvoke.CvInvoke() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvBoundingRectIntPtrBoolean">
            <summary>设置 CvInvoke.cvBoundingRect(IntPtr points, Boolean update) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCalcArrHistIntPtrArrayIntPtrBooleanIntPtr">
            <summary>设置 CvInvoke.cvCalcArrHist(IntPtr[] image, IntPtr hist, Boolean accumulate, IntPtr mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCalcEigenObjectsIntPtrArrayMCvTermCriteriaRefIntPtrArraySingleArrayIntPtr">
            <summary>设置 CvInvoke.cvCalcEigenObjects(IntPtr[] input, MCvTermCriteria&amp; calcLimit, IntPtr[] eigVecs, Single[] eigVals, IntPtr avg) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCalcHistIntPtrArrayIntPtrBooleanIntPtr">
            <summary>设置 CvInvoke.cvCalcHist(IntPtr[] image, IntPtr hist, Boolean accumulate, IntPtr mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCartToPolarIntPtrIntPtrIntPtrIntPtrBoolean">
            <summary>设置 CvInvoke.cvCartToPolar(IntPtr x, IntPtr y, IntPtr magnitude, IntPtr angle, Boolean angleInDegrees) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvContourPerimeterIntPtr">
            <summary>设置 CvInvoke.cvContourPerimeter(IntPtr contour) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvConvertIntPtrIntPtr">
            <summary>设置 CvInvoke.cvConvert(IntPtr src, IntPtr dest) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCreateHistInt32Int32ArrayHIST_TYPEIntPtrArrayBoolean">
            <summary>设置 CvInvoke.cvCreateHist(Int32 dims, Int32[] sizes, HIST_TYPE type, IntPtr[] ranges, Boolean uniform) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCreateSubdivDelaunay2DRectangleIntPtr">
            <summary>设置 CvInvoke.cvCreateSubdivDelaunay2D(Rectangle rect, IntPtr storage) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCreateVideoWriterStringInt32DoubleSizeBoolean">
            <summary>设置 CvInvoke.cvCreateVideoWriter(String filename, Int32 fourcc, Double fps, Size frameSize, Boolean isColor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvCvtPixToPlaneIntPtrIntPtrIntPtrIntPtrIntPtr">
            <summary>设置 CvInvoke.cvCvtPixToPlane(IntPtr src, IntPtr dst0, IntPtr dst1, IntPtr dst2, IntPtr dst3) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvEigenDecompositeIntPtrIntPtrArrayIntPtr">
            <summary>设置 CvInvoke.cvEigenDecomposite(IntPtr obj, IntPtr[] eigInput, IntPtr avg) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvEigenProjectionIntPtrArraySingleArrayIntPtrIntPtr">
            <summary>设置 CvInvoke.cvEigenProjection(IntPtr[] inputVecs, Single[] coeffs, IntPtr avg, IntPtr proj) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvEllipseBoxIntPtrMCvBox2DMCvScalarInt32LINE_TYPEInt32">
            <summary>设置 CvInvoke.cvEllipseBox(IntPtr img, MCvBox2D box, MCvScalar color, Int32 thickness, LINE_TYPE lineType, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvFlipIntPtrIntPtrFLIP">
            <summary>设置 CvInvoke.cvFlip(IntPtr src, IntPtr dst, FLIP flipType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvFloodFillIntPtrPointMCvScalarMCvScalarMCvScalarMCvConnectedCompOutCONNECTIVITYFLOODFILL_FLAGIntPtr">
            <summary>设置 CvInvoke.cvFloodFill(IntPtr src, Point seedPoint, MCvScalar newVal, MCvScalar loDiff, MCvScalar upDiff, MCvConnectedComp&amp; comp, CONNECTIVITY connectivity, FLOODFILL_FLAG flags, IntPtr mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvGetColIntPtrIntPtrInt32">
            <summary>设置 CvInvoke.cvGetCol(IntPtr arr, IntPtr submat, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvGetRowIntPtrIntPtrInt32">
            <summary>设置 CvInvoke.cvGetRow(IntPtr arr, IntPtr submat, Int32 row) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvLoadStringIntPtrStringIntPtr">
            <summary>设置 CvInvoke.cvLoad(String fileName, IntPtr memstorage, String name, IntPtr realName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvMixChannelsIntPtrArrayIntPtrArrayInt32Array">
            <summary>设置 CvInvoke.cvMixChannels(IntPtr[] src, IntPtr[] dst, Int32[] fromTo) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvNamedWindowString">
            <summary>设置 CvInvoke.cvNamedWindow(String name) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvPointPolygonTestIntPtrPointFBoolean">
            <summary>设置 CvInvoke.cvPointPolygonTest(IntPtr contour, PointF pt, Boolean measureDist) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvPolarToCartIntPtrIntPtrIntPtrIntPtrBoolean">
            <summary>设置 CvInvoke.cvPolarToCart(IntPtr magnitude, IntPtr angle, IntPtr x, IntPtr y, Boolean angleInDegrees) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvPolyLineIntPtrIntPtrArrayInt32ArrayInt32BooleanMCvScalarInt32LINE_TYPEInt32">
            <summary>设置 CvInvoke.cvPolyLine(IntPtr img, IntPtr[] pts, Int32[] npts, Int32 contours, Boolean isClosed, MCvScalar color, Int32 thickness, LINE_TYPE lineType, Int32 shift) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvQueryHistValue_1DIntPtrInt32">
            <summary>设置 CvInvoke.cvQueryHistValue_1D(IntPtr hist, Int32 idx0) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvQueryHistValue_2DIntPtrInt32Int32">
            <summary>设置 CvInvoke.cvQueryHistValue_2D(IntPtr hist, Int32 idx0, Int32 idx1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvQueryHistValue_3DIntPtrInt32Int32Int32">
            <summary>设置 CvInvoke.cvQueryHistValue_3D(IntPtr hist, Int32 idx0, Int32 idx1, Int32 idx2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvReadByNameIntPtrIntPtrString">
            <summary>设置 CvInvoke.cvReadByName(IntPtr fs, IntPtr map, String name) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvSeqSliceIntPtrMCvSliceIntPtrBoolean">
            <summary>设置 CvInvoke.cvSeqSlice(IntPtr seq, MCvSlice slice, IntPtr storage, Boolean copyData) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvSnakeImageIntPtrIntPtrInt32SingleArraySingleArraySingleArrayInt32SizeMCvTermCriteriaBoolean">
            <summary>设置 CvInvoke.cvSnakeImage(IntPtr image, IntPtr points, Int32 length, Single[] alpha, Single[] beta, Single[] gamma, Int32 coeffUsage, Size win, MCvTermCriteria criteria, Boolean calcGradient) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvSubSIntPtrMCvScalarIntPtrIntPtr">
            <summary>设置 CvInvoke.cvSubS(IntPtr src, MCvScalar value, IntPtr dst, IntPtr mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvUseOptimizedBoolean">
            <summary>设置 CvInvoke.cvUseOptimized(Boolean optimize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimCvInvoke.cvZeroIntPtr">
            <summary>设置 CvInvoke.cvZero(IntPtr arr) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimDenseHistogram">
            <summary>Emgu.CV.DenseHistogram 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.#ctor(Emgu.CV.DenseHistogram)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.BackProjectOf1ImageOfGrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}})">
            <summary>设置 DenseHistogram.BackProject(Image`2&lt;Gray,!!0&gt;[] srcs) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.BackProjectOf1MatrixOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Matrix{``0}[],Emgu.CV.Matrix{``0}})">
            <summary>设置 DenseHistogram.BackProject(Matrix`1&lt;!!0&gt;[] srcs) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.BackProjectPatchOf1ImageOfGrayM0ArraySizeHISTOGRAM_COMP_METHODDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],System.Drawing.Size,Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD,System.Double,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single}})">
            <summary>设置 DenseHistogram.BackProjectPatch(Image`2&lt;Gray,!!0&gt;[] srcs, Size patchSize, HISTOGRAM_COMP_METHOD method, Double factor) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.Bind(System.IEquatable{Emgu.CV.DenseHistogram})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.CalculateOf1ImageOfGrayM0ArrayBooleanImageOfGrayByte``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],System.Boolean,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}})">
            <summary>设置 DenseHistogram.Calculate(Image`2&lt;Gray,!!0&gt;[] imgs, Boolean accumulate, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.CalculateOf1MatrixOfM0ArrayBooleanMatrixOfByte``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.Matrix{``0}[],System.Boolean,Emgu.CV.Matrix{System.Byte}})">
            <summary>设置 DenseHistogram.Calculate(Matrix`1&lt;!!0&gt;[] matrices, Boolean accumulate, Matrix`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram._BackProjectb__2Of1ImageOfGrayM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Image{Emgu.CV.Structure.Gray,``0},System.IntPtr})">
            <summary>设置 DenseHistogram.&lt;BackProject&gt;b__2(Image`2&lt;Gray,!!0&gt; img) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.BinDimensionGet">
            <summary>设置 DenseHistogram.get_BinDimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.CalculateIImageArrayBooleanImageOfGrayByte">
            <summary>设置 DenseHistogram.Calculate(IImage[] imgs, Boolean accumulate, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.CalculateIntPtrArrayBooleanCvArrayOfByte">
            <summary>设置 DenseHistogram.Calculate(IntPtr[] arrays, Boolean accumulate, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.Clear">
            <summary>设置 DenseHistogram.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ConstructorInt32ArrayRangeFArray">
            <summary>设置 DenseHistogram.DenseHistogram(Int32[] binSizes, RangeF[] ranges) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ConstructorInt32RangeF">
            <summary>设置 DenseHistogram.DenseHistogram(Int32 binSize, RangeF range) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ConstructorSerializationInfoStreamingContext">
            <summary>设置 DenseHistogram.DenseHistogram(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.CopyDenseHistogram">
            <summary>设置 DenseHistogram.Copy(DenseHistogram destination) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.DimensionGet">
            <summary>设置 DenseHistogram.get_Dimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.DisposeObject">
            <summary>设置 DenseHistogram.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.EqualsDenseHistogram">
            <summary>设置 DenseHistogram.Equals(DenseHistogram other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 DenseHistogram.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.InitializeComponentMatNDOfSingleRangeFArray">
            <summary>设置 DenseHistogram.InitializeComponent(MatND`1&lt;Single&gt; matND, RangeF[] ranges) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ItemGetInt32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ItemGetInt32Int32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0, Int32 index1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ItemGetInt32Int32Int32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0, Int32 index1, Int32 index2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.MCvHistogramGet">
            <summary>设置 DenseHistogram.get_MCvHistogram() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.MatNDGet">
            <summary>设置 DenseHistogram.get_MatND() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.NormalizeDouble">
            <summary>设置 DenseHistogram.Normalize(Double factor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.RangesGet">
            <summary>设置 DenseHistogram.get_Ranges() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ReleaseManagedResources">
            <summary>设置 DenseHistogram.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.ThresholdDouble">
            <summary>设置 DenseHistogram.Threshold(Double thresh) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram._InitializeComponentb__0MCvMatNDDimension">
            <summary>设置 DenseHistogram.&lt;InitializeComponent&gt;b__0(Dimension d) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.BackProjectOf1ImageOfGrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.DenseHistogram,Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}})">
            <summary>设置 DenseHistogram.BackProject(Image`2&lt;Gray,!!0&gt;[] srcs) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.BackProjectOf1MatrixOfM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.DenseHistogram,Emgu.CV.Matrix{``0}[],Emgu.CV.Matrix{``0}})">
            <summary>设置 DenseHistogram.BackProject(Matrix`1&lt;!!0&gt;[] srcs) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.BackProjectPatchOf1ImageOfGrayM0ArraySizeHISTOGRAM_COMP_METHODDouble``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.DenseHistogram,Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],System.Drawing.Size,Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD,System.Double,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Single}})">
            <summary>设置 DenseHistogram.BackProjectPatch(Image`2&lt;Gray,!!0&gt;[] srcs, Size patchSize, HISTOGRAM_COMP_METHOD method, Double factor) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.CalculateOf1ImageOfGrayM0ArrayBooleanImageOfGrayByte``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.DenseHistogram,Emgu.CV.Image{Emgu.CV.Structure.Gray,``0}[],System.Boolean,Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}})">
            <summary>设置 DenseHistogram.Calculate(Image`2&lt;Gray,!!0&gt;[] imgs, Boolean accumulate, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.CalculateOf1MatrixOfM0ArrayBooleanMatrixOfByte``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Emgu.CV.DenseHistogram,Emgu.CV.Matrix{``0}[],System.Boolean,Emgu.CV.Matrix{System.Byte}})">
            <summary>设置 DenseHistogram.Calculate(Matrix`1&lt;!!0&gt;[] matrices, Boolean accumulate, Matrix`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.BinDimensionGet">
            <summary>设置 DenseHistogram.get_BinDimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.CalculateIImageArrayBooleanImageOfGrayByte">
            <summary>设置 DenseHistogram.Calculate(IImage[] imgs, Boolean accumulate, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.CalculateIntPtrArrayBooleanCvArrayOfByte">
            <summary>设置 DenseHistogram.Calculate(IntPtr[] arrays, Boolean accumulate, CvArray`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.Clear">
            <summary>设置 DenseHistogram.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.CopyDenseHistogram">
            <summary>设置 DenseHistogram.Copy(DenseHistogram destination) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.DimensionGet">
            <summary>设置 DenseHistogram.get_Dimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.DisposeObject">
            <summary>设置 DenseHistogram.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.EqualsDenseHistogram">
            <summary>设置 DenseHistogram.Equals(DenseHistogram other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 DenseHistogram.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.InitializeComponentMatNDOfSingleRangeFArray">
            <summary>设置 DenseHistogram.InitializeComponent(MatND`1&lt;Single&gt; matND, RangeF[] ranges) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.ItemGetInt32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.ItemGetInt32Int32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0, Int32 index1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.ItemGetInt32Int32Int32">
            <summary>设置 DenseHistogram.get_Item(Int32 index0, Int32 index1, Int32 index2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.MCvHistogramGet">
            <summary>设置 DenseHistogram.get_MCvHistogram() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.MatNDGet">
            <summary>设置 DenseHistogram.get_MatND() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.NormalizeDouble">
            <summary>设置 DenseHistogram.Normalize(Double factor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.RangesGet">
            <summary>设置 DenseHistogram.get_Ranges() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.ReleaseManagedResources">
            <summary>设置 DenseHistogram.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimDenseHistogram.AllInstances.ThresholdDouble">
            <summary>设置 DenseHistogram.Threshold(Double thresh) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimEigenObjectRecognizer">
            <summary>Emgu.CV.EigenObjectRecognizer 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.#ctor(Emgu.CV.EigenObjectRecognizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AverageImageGet">
            <summary>设置 EigenObjectRecognizer.get_AverageImage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AverageImageSetImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.set_AverageImage(Image`2&lt;Gray,Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.CalcEigenObjectsImageOfGrayByteArrayMCvTermCriteriaRefImageOfGraySingleArrayOutImageOfGraySingleOut">
            <summary>设置 EigenObjectRecognizer.CalcEigenObjects(Image`2&lt;Gray,Byte&gt;[] trainingImages, MCvTermCriteria&amp; termCrit, Image`2&lt;Gray,Single&gt;[]&amp; eigenImages, Image`2&lt;Gray,Single&gt;&amp; avg) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.Constructor">
            <summary>设置 EigenObjectRecognizer.EigenObjectRecognizer() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ConstructorImageOfGrayByteArrayMCvTermCriteriaRef">
            <summary>设置 EigenObjectRecognizer.EigenObjectRecognizer(Image`2&lt;Gray,Byte&gt;[] images, MCvTermCriteria&amp; termCrit) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ConstructorImageOfGrayByteArrayStringArrayDoubleMCvTermCriteriaRef">
            <summary>设置 EigenObjectRecognizer.EigenObjectRecognizer(Image`2&lt;Gray,Byte&gt;[] images, String[] labels, Double eigenDistanceThreshold, MCvTermCriteria&amp; termCrit) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ConstructorImageOfGrayByteArrayStringArrayMCvTermCriteriaRef">
            <summary>设置 EigenObjectRecognizer.EigenObjectRecognizer(Image`2&lt;Gray,Byte&gt;[] images, String[] labels, MCvTermCriteria&amp; termCrit) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenDecompositeImageOfGrayByteImageOfGraySingleArrayImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.EigenDecomposite(Image`2&lt;Gray,Byte&gt; src, Image`2&lt;Gray,Single&gt;[] eigenImages, Image`2&lt;Gray,Single&gt; avg) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenDistanceThresholdGet">
            <summary>设置 EigenObjectRecognizer.get_EigenDistanceThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenDistanceThresholdSetDouble">
            <summary>设置 EigenObjectRecognizer.set_EigenDistanceThreshold(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenImagesGet">
            <summary>设置 EigenObjectRecognizer.get_EigenImages() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenImagesSetImageOfGraySingleArray">
            <summary>设置 EigenObjectRecognizer.set_EigenImages(Image`2&lt;Gray,Single&gt;[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenProjectionSingleArray">
            <summary>设置 EigenObjectRecognizer.EigenProjection(Single[] eigenValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenValuesGet">
            <summary>设置 EigenObjectRecognizer.get_EigenValues() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.EigenValuesSetMatrixOfSingleArray">
            <summary>设置 EigenObjectRecognizer.set_EigenValues(Matrix`1&lt;Single&gt;[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.GenerateLabelsInt32">
            <summary>设置 EigenObjectRecognizer.GenerateLabels(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.GetEigenDistancesImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.GetEigenDistances(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.LabelsGet">
            <summary>设置 EigenObjectRecognizer.get_Labels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.LabelsSetStringArray">
            <summary>设置 EigenObjectRecognizer.set_Labels(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.RecognizeImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.Recognize(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer._CalcEigenObjectsb__2ImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.&lt;CalcEigenObjects&gt;b__2(Image`2&lt;Gray,Byte&gt; img) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer._CalcEigenObjectsb__3ImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.&lt;CalcEigenObjects&gt;b__3(Image`2&lt;Gray,Single&gt; img) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer._EigenDecompositeb__6ImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.&lt;EigenDecomposite&gt;b__6(Image`2&lt;Gray,Single&gt; img) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer._EigenProjectionb__8ImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.&lt;EigenProjection&gt;b__8(Image`2&lt;Gray,Single&gt; img) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer._ctorb__0ImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.&lt;.ctor&gt;b__0(Image`2&lt;Gray,Byte&gt; img) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.AverageImageGet">
            <summary>设置 EigenObjectRecognizer.get_AverageImage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.AverageImageSetImageOfGraySingle">
            <summary>设置 EigenObjectRecognizer.set_AverageImage(Image`2&lt;Gray,Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenDistanceThresholdGet">
            <summary>设置 EigenObjectRecognizer.get_EigenDistanceThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenDistanceThresholdSetDouble">
            <summary>设置 EigenObjectRecognizer.set_EigenDistanceThreshold(Double value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenImagesGet">
            <summary>设置 EigenObjectRecognizer.get_EigenImages() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenImagesSetImageOfGraySingleArray">
            <summary>设置 EigenObjectRecognizer.set_EigenImages(Image`2&lt;Gray,Single&gt;[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenProjectionSingleArray">
            <summary>设置 EigenObjectRecognizer.EigenProjection(Single[] eigenValue) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenValuesGet">
            <summary>设置 EigenObjectRecognizer.get_EigenValues() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.EigenValuesSetMatrixOfSingleArray">
            <summary>设置 EigenObjectRecognizer.set_EigenValues(Matrix`1&lt;Single&gt;[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.GetEigenDistancesImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.GetEigenDistances(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.LabelsGet">
            <summary>设置 EigenObjectRecognizer.get_Labels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.LabelsSetStringArray">
            <summary>设置 EigenObjectRecognizer.set_Labels(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances.RecognizeImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.Recognize(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.AllInstances._ctorb__0ImageOfGrayByte">
            <summary>设置 EigenObjectRecognizer.&lt;.ctor&gt;b__0(Image`2&lt;Gray,Byte&gt; img) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult">
            <summary>Emgu.CV.EigenObjectRecognizer+RecognitionResult 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.#ctor(Emgu.CV.EigenObjectRecognizer.RecognitionResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.Constructor">
            <summary>设置 RecognitionResult.RecognitionResult() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimEigenObjectRecognizer.ShimRecognitionResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimExtrinsicCameraParameters">
            <summary>Emgu.CV.ExtrinsicCameraParameters 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.#ctor(Emgu.CV.ExtrinsicCameraParameters)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.Bind(System.IEquatable{Emgu.CV.ExtrinsicCameraParameters})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.Constructor">
            <summary>设置 ExtrinsicCameraParameters.ExtrinsicCameraParameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.ConstructorRotationVector3DMatrixOfDouble">
            <summary>设置 ExtrinsicCameraParameters.ExtrinsicCameraParameters(RotationVector3D rotation, Matrix`1&lt;Double&gt; translation) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.EqualsExtrinsicCameraParameters">
            <summary>设置 ExtrinsicCameraParameters.Equals(ExtrinsicCameraParameters other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.ExtrinsicMatrixGet">
            <summary>设置 ExtrinsicCameraParameters.get_ExtrinsicMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.RotationVectorGet">
            <summary>设置 ExtrinsicCameraParameters.get_RotationVector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.RotationVectorSetRotationVector3D">
            <summary>设置 ExtrinsicCameraParameters.set_RotationVector(RotationVector3D value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.TranslationVectorGet">
            <summary>设置 ExtrinsicCameraParameters.get_TranslationVector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.TranslationVectorSetMatrixOfDouble">
            <summary>设置 ExtrinsicCameraParameters.set_TranslationVector(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.EqualsExtrinsicCameraParameters">
            <summary>设置 ExtrinsicCameraParameters.Equals(ExtrinsicCameraParameters other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.ExtrinsicMatrixGet">
            <summary>设置 ExtrinsicCameraParameters.get_ExtrinsicMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.RotationVectorGet">
            <summary>设置 ExtrinsicCameraParameters.get_RotationVector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.RotationVectorSetRotationVector3D">
            <summary>设置 ExtrinsicCameraParameters.set_RotationVector(RotationVector3D value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.TranslationVectorGet">
            <summary>设置 ExtrinsicCameraParameters.get_TranslationVector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimExtrinsicCameraParameters.AllInstances.TranslationVectorSetMatrixOfDouble">
            <summary>设置 ExtrinsicCameraParameters.set_TranslationVector(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimFeatureTree">
            <summary>Emgu.CV.FeatureTree 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimFeatureTree.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimFeatureTree.#ctor(Emgu.CV.FeatureTree)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimFeatureTree.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimFeatureTree.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimFeatureTree.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.ConstructorMatrixOfSingle">
            <summary>设置 FeatureTree.FeatureTree(Matrix`1&lt;Single&gt; descriptorMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.ConstructorMatrixOfSingleInt32DoubleDouble">
            <summary>设置 FeatureTree.FeatureTree(Matrix`1&lt;Single&gt; descriptors, Int32 naive, Double rho, Double tau) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.ConstructorSingleArrayArray">
            <summary>设置 FeatureTree.FeatureTree(Single[][] descriptors) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.ConstructorSingleArrayArrayInt32DoubleDouble">
            <summary>设置 FeatureTree.FeatureTree(Single[][] descriptors, Int32 naive, Double rho, Double tau) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.DescriptorMatrixGet">
            <summary>设置 FeatureTree.get_DescriptorMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.DisposeObject">
            <summary>设置 FeatureTree.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.FindFeaturesSingleArrayArrayMatrixOfInt32MatrixOfDoubleInt32Int32">
            <summary>设置 FeatureTree.FindFeatures(Single[][] descriptors, Matrix`1&lt;Int32&gt; results, Matrix`1&lt;Double&gt; dist, Int32 k, Int32 emax) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.ReleaseManagedResources">
            <summary>设置 FeatureTree.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimFeatureTree.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.AllInstances.DescriptorMatrixGet">
            <summary>设置 FeatureTree.get_DescriptorMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.AllInstances.DisposeObject">
            <summary>设置 FeatureTree.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.AllInstances.FindFeaturesSingleArrayArrayMatrixOfInt32MatrixOfDoubleInt32Int32">
            <summary>设置 FeatureTree.FindFeatures(Single[][] descriptors, Matrix`1&lt;Int32&gt; results, Matrix`1&lt;Double&gt; dist, Int32 k, Int32 emax) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimFeatureTree.AllInstances.ReleaseManagedResources">
            <summary>设置 FeatureTree.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHOGDescriptor">
            <summary>Emgu.CV.HOGDescriptor 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHOGDescriptor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHOGDescriptor.#ctor(Emgu.CV.HOGDescriptor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHOGDescriptor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHOGDescriptor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHOGDescriptor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.ComputeImageOfBgrByteSizeSizePointArray">
            <summary>设置 HOGDescriptor.Compute(Image`2&lt;Bgr,Byte&gt; image, Size winStride, Size padding, Point[] locations) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.Constructor">
            <summary>设置 HOGDescriptor.HOGDescriptor() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.ConstructorImageOfBgrByte">
            <summary>设置 HOGDescriptor.HOGDescriptor(Image`2&lt;Bgr,Byte&gt; template) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.ConstructorImageOfBgrByteSizeSizeSizeInt32Int32DoubleDoubleBoolean">
            <summary>设置 HOGDescriptor.HOGDescriptor(Image`2&lt;Bgr,Byte&gt; template, Size blockSize, Size blockStride, Size cellSize, Int32 nbins, Int32 derivAperture, Double winSigma, Double L2HysThreshold, Boolean gammaCorrection) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.ConstructorSizeSizeSizeSizeInt32Int32DoubleDoubleBoolean">
            <summary>设置 HOGDescriptor.HOGDescriptor(Size winSize, Size blockSize, Size blockStride, Size cellSize, Int32 nbins, Int32 derivAperture, Double winSigma, Double L2HysThreshold, Boolean gammaCorrection) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.DescriptorSizeGet">
            <summary>设置 HOGDescriptor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.DetectMultiScaleImageOfBgrByte">
            <summary>设置 HOGDescriptor.DetectMultiScale(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.DetectMultiScaleImageOfBgrByteDoubleSizeSizeDoubleInt32Boolean">
            <summary>设置 HOGDescriptor.DetectMultiScale(Image`2&lt;Bgr,Byte&gt; image, Double hitThreshold, Size winStride, Size padding, Double scale, Int32 finalThreshold, Boolean useMeanshiftGrouping) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.DisposeObject">
            <summary>设置 HOGDescriptor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.GetDefaultPeopleDetector">
            <summary>设置 HOGDescriptor.GetDefaultPeopleDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.SetSVMDetectorSingleArray">
            <summary>设置 HOGDescriptor.SetSVMDetector(Single[] detector) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor._DetectMultiScaleb__0MCvObjectDetection">
            <summary>设置 HOGDescriptor.&lt;DetectMultiScale&gt;b__0(MCvObjectDetection obj) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.ComputeImageOfBgrByteSizeSizePointArray">
            <summary>设置 HOGDescriptor.Compute(Image`2&lt;Bgr,Byte&gt; image, Size winStride, Size padding, Point[] locations) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.DescriptorSizeGet">
            <summary>设置 HOGDescriptor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.DetectMultiScaleImageOfBgrByte">
            <summary>设置 HOGDescriptor.DetectMultiScale(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.DetectMultiScaleImageOfBgrByteDoubleSizeSizeDoubleInt32Boolean">
            <summary>设置 HOGDescriptor.DetectMultiScale(Image`2&lt;Bgr,Byte&gt; image, Double hitThreshold, Size winStride, Size padding, Double scale, Int32 finalThreshold, Boolean useMeanshiftGrouping) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.DisposeObject">
            <summary>设置 HOGDescriptor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHOGDescriptor.AllInstances.SetSVMDetectorSingleArray">
            <summary>设置 HOGDescriptor.SetSVMDetector(Single[] detector) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHaarCascade">
            <summary>Emgu.CV.HaarCascade 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHaarCascade.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHaarCascade.#ctor(Emgu.CV.HaarCascade)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHaarCascade.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHaarCascade.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHaarCascade.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.ConstructorString">
            <summary>设置 HaarCascade.HaarCascade(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.DetectImageOfGrayByte">
            <summary>设置 HaarCascade.Detect(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.DetectImageOfGrayByteDoubleInt32HAAR_DETECTION_TYPESizeSize">
            <summary>设置 HaarCascade.Detect(Image`2&lt;Gray,Byte&gt; image, Double scaleFactor, Int32 minNeighbors, HAAR_DETECTION_TYPE flag, Size minSize, Size maxSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.DisposeObject">
            <summary>设置 HaarCascade.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHaarCascade.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.AllInstances.DetectImageOfGrayByte">
            <summary>设置 HaarCascade.Detect(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.AllInstances.DetectImageOfGrayByteDoubleInt32HAAR_DETECTION_TYPESizeSize">
            <summary>设置 HaarCascade.Detect(Image`2&lt;Gray,Byte&gt; image, Double scaleFactor, Int32 minNeighbors, HAAR_DETECTION_TYPE flag, Size minSize, Size maxSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHaarCascade.AllInstances.DisposeObject">
            <summary>设置 HaarCascade.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHomographyMatrix">
            <summary>Emgu.CV.HomographyMatrix 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.#ctor(Emgu.CV.HomographyMatrix)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.Bind(System.IEquatable{Emgu.CV.Matrix{System.Double}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimHomographyMatrix.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.Clone">
            <summary>设置 HomographyMatrix.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.Constructor">
            <summary>设置 HomographyMatrix.HomographyMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.ConstructorSerializationInfoStreamingContext">
            <summary>设置 HomographyMatrix.HomographyMatrix(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.IsValidDouble">
            <summary>设置 HomographyMatrix.IsValid(Double thresholdForDeterminant) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.ProjectPointsPointFArray">
            <summary>设置 HomographyMatrix.ProjectPoints(PointF[] points) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimHomographyMatrix.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.AllInstances.Clone">
            <summary>设置 HomographyMatrix.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.AllInstances.IsValidDouble">
            <summary>设置 HomographyMatrix.IsValid(Double thresholdForDeterminant) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimHomographyMatrix.AllInstances.ProjectPointsPointFArray">
            <summary>设置 HomographyMatrix.ProjectPoints(PointF[] points) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimIntrinsicCameraParameters">
            <summary>Emgu.CV.IntrinsicCameraParameters 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.#ctor(Emgu.CV.IntrinsicCameraParameters)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.Bind(System.IEquatable{Emgu.CV.IntrinsicCameraParameters})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.Constructor">
            <summary>设置 IntrinsicCameraParameters.IntrinsicCameraParameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.ConstructorInt32">
            <summary>设置 IntrinsicCameraParameters.IntrinsicCameraParameters(Int32 distortionCoeffsCount) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.DistortionCoeffsGet">
            <summary>设置 IntrinsicCameraParameters.get_DistortionCoeffs() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.DistortionCoeffsSetMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.set_DistortionCoeffs(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.EqualsIntrinsicCameraParameters">
            <summary>设置 IntrinsicCameraParameters.Equals(IntrinsicCameraParameters other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.InitUndistortMapInt32Int32MatrixOfSingleOutMatrixOfSingleOut">
            <summary>设置 IntrinsicCameraParameters.InitUndistortMap(Int32 width, Int32 height, Matrix`1&lt;Single&gt;&amp; mapx, Matrix`1&lt;Single&gt;&amp; mapy) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.IntrinsicMatrixGet">
            <summary>设置 IntrinsicCameraParameters.get_IntrinsicMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.IntrinsicMatrixSetMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.set_IntrinsicMatrix(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.UndistortPointFArrayMatrixOfDoubleMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.Undistort(PointF[] src, Matrix`1&lt;Double&gt; R, Matrix`1&lt;Double&gt; P) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.DistortionCoeffsGet">
            <summary>设置 IntrinsicCameraParameters.get_DistortionCoeffs() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.DistortionCoeffsSetMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.set_DistortionCoeffs(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.EqualsIntrinsicCameraParameters">
            <summary>设置 IntrinsicCameraParameters.Equals(IntrinsicCameraParameters other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.InitUndistortMapInt32Int32MatrixOfSingleOutMatrixOfSingleOut">
            <summary>设置 IntrinsicCameraParameters.InitUndistortMap(Int32 width, Int32 height, Matrix`1&lt;Single&gt;&amp; mapx, Matrix`1&lt;Single&gt;&amp; mapy) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.IntrinsicMatrixGet">
            <summary>设置 IntrinsicCameraParameters.get_IntrinsicMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.IntrinsicMatrixSetMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.set_IntrinsicMatrix(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimIntrinsicCameraParameters.AllInstances.UndistortPointFArrayMatrixOfDoubleMatrixOfDouble">
            <summary>设置 IntrinsicCameraParameters.Undistort(PointF[] src, Matrix`1&lt;Double&gt; R, Matrix`1&lt;Double&gt; P) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKalman">
            <summary>Emgu.CV.Kalman 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKalman.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKalman.#ctor(Emgu.CV.Kalman)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKalman.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKalman.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKalman.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ConstructorInt32Int32Int32">
            <summary>设置 Kalman.Kalman(Int32 dynamParams, Int32 measureParams, Int32 controlParams) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ConstructorMatrixOfSingleMatrixOfSingleMatrixOfSingleMatrixOfSingleMatrixOfSingle">
            <summary>设置 Kalman.Kalman(Matrix`1&lt;Single&gt; initialState, Matrix`1&lt;Single&gt; transitionMatrix, Matrix`1&lt;Single&gt; measurementMatrix, Matrix`1&lt;Single&gt; processNoiseCovarianceMatrix, Matrix`1&lt;Single&gt; measurementNoiseCovarianceMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ConstructorMatrixOfSingleMatrixOfSingleMatrixOfSingleMatrixOfSingleMatrixOfSingleMatrixOfSingle">
            <summary>设置 Kalman.Kalman(Matrix`1&lt;Single&gt; initialState, Matrix`1&lt;Single&gt; transitionMatrix, Matrix`1&lt;Single&gt; controlMatrix, Matrix`1&lt;Single&gt; measurementMatrix, Matrix`1&lt;Single&gt; processNoiseCovarianceMatrix, Matrix`1&lt;Single&gt; measurementNoiseCovarianceMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ControlMatrixGet">
            <summary>设置 Kalman.get_ControlMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ControlMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_ControlMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.CorrectMatrixOfSingle">
            <summary>设置 Kalman.Correct(Matrix`1&lt;Single&gt; measurement) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.CorrectedStateGet">
            <summary>设置 Kalman.get_CorrectedState() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.CorrectedStateSetMatrixOfSingle">
            <summary>设置 Kalman.set_CorrectedState(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.DisposeObject">
            <summary>设置 Kalman.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ErrorCovariancePostGet">
            <summary>设置 Kalman.get_ErrorCovariancePost() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ErrorCovariancePostSetMatrixOfSingle">
            <summary>设置 Kalman.set_ErrorCovariancePost(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ErrorCovariancePreGet">
            <summary>设置 Kalman.get_ErrorCovariancePre() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ErrorCovariancePreSetMatrixOfSingle">
            <summary>设置 Kalman.set_ErrorCovariancePre(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.GainGet">
            <summary>设置 Kalman.get_Gain() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.GainSetMatrixOfSingle">
            <summary>设置 Kalman.set_Gain(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.MCvKalmanGet">
            <summary>设置 Kalman.get_MCvKalman() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.MeasurementMatrixGet">
            <summary>设置 Kalman.get_MeasurementMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.MeasurementMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_MeasurementMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.MeasurementNoiseCovarianceGet">
            <summary>设置 Kalman.get_MeasurementNoiseCovariance() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.MeasurementNoiseCovarianceSetMatrixOfSingle">
            <summary>设置 Kalman.set_MeasurementNoiseCovariance(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.Predict">
            <summary>设置 Kalman.Predict() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.PredictMatrixOfSingle">
            <summary>设置 Kalman.Predict(Matrix`1&lt;Single&gt; control) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.PredictedStateGet">
            <summary>设置 Kalman.get_PredictedState() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.PredictedStateSetMatrixOfSingle">
            <summary>设置 Kalman.set_PredictedState(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ProcessNoiseCovarianceGet">
            <summary>设置 Kalman.get_ProcessNoiseCovariance() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ProcessNoiseCovarianceSetMatrixOfSingle">
            <summary>设置 Kalman.set_ProcessNoiseCovariance(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.ReleaseManagedResources">
            <summary>设置 Kalman.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.TransitionMatrixGet">
            <summary>设置 Kalman.get_TransitionMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.TransitionMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_TransitionMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKalman.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ControlMatrixGet">
            <summary>设置 Kalman.get_ControlMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ControlMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_ControlMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.CorrectMatrixOfSingle">
            <summary>设置 Kalman.Correct(Matrix`1&lt;Single&gt; measurement) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.CorrectedStateGet">
            <summary>设置 Kalman.get_CorrectedState() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.CorrectedStateSetMatrixOfSingle">
            <summary>设置 Kalman.set_CorrectedState(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.DisposeObject">
            <summary>设置 Kalman.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ErrorCovariancePostGet">
            <summary>设置 Kalman.get_ErrorCovariancePost() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ErrorCovariancePostSetMatrixOfSingle">
            <summary>设置 Kalman.set_ErrorCovariancePost(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ErrorCovariancePreGet">
            <summary>设置 Kalman.get_ErrorCovariancePre() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ErrorCovariancePreSetMatrixOfSingle">
            <summary>设置 Kalman.set_ErrorCovariancePre(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.GainGet">
            <summary>设置 Kalman.get_Gain() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.GainSetMatrixOfSingle">
            <summary>设置 Kalman.set_Gain(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.MCvKalmanGet">
            <summary>设置 Kalman.get_MCvKalman() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.MeasurementMatrixGet">
            <summary>设置 Kalman.get_MeasurementMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.MeasurementMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_MeasurementMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.MeasurementNoiseCovarianceGet">
            <summary>设置 Kalman.get_MeasurementNoiseCovariance() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.MeasurementNoiseCovarianceSetMatrixOfSingle">
            <summary>设置 Kalman.set_MeasurementNoiseCovariance(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.Predict">
            <summary>设置 Kalman.Predict() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.PredictMatrixOfSingle">
            <summary>设置 Kalman.Predict(Matrix`1&lt;Single&gt; control) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.PredictedStateGet">
            <summary>设置 Kalman.get_PredictedState() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.PredictedStateSetMatrixOfSingle">
            <summary>设置 Kalman.set_PredictedState(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ProcessNoiseCovarianceGet">
            <summary>设置 Kalman.get_ProcessNoiseCovariance() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ProcessNoiseCovarianceSetMatrixOfSingle">
            <summary>设置 Kalman.set_ProcessNoiseCovariance(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.ReleaseManagedResources">
            <summary>设置 Kalman.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.TransitionMatrixGet">
            <summary>设置 Kalman.get_TransitionMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKalman.AllInstances.TransitionMatrixSetMatrixOfSingle">
            <summary>设置 Kalman.set_TransitionMatrix(Matrix`1&lt;Single&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKinectCapture">
            <summary>Emgu.CV.KinectCapture 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.#ctor(Emgu.CV.KinectCapture)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.Bind(Emgu.CV.ICapture)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.Bind(Emgu.CV.IDuplexCapture)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.ConstructorKinectCaptureImageGeneratorOutputMode">
            <summary>设置 KinectCapture.KinectCapture(ImageGeneratorOutputMode outputMode) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.GetColorPointsImageOfGrayByte">
            <summary>设置 KinectCapture.GetColorPoints(Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.GetMaxDisparityDouble">
            <summary>设置 KinectCapture.GetMaxDisparity(Double minDistance) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.GetOpenNIContext">
            <summary>设置 KinectCapture.GetOpenNIContext() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveBgrFrame">
            <summary>设置 KinectCapture.RetrieveBgrFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveDepthMap">
            <summary>设置 KinectCapture.RetrieveDepthMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveDisparityMap">
            <summary>设置 KinectCapture.RetrieveDisparityMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveDisparityMap32f">
            <summary>设置 KinectCapture.RetrieveDisparityMap32f() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveGrayFrame">
            <summary>设置 KinectCapture.RetrieveGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrievePointCloudMap">
            <summary>设置 KinectCapture.RetrievePointCloudMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.RetrieveValidDepthMap">
            <summary>设置 KinectCapture.RetrieveValidDepthMap() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKinectCapture.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.GetColorPointsImageOfGrayByte">
            <summary>设置 KinectCapture.GetColorPoints(Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.GetMaxDisparityDouble">
            <summary>设置 KinectCapture.GetMaxDisparity(Double minDistance) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.GetOpenNIContext">
            <summary>设置 KinectCapture.GetOpenNIContext() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveBgrFrame">
            <summary>设置 KinectCapture.RetrieveBgrFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveDepthMap">
            <summary>设置 KinectCapture.RetrieveDepthMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveDisparityMap">
            <summary>设置 KinectCapture.RetrieveDisparityMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveDisparityMap32f">
            <summary>设置 KinectCapture.RetrieveDisparityMap32f() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveGrayFrame">
            <summary>设置 KinectCapture.RetrieveGrayFrame() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrievePointCloudMap">
            <summary>设置 KinectCapture.RetrievePointCloudMap() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.AllInstances.RetrieveValidDepthMap">
            <summary>设置 KinectCapture.RetrieveValidDepthMap() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint">
            <summary>Emgu.CV.KinectCapture+ColorPoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimKinectCapture.ShimColorPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimLatentSvmDetector">
            <summary>Emgu.CV.LatentSvmDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimLatentSvmDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimLatentSvmDetector.#ctor(Emgu.CV.LatentSvmDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimLatentSvmDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimLatentSvmDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimLatentSvmDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.ConstructorString">
            <summary>设置 LatentSvmDetector.LatentSvmDetector(String fileName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.DetectImageOfBgrByteSingle">
            <summary>设置 LatentSvmDetector.Detect(Image`2&lt;Bgr,Byte&gt; image, Single overlapThreshold) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.DisposeObject">
            <summary>设置 LatentSvmDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimLatentSvmDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.AllInstances.DetectImageOfBgrByteSingle">
            <summary>设置 LatentSvmDetector.Detect(Image`2&lt;Bgr,Byte&gt; image, Single overlapThreshold) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimLatentSvmDetector.AllInstances.DisposeObject">
            <summary>设置 LatentSvmDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMatND`1">
            <summary>Emgu.CV.MatND`1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.#ctor(Emgu.CV.MatND{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.Bind(System.IEquatable{Emgu.CV.MatND{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.ConvertOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.MatND{``0}})">
            <summary>设置 MatND`1.Convert() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllocateDataInt32Int32Int32">
            <summary>设置 MatND`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllocateHeader">
            <summary>设置 MatND`1.AllocateHeader() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.ConstructorInt32Array">
            <summary>设置 MatND`1.MatND`1(Int32[] sizes) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.ConstructorSerializationInfoStreamingContext">
            <summary>设置 MatND`1.MatND`1(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.CvDepthGet">
            <summary>设置 MatND`1.get_CvDepth() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.DisposeObject">
            <summary>设置 MatND`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.EqualsMatNDOfT0">
            <summary>设置 MatND`1.Equals(MatND`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.GetDimension">
            <summary>设置 MatND`1.GetDimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.MCvMatNDGet">
            <summary>设置 MatND`1.get_MCvMatND() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.ManagedArrayGet">
            <summary>设置 MatND`1.get_ManagedArray() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.ManagedArraySetArray">
            <summary>设置 MatND`1.set_ManagedArray(Array value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.NumberOfChannelsGet">
            <summary>设置 MatND`1.get_NumberOfChannels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.ReadXmlXmlReader">
            <summary>设置 MatND`1.ReadXml(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.WriteXmlXmlWriter">
            <summary>设置 MatND`1.WriteXml(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1._Equalsb__0Byte">
            <summary>设置 MatND`1.&lt;Equals&gt;b__0(Byte b) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMatND`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatND`1.AllInstances.ConvertOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.MatND{`0},Emgu.CV.MatND{``0}})">
            <summary>设置 MatND`1.Convert() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.AllocateDataInt32Int32Int32">
            <summary>设置 MatND`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.AllocateHeader">
            <summary>设置 MatND`1.AllocateHeader() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.DisposeObject">
            <summary>设置 MatND`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.EqualsMatNDOfT0">
            <summary>设置 MatND`1.Equals(MatND`1&lt;!0&gt; other) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.GetDimension">
            <summary>设置 MatND`1.GetDimension() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.MCvMatNDGet">
            <summary>设置 MatND`1.get_MCvMatND() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.ManagedArrayGet">
            <summary>设置 MatND`1.get_ManagedArray() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.ManagedArraySetArray">
            <summary>设置 MatND`1.set_ManagedArray(Array value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.NumberOfChannelsGet">
            <summary>设置 MatND`1.get_NumberOfChannels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.ReadXmlXmlReader">
            <summary>设置 MatND`1.ReadXml(XmlReader reader) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatND`1.AllInstances.WriteXmlXmlWriter">
            <summary>设置 MatND`1.WriteXml(XmlWriter writer) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMatrix`1">
            <summary>Emgu.CV.Matrix`1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.#ctor(Emgu.CV.Matrix{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.Bind(System.IEquatable{Emgu.CV.Matrix{`0}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.ConvertOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Matrix{``0}})">
            <summary>设置 Matrix`1.Convert() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AddMatrixOfT0">
            <summary>设置 Matrix`1.Add(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AddT0">
            <summary>设置 Matrix`1.Add(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AdditionOpDoubleMatrixOfT0">
            <summary>设置 Matrix`1.op_Addition(Double val, Matrix`1&lt;!0&gt; mat1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AdditionOpMatrixOfT0Double">
            <summary>设置 Matrix`1.op_Addition(Matrix`1&lt;!0&gt; mat1, Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AdditionOpMatrixOfT0MatrixOfT0">
            <summary>设置 Matrix`1.op_Addition(Matrix`1&lt;!0&gt; mat1, Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllocateHeader">
            <summary>设置 Matrix`1.AllocateHeader() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.Clone">
            <summary>设置 Matrix`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.CmpMatrixOfT0CMP_TYPE">
            <summary>设置 Matrix`1.Cmp(Matrix`1&lt;!0&gt; mat2, CMP_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConcateHorizontalMatrixOfT0">
            <summary>设置 Matrix`1.ConcateHorizontal(Matrix`1&lt;!0&gt; otherMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConcateVerticalMatrixOfT0">
            <summary>设置 Matrix`1.ConcateVertical(Matrix`1&lt;!0&gt; otherMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.Constructor">
            <summary>设置 Matrix`1.Matrix`1() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorInt32Int32">
            <summary>设置 Matrix`1.Matrix`1(Int32 rows, Int32 cols) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorInt32Int32Int32">
            <summary>设置 Matrix`1.Matrix`1(Int32 rows, Int32 cols, Int32 channels) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorInt32Int32Int32IntPtrInt32">
            <summary>设置 Matrix`1.Matrix`1(Int32 rows, Int32 cols, Int32 channels, IntPtr data, Int32 step) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorInt32Int32IntPtr">
            <summary>设置 Matrix`1.Matrix`1(Int32 rows, Int32 cols, IntPtr data) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorInt32Int32IntPtrInt32">
            <summary>设置 Matrix`1.Matrix`1(Int32 rows, Int32 cols, IntPtr data, Int32 step) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorSerializationInfoStreamingContext">
            <summary>设置 Matrix`1.Matrix`1(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorSize">
            <summary>设置 Matrix`1.Matrix`1(Size size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorT0Array">
            <summary>设置 Matrix`1.Matrix`1(!0[] data) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ConstructorT0MdArray2">
            <summary>设置 Matrix`1.Matrix`1(!0[,] data) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.CopyBlank">
            <summary>设置 Matrix`1.CopyBlank() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.DataGet">
            <summary>设置 Matrix`1.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.DataSetT0MdArray2">
            <summary>设置 Matrix`1.set_Data(!0[,] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.DetGet">
            <summary>设置 Matrix`1.get_Det() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.DivisionOpMatrixOfT0Double">
            <summary>设置 Matrix`1.op_Division(Matrix`1&lt;!0&gt; mat1, Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.EqualsMatrixOfT0">
            <summary>设置 Matrix`1.Equals(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetColInt32">
            <summary>设置 Matrix`1.GetCol(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetColsInt32Int32">
            <summary>设置 Matrix`1.GetCols(Int32 startCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetDiag">
            <summary>设置 Matrix`1.GetDiag() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetDiagInt32">
            <summary>设置 Matrix`1.GetDiag(Int32 diag) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetRowInt32">
            <summary>设置 Matrix`1.GetRow(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetRowsInt32Int32Int32">
            <summary>设置 Matrix`1.GetRows(Int32 startRow, Int32 endRow, Int32 deltaRow) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.GetSubRectRectangle">
            <summary>设置 Matrix`1.GetSubRect(Rectangle rect) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ItemGetInt32Int32">
            <summary>设置 Matrix`1.get_Item(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ItemSetInt32Int32T0">
            <summary>设置 Matrix`1.set_Item(Int32 row, Int32 col, !0 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MCvMatGet">
            <summary>设置 Matrix`1.get_MCvMat() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MulDouble">
            <summary>设置 Matrix`1.Mul(Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MulMatrixOfT0">
            <summary>设置 Matrix`1.Mul(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MultiplyOpDoubleMatrixOfT0">
            <summary>设置 Matrix`1.op_Multiply(Double val, Matrix`1&lt;!0&gt; mat1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MultiplyOpMatrixOfT0Double">
            <summary>设置 Matrix`1.op_Multiply(Matrix`1&lt;!0&gt; mat1, Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.MultiplyOpMatrixOfT0MatrixOfT0">
            <summary>设置 Matrix`1.op_Multiply(Matrix`1&lt;!0&gt; mat1, Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.RemoveColsInt32Int32">
            <summary>设置 Matrix`1.RemoveCols(Int32 startCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.RemoveRowsInt32Int32">
            <summary>设置 Matrix`1.RemoveRows(Int32 startRow, Int32 endRow) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.ReshapeInt32Int32">
            <summary>设置 Matrix`1.Reshape(Int32 newChannels, Int32 newRows) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.Split">
            <summary>设置 Matrix`1.Split() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubMatrixOfT0">
            <summary>设置 Matrix`1.Sub(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubRT0">
            <summary>设置 Matrix`1.SubR(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubT0">
            <summary>设置 Matrix`1.Sub(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubtractionOpDoubleMatrixOfT0">
            <summary>设置 Matrix`1.op_Subtraction(Double val, Matrix`1&lt;!0&gt; mat1) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubtractionOpMatrixOfT0Double">
            <summary>设置 Matrix`1.op_Subtraction(Matrix`1&lt;!0&gt; mat1, Double val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SubtractionOpMatrixOfT0MatrixOfT0">
            <summary>设置 Matrix`1.op_Subtraction(Matrix`1&lt;!0&gt; mat1, Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SumGet">
            <summary>设置 Matrix`1.get_Sum() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.SystemICloneableClone">
            <summary>设置 Matrix`1.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.Transpose">
            <summary>设置 Matrix`1.Transpose() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMatrix`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ConvertOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Emgu.CV.Matrix{`0},Emgu.CV.Matrix{``0}})">
            <summary>设置 Matrix`1.Convert() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.AddMatrixOfT0">
            <summary>设置 Matrix`1.Add(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.AddT0">
            <summary>设置 Matrix`1.Add(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.AllocateHeader">
            <summary>设置 Matrix`1.AllocateHeader() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.Clone">
            <summary>设置 Matrix`1.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.CmpMatrixOfT0CMP_TYPE">
            <summary>设置 Matrix`1.Cmp(Matrix`1&lt;!0&gt; mat2, CMP_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ConcateHorizontalMatrixOfT0">
            <summary>设置 Matrix`1.ConcateHorizontal(Matrix`1&lt;!0&gt; otherMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ConcateVerticalMatrixOfT0">
            <summary>设置 Matrix`1.ConcateVertical(Matrix`1&lt;!0&gt; otherMatrix) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.CopyBlank">
            <summary>设置 Matrix`1.CopyBlank() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.DataGet">
            <summary>设置 Matrix`1.get_Data() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.DataSetT0MdArray2">
            <summary>设置 Matrix`1.set_Data(!0[,] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.DetGet">
            <summary>设置 Matrix`1.get_Det() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.EqualsMatrixOfT0">
            <summary>设置 Matrix`1.Equals(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetColInt32">
            <summary>设置 Matrix`1.GetCol(Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetColsInt32Int32">
            <summary>设置 Matrix`1.GetCols(Int32 startCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetDiag">
            <summary>设置 Matrix`1.GetDiag() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetDiagInt32">
            <summary>设置 Matrix`1.GetDiag(Int32 diag) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetRowInt32">
            <summary>设置 Matrix`1.GetRow(Int32 row) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetRowsInt32Int32Int32">
            <summary>设置 Matrix`1.GetRows(Int32 startRow, Int32 endRow, Int32 deltaRow) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.GetSubRectRectangle">
            <summary>设置 Matrix`1.GetSubRect(Rectangle rect) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ItemGetInt32Int32">
            <summary>设置 Matrix`1.get_Item(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ItemSetInt32Int32T0">
            <summary>设置 Matrix`1.set_Item(Int32 row, Int32 col, !0 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.MCvMatGet">
            <summary>设置 Matrix`1.get_MCvMat() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.MulDouble">
            <summary>设置 Matrix`1.Mul(Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.MulMatrixOfT0">
            <summary>设置 Matrix`1.Mul(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.RemoveColsInt32Int32">
            <summary>设置 Matrix`1.RemoveCols(Int32 startCol, Int32 endCol) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.RemoveRowsInt32Int32">
            <summary>设置 Matrix`1.RemoveRows(Int32 startRow, Int32 endRow) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.ReshapeInt32Int32">
            <summary>设置 Matrix`1.Reshape(Int32 newChannels, Int32 newRows) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.Split">
            <summary>设置 Matrix`1.Split() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.SubMatrixOfT0">
            <summary>设置 Matrix`1.Sub(Matrix`1&lt;!0&gt; mat2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.SubRT0">
            <summary>设置 Matrix`1.SubR(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.SubT0">
            <summary>设置 Matrix`1.Sub(!0 val) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.SumGet">
            <summary>设置 Matrix`1.get_Sum() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.SystemICloneableClone">
            <summary>设置 Matrix`1.System.ICloneable.Clone() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMatrix`1.AllInstances.Transpose">
            <summary>设置 Matrix`1.Transpose() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMemStorage">
            <summary>Emgu.CV.MemStorage 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMemStorage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMemStorage.#ctor(Emgu.CV.MemStorage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMemStorage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMemStorage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMemStorage.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.Clear">
            <summary>设置 MemStorage.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.Constructor">
            <summary>设置 MemStorage.MemStorage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.ConstructorIntPtr">
            <summary>设置 MemStorage.MemStorage(IntPtr ptr) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.CreateChildMemStorage">
            <summary>设置 MemStorage.CreateChildMemStorage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.DisposeObject">
            <summary>设置 MemStorage.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMemStorage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.AllInstances.Clear">
            <summary>设置 MemStorage.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.AllInstances.CreateChildMemStorage">
            <summary>设置 MemStorage.CreateChildMemStorage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMemStorage.AllInstances.DisposeObject">
            <summary>设置 MemStorage.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMotionHistory">
            <summary>Emgu.CV.MotionHistory 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMotionHistory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMotionHistory.#ctor(Emgu.CV.MotionHistory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMotionHistory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMotionHistory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimMotionHistory.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.ConstructorDoubleDoubleDouble">
            <summary>设置 MotionHistory.MotionHistory(Double mhiDuration, Double maxTimeDelta, Double minTimeDelta) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.ConstructorDoubleDoubleDoubleDateTime">
            <summary>设置 MotionHistory.MotionHistory(Double mhiDuration, Double maxTimeDelta, Double minTimeDelta, DateTime startTime) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.DisposeObject">
            <summary>设置 MotionHistory.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.GetMotionComponentsMemStorage">
            <summary>设置 MotionHistory.GetMotionComponents(MemStorage storage) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.MaskGet">
            <summary>设置 MotionHistory.get_Mask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.MotionInfoRectangleDoubleOutDoubleOut">
            <summary>设置 MotionHistory.MotionInfo(Rectangle motionRectangle, Double&amp; angle, Double&amp; motionPixelCount) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.ReleaseManagedResources">
            <summary>设置 MotionHistory.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.SegmentMaskGet">
            <summary>设置 MotionHistory.get_SegmentMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.UpdateImageOfGrayByte">
            <summary>设置 MotionHistory.Update(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.UpdateImageOfGrayByteDateTime">
            <summary>设置 MotionHistory.Update(Image`2&lt;Gray,Byte&gt; foregroundMask, DateTime timestamp) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimMotionHistory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.DisposeObject">
            <summary>设置 MotionHistory.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.GetMotionComponentsMemStorage">
            <summary>设置 MotionHistory.GetMotionComponents(MemStorage storage) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.MaskGet">
            <summary>设置 MotionHistory.get_Mask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.MotionInfoRectangleDoubleOutDoubleOut">
            <summary>设置 MotionHistory.MotionInfo(Rectangle motionRectangle, Double&amp; angle, Double&amp; motionPixelCount) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.ReleaseManagedResources">
            <summary>设置 MotionHistory.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.SegmentMaskGet">
            <summary>设置 MotionHistory.get_SegmentMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.UpdateImageOfGrayByte">
            <summary>设置 MotionHistory.Update(Image`2&lt;Gray,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimMotionHistory.AllInstances.UpdateImageOfGrayByteDateTime">
            <summary>设置 MotionHistory.Update(Image`2&lt;Gray,Byte&gt; foregroundMask, DateTime timestamp) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimOctree">
            <summary>Emgu.CV.Octree 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOctree.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOctree.#ctor(Emgu.CV.Octree)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOctree.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOctree.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOctree.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.BuildTreeMCvPoint3D32fArrayInt32Int32">
            <summary>设置 Octree.BuildTree(MCvPoint3D32f[] points, Int32 maxLevels, Int32 minPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.Constructor">
            <summary>设置 Octree.Octree() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.ConstructorMCvPoint3D32fArrayInt32Int32">
            <summary>设置 Octree.Octree(MCvPoint3D32f[] points, Int32 maxLevels, Int32 minPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.DisposeObject">
            <summary>设置 Octree.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.GetPointsWithinSphereMCvPoint3D32fSingle">
            <summary>设置 Octree.GetPointsWithinSphere(MCvPoint3D32f center, Single radius) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.ReleaseManagedResources">
            <summary>设置 Octree.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimOctree.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.AllInstances.BuildTreeMCvPoint3D32fArrayInt32Int32">
            <summary>设置 Octree.BuildTree(MCvPoint3D32f[] points, Int32 maxLevels, Int32 minPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.AllInstances.DisposeObject">
            <summary>设置 Octree.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.AllInstances.GetPointsWithinSphereMCvPoint3D32fSingle">
            <summary>设置 Octree.GetPointsWithinSphere(MCvPoint3D32f center, Single radius) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOctree.AllInstances.ReleaseManagedResources">
            <summary>设置 Octree.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimOpticalFlow">
            <summary>Emgu.CV.OpticalFlow 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOpticalFlow.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOpticalFlow.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimOpticalFlow.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.BMImageOfGrayByteImageOfGrayByteSizeSizeSizeBooleanImageOfGraySingleImageOfGraySingle">
            <summary>设置 OpticalFlow.BM(Image`2&lt;Gray,Byte&gt; prev, Image`2&lt;Gray,Byte&gt; curr, Size blockSize, Size shiftSize, Size maxRange, Boolean usePrevious, Image`2&lt;Gray,Single&gt; velx, Image`2&lt;Gray,Single&gt; vely) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.FarnebackImageOfGrayByteImageOfGrayByteImageOfGraySingleImageOfGraySingleDoubleInt32Int32Int32Int32DoubleOPTICALFLOW_FARNEBACK_FLAG">
            <summary>设置 OpticalFlow.Farneback(Image`2&lt;Gray,Byte&gt; prev0, Image`2&lt;Gray,Byte&gt; next0, Image`2&lt;Gray,Single&gt; flowX, Image`2&lt;Gray,Single&gt; flowY, Double pyrScale, Int32 levels, Int32 winSize, Int32 iterations, Int32 polyN, Double polySigma, OPTICALFLOW_FARNEBACK_FLAG flags) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.HSImageOfGrayByteImageOfGrayByteBooleanImageOfGraySingleImageOfGraySingleDoubleMCvTermCriteria">
            <summary>设置 OpticalFlow.HS(Image`2&lt;Gray,Byte&gt; prev, Image`2&lt;Gray,Byte&gt; curr, Boolean usePrevious, Image`2&lt;Gray,Single&gt; velx, Image`2&lt;Gray,Single&gt; vely, Double lambda, MCvTermCriteria criteria) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.LKImageOfGrayByteImageOfGrayByteSizeImageOfGraySingleImageOfGraySingle">
            <summary>设置 OpticalFlow.LK(Image`2&lt;Gray,Byte&gt; prev, Image`2&lt;Gray,Byte&gt; curr, Size winSize, Image`2&lt;Gray,Single&gt; velx, Image`2&lt;Gray,Single&gt; vely) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.PyrLKImageOfGrayByteImageOfGrayByteImageOfGrayByteImageOfGrayBytePointFArraySizeInt32MCvTermCriteriaLKFLOW_TYPEPointFArrayOutByteArrayOutSingleArrayOut">
            <summary>设置 OpticalFlow.PyrLK(Image`2&lt;Gray,Byte&gt; prev, Image`2&lt;Gray,Byte&gt; curr, Image`2&lt;Gray,Byte&gt; prevPyrBuffer, Image`2&lt;Gray,Byte&gt; currPyrBuffer, PointF[] prevFeatures, Size winSize, Int32 level, MCvTermCriteria criteria, LKFLOW_TYPE flags, PointF[]&amp; currFeatures, Byte[]&amp; status, Single[]&amp; trackError) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimOpticalFlow.PyrLKImageOfGrayByteImageOfGrayBytePointFArraySizeInt32MCvTermCriteriaPointFArrayOutByteArrayOutSingleArrayOut">
            <summary>设置 OpticalFlow.PyrLK(Image`2&lt;Gray,Byte&gt; prev, Image`2&lt;Gray,Byte&gt; curr, PointF[] prevFeatures, Size winSize, Int32 level, MCvTermCriteria criteria, PointF[]&amp; currFeatures, Byte[]&amp; status, Single[]&amp; trackError) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimPlanarSubdivision">
            <summary>Emgu.CV.PlanarSubdivision 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.#ctor(Emgu.CV.PlanarSubdivision)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPlanarSubdivision.Bind(System.Collections.Generic.IEnumerable{Emgu.CV.Structure.MCvQuadEdge2D})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.ConstructorPointFArray">
            <summary>设置 PlanarSubdivision.PlanarSubdivision(PointF[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.ConstructorPointFArrayBoolean">
            <summary>设置 PlanarSubdivision.PlanarSubdivision(PointF[] points, Boolean silent) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.ConstructorRectangleRef">
            <summary>设置 PlanarSubdivision.PlanarSubdivision(Rectangle&amp; roi) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.DisposeObject">
            <summary>设置 PlanarSubdivision.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.FindNearestPoint2DPointFRef">
            <summary>设置 PlanarSubdivision.FindNearestPoint2D(PointF&amp; point) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.GetDelaunayTriangles">
            <summary>设置 PlanarSubdivision.GetDelaunayTriangles() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.GetDelaunayTrianglesBoolean">
            <summary>设置 PlanarSubdivision.GetDelaunayTriangles(Boolean includeVirtualPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.GetEnumerator">
            <summary>设置 PlanarSubdivision.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.GetVoronoiFacets">
            <summary>设置 PlanarSubdivision.GetVoronoiFacets() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.GetVoronoiFacetsHelper">
            <summary>设置 PlanarSubdivision.GetVoronoiFacetsHelper() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.InsertPointF">
            <summary>设置 PlanarSubdivision.Insert(PointF point) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.InsertPointFArrayBoolean">
            <summary>设置 PlanarSubdivision.Insert(PointF[] points, Boolean silent) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.MCvSubdiv2DGet">
            <summary>设置 PlanarSubdivision.get_MCvSubdiv2D() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.ReleaseManagedResources">
            <summary>设置 PlanarSubdivision.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PlanarSubdivision.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.DisposeObject">
            <summary>设置 PlanarSubdivision.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.FindNearestPoint2DPointFRef">
            <summary>设置 PlanarSubdivision.FindNearestPoint2D(PointF&amp; point) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.GetDelaunayTriangles">
            <summary>设置 PlanarSubdivision.GetDelaunayTriangles() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.GetDelaunayTrianglesBoolean">
            <summary>设置 PlanarSubdivision.GetDelaunayTriangles(Boolean includeVirtualPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.GetEnumerator">
            <summary>设置 PlanarSubdivision.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.GetVoronoiFacets">
            <summary>设置 PlanarSubdivision.GetVoronoiFacets() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.GetVoronoiFacetsHelper">
            <summary>设置 PlanarSubdivision.GetVoronoiFacetsHelper() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.InsertPointF">
            <summary>设置 PlanarSubdivision.Insert(PointF point) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.InsertPointFArrayBoolean">
            <summary>设置 PlanarSubdivision.Insert(PointF[] points, Boolean silent) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.MCvSubdiv2DGet">
            <summary>设置 PlanarSubdivision.get_MCvSubdiv2D() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.ReleaseManagedResources">
            <summary>设置 PlanarSubdivision.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPlanarSubdivision.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 PlanarSubdivision.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimPointCollection">
            <summary>Emgu.CV.PointCollection 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPointCollection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPointCollection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimPointCollection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.BoundingRectanglePointFArray">
            <summary>设置 PointCollection.BoundingRectangle(PointF[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.ConvexHullPointFArrayMemStorageORIENTATION">
            <summary>设置 PointCollection.ConvexHull(PointF[] points, MemStorage storage, ORIENTATION orientation) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.EllipseLeastSquareFittingPointFArray">
            <summary>设置 PointCollection.EllipseLeastSquareFitting(PointF[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.GeneratePointCloudEllipseInt32">
            <summary>设置 PointCollection.GeneratePointCloud(Ellipse e, Int32 numberOfPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.Line2DFittingPointFArrayDIST_TYPEPointFOutPointFOut">
            <summary>设置 PointCollection.Line2DFitting(PointF[] points, DIST_TYPE type, PointF&amp; normalizedDirection, PointF&amp; aPointOnLine) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.MinAreaRectPointFArray">
            <summary>设置 PointCollection.MinAreaRect(PointF[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.MinEnclosingCirclePointFArray">
            <summary>设置 PointCollection.MinEnclosingCircle(PointF[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.PolyLinePointArrayBoolean">
            <summary>设置 PointCollection.PolyLine(Point[] points, Boolean closed) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.PolyLinePointFArrayBoolean">
            <summary>设置 PointCollection.PolyLine(PointF[] points, Boolean closed) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.ReprojectImageTo3DImageOfGrayByteMatrixOfDouble">
            <summary>设置 PointCollection.ReprojectImageTo3D(Image`2&lt;Gray,Byte&gt; disparity, Matrix`1&lt;Double&gt; Q) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimPointCollection.ReprojectImageTo3DImageOfGrayInt16MatrixOfDouble">
            <summary>设置 PointCollection.ReprojectImageTo3D(Image`2&lt;Gray,Int16&gt; disparity, Matrix`1&lt;Double&gt; Q) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimQuaternions">
            <summary>Emgu.CV.Quaternions 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimQuaternions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimQuaternions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimQuaternions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimQuaternions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimQuaternions.MultiplyOpQuaternionsQuaternions">
            <summary>设置 Quaternions.op_Multiply(Quaternions q1, Quaternions q2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimQuaternions.StaticConstructor">
            <summary>设置 Quaternions.Quaternions() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimQuaternions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina">
            <summary>Emgu.CV.Retina 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.#ctor(Emgu.CV.Retina)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ClearBuffers">
            <summary>设置 Retina.ClearBuffers() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ConstructorSize">
            <summary>设置 Retina.Retina(Size inputSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ConstructorSizeBooleanRetinaColorSamplingMethodBooleanDoubleDouble">
            <summary>设置 Retina.Retina(Size inputSize, Boolean colorMode, ColorSamplingMethod colorSamplingMethod, Boolean useRetinaLogSampling, Double reductionFactor, Double samplingStrength) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.DisposeObject">
            <summary>设置 Retina.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.GetMagno">
            <summary>设置 Retina.GetMagno() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.GetParvo">
            <summary>设置 Retina.GetParvo() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ParametersGet">
            <summary>设置 Retina.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ParametersSetRetinaRetinaParameters">
            <summary>设置 Retina.set_Parameters(RetinaParameters value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.RunImageOfBgrByte">
            <summary>设置 Retina.Run(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.ClearBuffers">
            <summary>设置 Retina.ClearBuffers() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.DisposeObject">
            <summary>设置 Retina.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.GetMagno">
            <summary>设置 Retina.GetMagno() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.GetParvo">
            <summary>设置 Retina.GetParvo() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.ParametersGet">
            <summary>设置 Retina.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.ParametersSetRetinaRetinaParameters">
            <summary>设置 Retina.set_Parameters(RetinaParameters value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.AllInstances.RunImageOfBgrByte">
            <summary>设置 Retina.Run(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters">
            <summary>Emgu.CV.Retina+IplMagnoParameters 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimIplMagnoParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters">
            <summary>Emgu.CV.Retina+OPLandIplParvoParameters 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimOPLandIplParvoParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters">
            <summary>Emgu.CV.Retina+RetinaParameters 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRetina.ShimRetinaParameters.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRotationVector3D">
            <summary>Emgu.CV.RotationVector3D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.#ctor(Emgu.CV.RotationVector3D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.Bind(System.Xml.Serialization.IXmlSerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.Bind(System.ICloneable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.Bind(System.IEquatable{Emgu.CV.Matrix{System.Double}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimRotationVector3D.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.Constructor">
            <summary>设置 RotationVector3D.RotationVector3D() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.ConstructorDoubleArray">
            <summary>设置 RotationVector3D.RotationVector3D(Double[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.ConstructorSerializationInfoStreamingContext">
            <summary>设置 RotationVector3D.RotationVector3D(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.RotationMatrixGet">
            <summary>设置 RotationVector3D.get_RotationMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.RotationMatrixSetMatrixOfDouble">
            <summary>设置 RotationVector3D.set_RotationMatrix(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimRotationVector3D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.AllInstances.RotationMatrixGet">
            <summary>设置 RotationVector3D.get_RotationMatrix() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimRotationVector3D.AllInstances.RotationMatrixSetMatrixOfDouble">
            <summary>设置 RotationVector3D.set_RotationMatrix(Matrix`1&lt;Double&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimSparseMatrix`1">
            <summary>Emgu.CV.SparseMatrix`1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimSparseMatrix`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimSparseMatrix`1.#ctor(Emgu.CV.SparseMatrix{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimSparseMatrix`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimSparseMatrix`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimSparseMatrix`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.ConstructorInt32Array">
            <summary>设置 SparseMatrix`1.SparseMatrix`1(Int32[] dimension) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.DisposeObject">
            <summary>设置 SparseMatrix`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.ItemGetInt32Int32">
            <summary>设置 SparseMatrix`1.get_Item(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.ItemSetInt32Int32Double">
            <summary>设置 SparseMatrix`1.set_Item(Int32 row, Int32 col, Double value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimSparseMatrix`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.AllInstances.DisposeObject">
            <summary>设置 SparseMatrix`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.AllInstances.ItemGetInt32Int32">
            <summary>设置 SparseMatrix`1.get_Item(Int32 row, Int32 col) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimSparseMatrix`1.AllInstances.ItemSetInt32Int32Double">
            <summary>设置 SparseMatrix`1.set_Item(Int32 row, Int32 col, Double value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoBM">
            <summary>Emgu.CV.StereoBM 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoBM.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoBM.#ctor(Emgu.CV.StereoBM)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoBM.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoBM.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoBM.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.ConstructorSTEREO_BM_TYPEInt32">
            <summary>设置 StereoBM.StereoBM(STEREO_BM_TYPE type, Int32 numberOfDisparities) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.DisposeObject">
            <summary>设置 StereoBM.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16">
            <summary>设置 StereoBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; disparity) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGraySingle">
            <summary>设置 StereoBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Single&gt; disparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoBM.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.AllInstances.DisposeObject">
            <summary>设置 StereoBM.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.AllInstances.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16">
            <summary>设置 StereoBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; disparity) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoBM.AllInstances.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGraySingle">
            <summary>设置 StereoBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Single&gt; disparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoGC">
            <summary>Emgu.CV.StereoGC 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoGC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoGC.#ctor(Emgu.CV.StereoGC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoGC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoGC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoGC.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.ConstructorInt32Int32">
            <summary>设置 StereoGC.StereoGC(Int32 numberOfDisparities, Int32 maxIters) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.DisposeObject">
            <summary>设置 StereoGC.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16ImageOfGrayInt16">
            <summary>设置 StereoGC.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; leftDisparity, Image`2&lt;Gray,Int16&gt; rightDisparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoGC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.AllInstances.DisposeObject">
            <summary>设置 StereoGC.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoGC.AllInstances.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16ImageOfGrayInt16">
            <summary>设置 StereoGC.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; leftDisparity, Image`2&lt;Gray,Int16&gt; rightDisparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoSGBM">
            <summary>Emgu.CV.StereoSGBM 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoSGBM.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoSGBM.#ctor(Emgu.CV.StereoSGBM)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoSGBM.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoSGBM.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStereoSGBM.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.ConstructorInt32Int32Int32Int32Int32Int32Int32Int32Int32Int32Boolean">
            <summary>设置 StereoSGBM.StereoSGBM(Int32 minDisparity, Int32 numDisparities, Int32 SADWindowSize, Int32 P1, Int32 P2, Int32 disp12MaxDiff, Int32 preFilterCap, Int32 uniquenessRatio, Int32 speckleWindowSize, Int32 speckleRange, Boolean fullDP) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.DisposeObject">
            <summary>设置 StereoSGBM.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16">
            <summary>设置 StereoSGBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; disparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStereoSGBM.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.AllInstances.DisposeObject">
            <summary>设置 StereoSGBM.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStereoSGBM.AllInstances.FindStereoCorrespondenceImageOfGrayByteImageOfGrayByteImageOfGrayInt16">
            <summary>设置 StereoSGBM.FindStereoCorrespondence(Image`2&lt;Gray,Byte&gt; left, Image`2&lt;Gray,Byte&gt; right, Image`2&lt;Gray,Int16&gt; disparity) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStructuringElementEx">
            <summary>Emgu.CV.StructuringElementEx 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStructuringElementEx.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStructuringElementEx.#ctor(Emgu.CV.StructuringElementEx)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStructuringElementEx.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStructuringElementEx.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimStructuringElementEx.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStructuringElementEx.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStructuringElementEx.ConstructorInt32Int32Int32Int32CV_ELEMENT_SHAPE">
            <summary>设置 StructuringElementEx.StructuringElementEx(Int32 cols, Int32 rows, Int32 anchorX, Int32 anchorY, CV_ELEMENT_SHAPE shape) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStructuringElementEx.ConstructorInt32MdArray2Int32Int32">
            <summary>设置 StructuringElementEx.StructuringElementEx(Int32[,] values, Int32 anchorX, Int32 anchorY) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStructuringElementEx.DisposeObject">
            <summary>设置 StructuringElementEx.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimStructuringElementEx.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimStructuringElementEx.AllInstances.DisposeObject">
            <summary>设置 StructuringElementEx.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimVideoWriter">
            <summary>Emgu.CV.VideoWriter 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVideoWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVideoWriter.#ctor(Emgu.CV.VideoWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVideoWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVideoWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVideoWriter.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVideoWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVideoWriter.ConstructorStringInt32Int32Int32Boolean">
            <summary>设置 VideoWriter.VideoWriter(String fileName, Int32 fps, Int32 width, Int32 height, Boolean isColor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVideoWriter.ConstructorStringInt32Int32Int32Int32Boolean">
            <summary>设置 VideoWriter.VideoWriter(String fileName, Int32 compressionCode, Int32 fps, Int32 width, Int32 height, Boolean isColor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVideoWriter.DisposeObject">
            <summary>设置 VideoWriter.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimVideoWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVideoWriter.AllInstances.DisposeObject">
            <summary>设置 VideoWriter.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimVoronoiFacet">
            <summary>Emgu.CV.VoronoiFacet 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVoronoiFacet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVoronoiFacet.#ctor(Emgu.CV.VoronoiFacet)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVoronoiFacet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.ShimVoronoiFacet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.ConstructorPointFPointFArray">
            <summary>设置 VoronoiFacet.VoronoiFacet(PointF point, PointF[] polyline) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.PointGet">
            <summary>设置 VoronoiFacet.get_Point() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.PointSetPointF">
            <summary>设置 VoronoiFacet.set_Point(PointF value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.VerticesGet">
            <summary>设置 VoronoiFacet.get_Vertices() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.VerticesSetPointFArray">
            <summary>设置 VoronoiFacet.set_Vertices(PointF[] value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.ShimVoronoiFacet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.AllInstances.PointGet">
            <summary>设置 VoronoiFacet.get_Point() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.AllInstances.PointSetPointF">
            <summary>设置 VoronoiFacet.set_Point(PointF value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.AllInstances.VerticesGet">
            <summary>设置 VoronoiFacet.get_Vertices() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.ShimVoronoiFacet.AllInstances.VerticesSetPointFArray">
            <summary>设置 VoronoiFacet.set_Vertices(PointF[] value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubAdaptiveSkinDetector">
            <summary>Emgu.CV.AdaptiveSkinDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubAdaptiveSkinDetector.#ctor(System.Int32,Emgu.CV.AdaptiveSkinDetector.MorphingMethod)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubAdaptiveSkinDetector.DisposeObject">
            <summary>设置 AdaptiveSkinDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubAdaptiveSkinDetector.DisposeObject01">
            <summary>设置 AdaptiveSkinDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubAdaptiveSkinDetector.InitializeStub">
            <summary>初始化 type StubAdaptiveSkinDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubAdaptiveSkinDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubAdaptiveSkinDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubAdaptiveSkinDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubAdaptiveSkinDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubAdaptiveSkinDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubCapture">
            <summary>Emgu.CV.Capture 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.#ctor(Emgu.CV.CvEnum.CaptureType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.DisposeObject">
            <summary>设置 Capture.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.DisposeObject01">
            <summary>设置 Capture.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.DuplexQueryFrame">
            <summary>设置 Capture.DuplexQueryFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.DuplexQueryFrame01">
            <summary>设置 Capture.DuplexQueryFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.DuplexQuerySmallFrame">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.DuplexQuerySmallFrame01">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.Grab">
            <summary>设置 Capture.Grab() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.Grab01">
            <summary>设置 Capture.Grab() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.InitializeStub">
            <summary>初始化 type StubCapture 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.QueryFrame">
            <summary>设置 Capture.QueryFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.QueryFrame01">
            <summary>设置 Capture.QueryFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.QueryGrayFrame">
            <summary>设置 Capture.QueryGrayFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.QueryGrayFrame01">
            <summary>设置 Capture.QueryGrayFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.QuerySmallFrame">
            <summary>设置 Capture.QuerySmallFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.QuerySmallFrame01">
            <summary>设置 Capture.QuerySmallFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.RetrieveBgrFrame">
            <summary>设置 Capture.RetrieveBgrFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.RetrieveBgrFrame(System.Int32)">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.RetrieveBgrFrame01">
            <summary>设置 Capture.RetrieveBgrFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.RetrieveBgrFrameInt32">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.RetrieveGrayFrame">
            <summary>设置 Capture.RetrieveGrayFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCapture.RetrieveGrayFrame(System.Int32)">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.RetrieveGrayFrame01">
            <summary>设置 Capture.RetrieveGrayFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCapture.RetrieveGrayFrameInt32">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCapture.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCapture.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCapture.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubConvolutionKernelF">
            <summary>Emgu.CV.ConvolutionKernelF 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.#ctor(System.Single[0:,0:])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.#ctor(Emgu.CV.Matrix{System.Single},System.Drawing.Point)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.#ctor(System.Single[0:,0:],System.Drawing.Point)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubConvolutionKernelF.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.Clone">
            <summary>设置 Matrix`1.Clone() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.Clone01">
            <summary>设置 Matrix`1.Clone() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.DisposeObject01">
            <summary>设置 Matrix`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.InitializeStub">
            <summary>初始化 type StubConvolutionKernelF 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.ReadXml(System.Xml.XmlReader)">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubConvolutionKernelF.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubConvolutionKernelF.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubConvolutionKernelF.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubConvolutionKernelF.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubConvolutionKernelF.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubConvolutionKernelF.ManagedArray">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubConvolutionKernelF.NumberOfChannels">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubCvArray`1">
            <summary>Emgu.CV.CvArray`1 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 CvArray`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.AllocateDataInt32Int32Int32">
            <summary>设置 CvArray`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubCvArray.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.DisposeObject">
            <summary>设置 CvArray`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.DisposeObject01">
            <summary>设置 CvArray`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.InitializeStub">
            <summary>初始化 type StubCvArray 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.ManagedArrayGet">
            <summary>设置 CvArray`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.ManagedArraySetArray">
            <summary>设置 CvArray`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.NumberOfChannelsGet">
            <summary>设置 CvArray`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.ReadXml(System.Xml.XmlReader)">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubCvArray`1.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubCvArray`1.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCvArray`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCvArray`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCvArray`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCvArray`1.ManagedArray">
            <summary>设置 CvArray`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubCvArray`1.NumberOfChannels">
            <summary>设置 CvArray`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubDenseHistogram">
            <summary>Emgu.CV.DenseHistogram 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.#ctor(System.Int32[],Emgu.CV.Structure.RangeF[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.#ctor(System.Int32,Emgu.CV.Structure.RangeF)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.DisposeObject">
            <summary>设置 DenseHistogram.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubDenseHistogram.DisposeObject01">
            <summary>设置 DenseHistogram.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.InitializeStub">
            <summary>初始化 type StubDenseHistogram 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubDenseHistogram.ReleaseManagedResources">
            <summary>设置 DenseHistogram.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubDenseHistogram.ReleaseManagedResources01">
            <summary>设置 DenseHistogram.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubDenseHistogram.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubDenseHistogram.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubDenseHistogram.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubEigenObjectRecognizer">
            <summary>Emgu.CV.EigenObjectRecognizer 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubEigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubEigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],System.String[],Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubEigenObjectRecognizer.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Gray,System.Byte}[],System.String[],System.Double,Emgu.CV.Structure.MCvTermCriteria@)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubEigenObjectRecognizer.InitializeStub">
            <summary>初始化 type StubEigenObjectRecognizer 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubEigenObjectRecognizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubEigenObjectRecognizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubEigenObjectRecognizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubExtrinsicCameraParameters">
            <summary>Emgu.CV.ExtrinsicCameraParameters 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubExtrinsicCameraParameters.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubExtrinsicCameraParameters.#ctor(Emgu.CV.RotationVector3D,Emgu.CV.Matrix{System.Double})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubExtrinsicCameraParameters.InitializeStub">
            <summary>初始化 type StubExtrinsicCameraParameters 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubExtrinsicCameraParameters.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubExtrinsicCameraParameters.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubExtrinsicCameraParameters.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubFeatureTree">
            <summary>Emgu.CV.FeatureTree 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.#ctor(Emgu.CV.Matrix{System.Single})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.#ctor(System.Single[][])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.#ctor(Emgu.CV.Matrix{System.Single},System.Int32,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.#ctor(System.Single[][],System.Int32,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.DisposeObject">
            <summary>设置 FeatureTree.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubFeatureTree.DisposeObject01">
            <summary>设置 FeatureTree.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.InitializeStub">
            <summary>初始化 type StubFeatureTree 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubFeatureTree.ReleaseManagedResources">
            <summary>设置 FeatureTree.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubFeatureTree.ReleaseManagedResources01">
            <summary>设置 FeatureTree.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubFeatureTree.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubFeatureTree.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubFeatureTree.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubHOGDescriptor">
            <summary>Emgu.CV.HOGDescriptor 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Bgr,System.Byte})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.#ctor(System.Drawing.Size,System.Drawing.Size,System.Drawing.Size,System.Drawing.Size,System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.#ctor(Emgu.CV.Image{Emgu.CV.Structure.Bgr,System.Byte},System.Drawing.Size,System.Drawing.Size,System.Drawing.Size,System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.DisposeObject">
            <summary>设置 HOGDescriptor.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHOGDescriptor.DisposeObject01">
            <summary>设置 HOGDescriptor.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.InitializeStub">
            <summary>初始化 type StubHOGDescriptor 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHOGDescriptor.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHOGDescriptor.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHOGDescriptor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHOGDescriptor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHOGDescriptor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubHaarCascade">
            <summary>Emgu.CV.HaarCascade 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHaarCascade.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHaarCascade.DisposeObject">
            <summary>设置 HaarCascade.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHaarCascade.DisposeObject01">
            <summary>设置 HaarCascade.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHaarCascade.InitializeStub">
            <summary>初始化 type StubHaarCascade 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHaarCascade.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHaarCascade.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHaarCascade.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHaarCascade.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHaarCascade.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubHomographyMatrix">
            <summary>Emgu.CV.HomographyMatrix 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubHomographyMatrix.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.DisposeObject01">
            <summary>设置 Matrix`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.InitializeStub">
            <summary>初始化 type StubHomographyMatrix 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.ReadXml(System.Xml.XmlReader)">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubHomographyMatrix.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubHomographyMatrix.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHomographyMatrix.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHomographyMatrix.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHomographyMatrix.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHomographyMatrix.ManagedArray">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubHomographyMatrix.NumberOfChannels">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubICapture">
            <summary>Emgu.CV.ICapture 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubICapture.#ctor">
            <summary>初始化 type StubICapture 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubICapture.ecv::Emgu#CV#ICapture#QueryFrame">
            <summary>设置 ICapture.QueryFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubICapture.ecv::Emgu#CV#ICapture#QuerySmallFrame">
            <summary>设置 ICapture.QuerySmallFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubICapture.QueryFrame">
            <summary>设置 ICapture.QueryFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubICapture.QuerySmallFrame">
            <summary>设置 ICapture.QuerySmallFrame() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIColor">
            <summary>Emgu.CV.IColor 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIColor.#ctor">
            <summary>初始化 type StubIColor 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIColor.AttachBackingFieldToMCvScalar">
            <summary>附加委托以将 StubIColor.MCvScalar 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIColor.DimensionGet">
            <summary>设置 IColor.get_Dimension() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIColor.MCvScalarGet">
            <summary>设置 IColor.get_MCvScalar() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIColor.MCvScalarSetMCvScalar">
            <summary>设置 IColor.set_MCvScalar(MCvScalar value) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIColor.ecv::Emgu#CV#IColor#Dimension">
            <summary>设置 IColor.get_Dimension() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIColor.ecv::Emgu#CV#IColor#MCvScalar">
            <summary>设置 IColor.get_MCvScalar() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIConvexPolygon">
            <summary>Emgu.CV.IConvexPolygon 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIConvexPolygon.#ctor">
            <summary>初始化 type StubIConvexPolygon 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIConvexPolygon.ecv::Emgu#CV#IConvexPolygon#GetVertices">
            <summary>设置 IConvexPolygon.GetVertices() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIConvexPolygon.GetVertices">
            <summary>设置 IConvexPolygon.GetVertices() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIConvexPolygonF">
            <summary>Emgu.CV.IConvexPolygonF 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIConvexPolygonF.#ctor">
            <summary>初始化 type StubIConvexPolygonF 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIConvexPolygonF.ecv::Emgu#CV#IConvexPolygonF#GetVertices">
            <summary>设置 IConvexPolygonF.GetVertices() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIConvexPolygonF.GetVertices">
            <summary>设置 IConvexPolygonF.GetVertices() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIDuplexCapture">
            <summary>Emgu.CV.IDuplexCapture 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIDuplexCapture.#ctor">
            <summary>初始化 type StubIDuplexCapture 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIDuplexCapture.DuplexQueryFrame">
            <summary>设置 IDuplexCapture.DuplexQueryFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIDuplexCapture.DuplexQuerySmallFrame">
            <summary>设置 IDuplexCapture.DuplexQuerySmallFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIDuplexCapture.ecv::Emgu#CV#IDuplexCapture#DuplexQueryFrame">
            <summary>设置 IDuplexCapture.DuplexQueryFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIDuplexCapture.ecv::Emgu#CV#IDuplexCapture#DuplexQuerySmallFrame">
            <summary>设置 IDuplexCapture.DuplexQuerySmallFrame() 的 存根</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIDuplexCaptureCallback">
            <summary>Emgu.CV.IDuplexCaptureCallback 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIDuplexCaptureCallback.#ctor">
            <summary>初始化 type StubIDuplexCaptureCallback 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIDuplexCaptureCallback.ecv::Emgu#CV#IDuplexCaptureCallback#ReceiveFrame(Emgu.CV.Image{Emgu.CV.Structure.Bgr,System.Byte})">
            <summary>设置 IDuplexCaptureCallback.ReceiveFrame(Image`2&lt;Bgr,Byte&gt; img) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIDuplexCaptureCallback.ReceiveFrameImageOfBgrByte">
            <summary>设置 IDuplexCaptureCallback.ReceiveFrame(Image`2&lt;Bgr,Byte&gt; img) 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIImage">
            <summary>Emgu.CV.IImage 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.#ctor">
            <summary>初始化 type StubIImage 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.BitmapGet">
            <summary>设置 IImage.get_Bitmap() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.Clone">
            <summary>设置 ICloneable.Clone() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#MinMax(System.Double[]@,System.Double[]@,System.Drawing.Point[]@,System.Drawing.Point[]@)">
            <summary>设置 IImage.MinMax(Double[]&amp; minValues, Double[]&amp; maxValues, Point[]&amp; minLocations, Point[]&amp; maxLocations) 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#Save(System.String)">
            <summary>设置 IImage.Save(String fileName) 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#Split">
            <summary>设置 IImage.Split() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.MinMaxDoubleArrayOutDoubleArrayOutPointArrayOutPointArrayOut">
            <summary>设置 IImage.MinMax(Double[]&amp; minValues, Double[]&amp; maxValues, Point[]&amp; minLocations, Point[]&amp; maxLocations) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.NumberOfChannelsGet">
            <summary>设置 IImage.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.PtrGet">
            <summary>设置 IImage.get_Ptr() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.SaveString">
            <summary>设置 IImage.Save(String fileName) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.SizeGet">
            <summary>设置 IImage.get_Size() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubIImage.Split">
            <summary>设置 IImage.Split() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.global::System#ICloneable#Clone">
            <summary>设置 ICloneable.Clone() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIImage.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#Bitmap">
            <summary>设置 IImage.get_Bitmap() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#NumberOfChannels">
            <summary>设置 IImage.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#Ptr">
            <summary>设置 IImage.get_Ptr() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIImage.ecv::Emgu#CV#IImage#Size">
            <summary>设置 IImage.get_Size() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubIntrinsicCameraParameters">
            <summary>Emgu.CV.IntrinsicCameraParameters 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIntrinsicCameraParameters.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIntrinsicCameraParameters.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubIntrinsicCameraParameters.InitializeStub">
            <summary>初始化 type StubIntrinsicCameraParameters 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIntrinsicCameraParameters.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIntrinsicCameraParameters.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubIntrinsicCameraParameters.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubKalman">
            <summary>Emgu.CV.Kalman 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.#ctor(Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.#ctor(Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single},Emgu.CV.Matrix{System.Single})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.DisposeObject">
            <summary>设置 Kalman.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKalman.DisposeObject01">
            <summary>设置 Kalman.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.InitializeStub">
            <summary>初始化 type StubKalman 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKalman.ReleaseManagedResources">
            <summary>设置 Kalman.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKalman.ReleaseManagedResources01">
            <summary>设置 Kalman.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKalman.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKalman.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKalman.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubKinectCapture">
            <summary>Emgu.CV.KinectCapture 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.#ctor(Emgu.CV.KinectCapture.ImageGeneratorOutputMode)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.DisposeObject">
            <summary>设置 Capture.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.DisposeObject01">
            <summary>设置 Capture.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.DuplexQueryFrame">
            <summary>设置 Capture.DuplexQueryFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.DuplexQueryFrame01">
            <summary>设置 Capture.DuplexQueryFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.DuplexQuerySmallFrame">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.DuplexQuerySmallFrame01">
            <summary>设置 Capture.DuplexQuerySmallFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.Grab">
            <summary>设置 Capture.Grab() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.Grab01">
            <summary>设置 Capture.Grab() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.InitializeStub">
            <summary>初始化 type StubKinectCapture 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.QueryFrame">
            <summary>设置 Capture.QueryFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.QueryFrame01">
            <summary>设置 Capture.QueryFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.QueryGrayFrame">
            <summary>设置 Capture.QueryGrayFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.QueryGrayFrame01">
            <summary>设置 Capture.QueryGrayFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.QuerySmallFrame">
            <summary>设置 Capture.QuerySmallFrame() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.QuerySmallFrame01">
            <summary>设置 Capture.QuerySmallFrame() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.RetrieveBgrFrame">
            <summary>设置 KinectCapture.RetrieveBgrFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.RetrieveBgrFrame(System.Int32)">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.RetrieveBgrFrame01">
            <summary>设置 KinectCapture.RetrieveBgrFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.RetrieveBgrFrameInt32">
            <summary>设置 Capture.RetrieveBgrFrame(Int32 streamIdx) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.RetrieveGrayFrame">
            <summary>设置 KinectCapture.RetrieveGrayFrame() 的 存根</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubKinectCapture.RetrieveGrayFrame(System.Int32)">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.RetrieveGrayFrame01">
            <summary>设置 KinectCapture.RetrieveGrayFrame() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubKinectCapture.RetrieveGrayFrameInt32">
            <summary>设置 Capture.RetrieveGrayFrame(Int32 streamIdx) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKinectCapture.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKinectCapture.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubKinectCapture.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubLatentSvmDetector">
            <summary>Emgu.CV.LatentSvmDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubLatentSvmDetector.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubLatentSvmDetector.DisposeObject">
            <summary>设置 LatentSvmDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubLatentSvmDetector.DisposeObject01">
            <summary>设置 LatentSvmDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubLatentSvmDetector.InitializeStub">
            <summary>初始化 type StubLatentSvmDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubLatentSvmDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubLatentSvmDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubLatentSvmDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubLatentSvmDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubLatentSvmDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubMatND`1">
            <summary>Emgu.CV.MatND`1 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.#ctor(System.Int32[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 MatND`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.AllocateDataInt32Int32Int32">
            <summary>设置 MatND`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubMatND.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 MatND`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.DisposeObject">
            <summary>设置 MatND`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.DisposeObject01">
            <summary>设置 MatND`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 MatND`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 MatND`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.InitializeStub">
            <summary>初始化 type StubMatND 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.ManagedArrayGet">
            <summary>设置 MatND`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.ManagedArraySetArray">
            <summary>设置 MatND`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.NumberOfChannelsGet">
            <summary>设置 MatND`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.ReadXml(System.Xml.XmlReader)">
            <summary>设置 MatND`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.ReadXmlXmlReader">
            <summary>设置 MatND`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatND`1.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 MatND`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatND`1.WriteXmlXmlWriter">
            <summary>设置 MatND`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatND`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatND`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatND`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatND`1.ManagedArray">
            <summary>设置 MatND`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatND`1.NumberOfChannels">
            <summary>设置 MatND`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubMatrix`1">
            <summary>Emgu.CV.Matrix`1 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Drawing.Size)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(`0[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(`0[0:,0:])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Int32,System.Int32,System.IntPtr)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.#ctor(System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubMatrix.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.Clone">
            <summary>设置 Matrix`1.Clone() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.Clone01">
            <summary>设置 Matrix`1.Clone() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.DisposeObject01">
            <summary>设置 Matrix`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.InitializeStub">
            <summary>初始化 type StubMatrix 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.ReadXml(System.Xml.XmlReader)">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMatrix`1.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMatrix`1.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatrix`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatrix`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatrix`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatrix`1.ManagedArray">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMatrix`1.NumberOfChannels">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubMemStorage">
            <summary>Emgu.CV.MemStorage 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMemStorage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMemStorage.DisposeObject">
            <summary>设置 MemStorage.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMemStorage.DisposeObject01">
            <summary>设置 MemStorage.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMemStorage.InitializeStub">
            <summary>初始化 type StubMemStorage 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMemStorage.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMemStorage.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMemStorage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMemStorage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMemStorage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubMotionHistory">
            <summary>Emgu.CV.MotionHistory 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMotionHistory.#ctor(System.Double,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMotionHistory.#ctor(System.Double,System.Double,System.Double,System.DateTime)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMotionHistory.DisposeObject">
            <summary>设置 MotionHistory.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMotionHistory.DisposeObject01">
            <summary>设置 MotionHistory.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMotionHistory.InitializeStub">
            <summary>初始化 type StubMotionHistory 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubMotionHistory.ReleaseManagedResources">
            <summary>设置 MotionHistory.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubMotionHistory.ReleaseManagedResources01">
            <summary>设置 MotionHistory.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMotionHistory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMotionHistory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubMotionHistory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubOctree">
            <summary>Emgu.CV.Octree 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubOctree.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubOctree.#ctor(Emgu.CV.Structure.MCvPoint3D32f[],System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubOctree.DisposeObject">
            <summary>设置 Octree.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubOctree.DisposeObject01">
            <summary>设置 Octree.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubOctree.InitializeStub">
            <summary>初始化 type StubOctree 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubOctree.ReleaseManagedResources">
            <summary>设置 Octree.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubOctree.ReleaseManagedResources01">
            <summary>设置 Octree.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubOctree.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubOctree.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubOctree.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubPlanarSubdivision">
            <summary>Emgu.CV.PlanarSubdivision 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.#ctor(System.Drawing.Rectangle@)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.#ctor(System.Drawing.PointF[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.#ctor(System.Drawing.PointF[],System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.DisposeObject">
            <summary>设置 PlanarSubdivision.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubPlanarSubdivision.DisposeObject01">
            <summary>设置 PlanarSubdivision.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.InitializeStub">
            <summary>初始化 type StubPlanarSubdivision 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubPlanarSubdivision.ReleaseManagedResources">
            <summary>设置 PlanarSubdivision.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubPlanarSubdivision.ReleaseManagedResources01">
            <summary>设置 PlanarSubdivision.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubPlanarSubdivision.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubPlanarSubdivision.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubPlanarSubdivision.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubRetina">
            <summary>Emgu.CV.Retina 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRetina.#ctor(System.Drawing.Size)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRetina.#ctor(System.Drawing.Size,System.Boolean,Emgu.CV.Retina.ColorSamplingMethod,System.Boolean,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRetina.DisposeObject">
            <summary>设置 Retina.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRetina.DisposeObject01">
            <summary>设置 Retina.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRetina.InitializeStub">
            <summary>初始化 type StubRetina 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRetina.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRetina.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRetina.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRetina.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRetina.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubRotationVector3D">
            <summary>Emgu.CV.RotationVector3D 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.#ctor(System.Double[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.AllocateData(System.Int32,System.Int32,System.Int32)">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.AllocateDataInt32Int32Int32">
            <summary>设置 Matrix`1.AllocateData(Int32 rows, Int32 cols, Int32 numberOfChannels) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.AttachBackingFieldToManagedArray">
            <summary>附加委托以将 StubRotationVector3D.ManagedArray 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.Clone">
            <summary>设置 Matrix`1.Clone() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.Clone01">
            <summary>设置 Matrix`1.Clone() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.DeserializeObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.DeserializeObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.DeserializeObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.DisposeObject">
            <summary>设置 Matrix`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.DisposeObject01">
            <summary>设置 Matrix`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 CvArray`1.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.InitializeStub">
            <summary>初始化 type StubRotationVector3D 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.ManagedArrayGet">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.ManagedArraySetArray">
            <summary>设置 Matrix`1.set_ManagedArray(Array value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.NumberOfChannelsGet">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.ReadXml(System.Xml.XmlReader)">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.ReadXmlXmlReader">
            <summary>设置 CvArray`1.ReadXml(XmlReader reader) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.Save(System.String)">
            <summary>设置 CvArray`1.Save(String fileName) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.SaveString">
            <summary>设置 CvArray`1.Save(String fileName) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubRotationVector3D.WriteXml(System.Xml.XmlWriter)">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubRotationVector3D.WriteXmlXmlWriter">
            <summary>设置 CvArray`1.WriteXml(XmlWriter writer) 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRotationVector3D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRotationVector3D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRotationVector3D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRotationVector3D.ManagedArray">
            <summary>设置 Matrix`1.get_ManagedArray() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubRotationVector3D.NumberOfChannels">
            <summary>设置 Matrix`1.get_NumberOfChannels() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubSparseMatrix`1">
            <summary>Emgu.CV.SparseMatrix`1 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubSparseMatrix`1.#ctor(System.Int32[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubSparseMatrix`1.DisposeObject">
            <summary>设置 SparseMatrix`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubSparseMatrix`1.DisposeObject01">
            <summary>设置 SparseMatrix`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubSparseMatrix`1.InitializeStub">
            <summary>初始化 type StubSparseMatrix 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubSparseMatrix`1.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubSparseMatrix`1.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubSparseMatrix`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubSparseMatrix`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubSparseMatrix`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubStereoBM">
            <summary>Emgu.CV.StereoBM 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoBM.#ctor(Emgu.CV.CvEnum.STEREO_BM_TYPE,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoBM.DisposeObject">
            <summary>设置 StereoBM.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoBM.DisposeObject01">
            <summary>设置 StereoBM.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoBM.InitializeStub">
            <summary>初始化 type StubStereoBM 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoBM.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoBM.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoBM.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoBM.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoBM.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubStereoGC">
            <summary>Emgu.CV.StereoGC 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoGC.#ctor(System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoGC.DisposeObject">
            <summary>设置 StereoGC.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoGC.DisposeObject01">
            <summary>设置 StereoGC.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoGC.InitializeStub">
            <summary>初始化 type StubStereoGC 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoGC.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoGC.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoGC.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoGC.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoGC.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubStereoSGBM">
            <summary>Emgu.CV.StereoSGBM 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoSGBM.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoSGBM.DisposeObject">
            <summary>设置 StereoSGBM.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoSGBM.DisposeObject01">
            <summary>设置 StereoSGBM.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoSGBM.InitializeStub">
            <summary>初始化 type StubStereoSGBM 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStereoSGBM.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStereoSGBM.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoSGBM.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoSGBM.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStereoSGBM.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubStructuringElementEx">
            <summary>Emgu.CV.StructuringElementEx 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStructuringElementEx.#ctor(System.Int32[0:,0:],System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStructuringElementEx.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Emgu.CV.CvEnum.CV_ELEMENT_SHAPE)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStructuringElementEx.DisposeObject">
            <summary>设置 StructuringElementEx.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStructuringElementEx.DisposeObject01">
            <summary>设置 StructuringElementEx.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStructuringElementEx.InitializeStub">
            <summary>初始化 type StubStructuringElementEx 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubStructuringElementEx.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubStructuringElementEx.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStructuringElementEx.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStructuringElementEx.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubStructuringElementEx.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubVideoWriter">
            <summary>Emgu.CV.VideoWriter 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVideoWriter.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVideoWriter.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVideoWriter.DisposeObject">
            <summary>设置 VideoWriter.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubVideoWriter.DisposeObject01">
            <summary>设置 VideoWriter.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVideoWriter.InitializeStub">
            <summary>初始化 type StubVideoWriter 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVideoWriter.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Fakes.StubVideoWriter.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVideoWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVideoWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVideoWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Fakes.StubVoronoiFacet">
            <summary>Emgu.CV.VoronoiFacet 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVoronoiFacet.#ctor(System.Drawing.PointF,System.Drawing.PointF[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Fakes.StubVoronoiFacet.InitializeStub">
            <summary>初始化 type StubVoronoiFacet 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVoronoiFacet.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVoronoiFacet.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Fakes.StubVoronoiFacet.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor">
            <summary>Emgu.CV.Features2D.BriefDescriptorExtractor 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.#ctor(Emgu.CV.Features2D.BriefDescriptorExtractor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.Bind(Emgu.CV.Features2D.IDescriptorExtractor{System.Byte})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.Constructor">
            <summary>设置 BriefDescriptorExtractor.BriefDescriptorExtractor() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.ConstructorInt32">
            <summary>设置 BriefDescriptorExtractor.BriefDescriptorExtractor(Int32 descriptorSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemByteget">
            <summary>设置 BriefDescriptorExtractor.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Byte&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.DescriptorSizeGet">
            <summary>设置 BriefDescriptorExtractor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.DisposeObject">
            <summary>设置 BriefDescriptorExtractor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 BriefDescriptorExtractor.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemByteget">
            <summary>设置 BriefDescriptorExtractor.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Byte&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.DescriptorSizeGet">
            <summary>设置 BriefDescriptorExtractor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimBriefDescriptorExtractor.AllInstances.DisposeObject">
            <summary>设置 BriefDescriptorExtractor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimFastDetector">
            <summary>Emgu.CV.Features2D.FastDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.#ctor(Emgu.CV.Features2D.FastDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFastDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.ConstructorInt32Boolean">
            <summary>设置 FastDetector.FastDetector(Int32 threshold, Boolean nonmaxSupression) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.DisposeObject">
            <summary>设置 FastDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 FastDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.NonmaxSupressionGet">
            <summary>设置 FastDetector.get_NonmaxSupression() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.ThresholdGet">
            <summary>设置 FastDetector.get_Threshold() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimFastDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.AllInstances.DisposeObject">
            <summary>设置 FastDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.AllInstances.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 FastDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.AllInstances.NonmaxSupressionGet">
            <summary>设置 FastDetector.get_NonmaxSupression() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFastDetector.AllInstances.ThresholdGet">
            <summary>设置 FastDetector.get_Threshold() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions">
            <summary>Emgu.CV.Features2D.Features2DExtensions 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.DetectKeyPointsIKeyPointDetectorImageOfGrayByteImageOfGrayByte">
            <summary>设置 Features2DExtensions.DetectKeyPoints(IKeyPointDetector detector, Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DExtensions.DetectKeyPointsRawIKeyPointDetectorImageOfGrayByteImageOfGrayByte">
            <summary>设置 Features2DExtensions.DetectKeyPointsRaw(IKeyPointDetector detector, Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox">
            <summary>Emgu.CV.Features2D.Features2DToolbox 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.GetHomographyMatrixFromMatchedFeaturesVectorOfKeyPointVectorOfKeyPointMatrixOfInt32MatrixOfByteDouble">
            <summary>设置 Features2DToolbox.GetHomographyMatrixFromMatchedFeatures(VectorOfKeyPoint model, VectorOfKeyPoint observed, Matrix`1&lt;Int32&gt; matchIndices, Matrix`1&lt;Byte&gt; mask, Double ransacReprojThreshold) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.VoteForSizeAndOrientationVectorOfKeyPointVectorOfKeyPointMatrixOfInt32MatrixOfByteDoubleInt32">
            <summary>设置 Features2DToolbox.VoteForSizeAndOrientation(VectorOfKeyPoint modelKeyPoints, VectorOfKeyPoint observedKeyPoints, Matrix`1&lt;Int32&gt; indices, Matrix`1&lt;Byte&gt; mask, Double scaleIncrement, Int32 rotationBins) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimFeatures2DToolbox.VoteForUniquenessMatrixOfSingleDoubleMatrixOfByte">
            <summary>设置 Features2DToolbox.VoteForUniqueness(Matrix`1&lt;Single&gt; distance, Double uniquenessThreshold, Matrix`1&lt;Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector">
            <summary>Emgu.CV.Features2D.GridAdaptedFeatureDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.#ctor(Emgu.CV.Features2D.GridAdaptedFeatureDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.ConstructorIKeyPointDetectorInt32Int32Int32">
            <summary>设置 GridAdaptedFeatureDetector.GridAdaptedFeatureDetector(IKeyPointDetector detector, Int32 maxTotalKeyPoints, Int32 gridRows, Int32 gridCols) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.DisposeObject">
            <summary>设置 GridAdaptedFeatureDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 GridAdaptedFeatureDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.AllInstances.DisposeObject">
            <summary>设置 GridAdaptedFeatureDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimGridAdaptedFeatureDetector.AllInstances.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 GridAdaptedFeatureDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimLDetector">
            <summary>Emgu.CV.Features2D.LDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimLDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimLDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimLDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimLDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimLDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimMSERDetector">
            <summary>Emgu.CV.Features2D.MSERDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.#ctor(Emgu.CV.Features2D.MSERDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimMSERDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AreaThresholdGet">
            <summary>设置 MSERDetector.get_AreaThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.Constructor">
            <summary>设置 MSERDetector.MSERDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.ConstructorInt32Int32Int32SingleSingleInt32DoubleDoubleInt32">
            <summary>设置 MSERDetector.MSERDetector(Int32 delta, Int32 maxArea, Int32 minArea, Single maxVariation, Single minDiversity, Int32 maxEvolution, Double areaThreshold, Double minMargin, Int32 edgeBlurSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.DeltaGet">
            <summary>设置 MSERDetector.get_Delta() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.DisposeObject">
            <summary>设置 MSERDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.EdgeBlurSizeGet">
            <summary>设置 MSERDetector.get_EdgeBlurSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.FeatureDetectorPtrGet">
            <summary>设置 MSERDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.GetMSERParameters">
            <summary>设置 MSERDetector.GetMSERParameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MaxAreaGet">
            <summary>设置 MSERDetector.get_MaxArea() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MaxEvolutionGet">
            <summary>设置 MSERDetector.get_MaxEvolution() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MaxVariationGet">
            <summary>设置 MSERDetector.get_MaxVariation() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MinAreaGet">
            <summary>设置 MSERDetector.get_MinArea() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MinDiversityGet">
            <summary>设置 MSERDetector.get_MinDiversity() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.MinMarginGet">
            <summary>设置 MSERDetector.get_MinMargin() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.AreaThresholdGet">
            <summary>设置 MSERDetector.get_AreaThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.DeltaGet">
            <summary>设置 MSERDetector.get_Delta() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.DisposeObject">
            <summary>设置 MSERDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.EdgeBlurSizeGet">
            <summary>设置 MSERDetector.get_EdgeBlurSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.FeatureDetectorPtrGet">
            <summary>设置 MSERDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.GetMSERParameters">
            <summary>设置 MSERDetector.GetMSERParameters() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MaxAreaGet">
            <summary>设置 MSERDetector.get_MaxArea() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MaxEvolutionGet">
            <summary>设置 MSERDetector.get_MaxEvolution() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MaxVariationGet">
            <summary>设置 MSERDetector.get_MaxVariation() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MinAreaGet">
            <summary>设置 MSERDetector.get_MinArea() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MinDiversityGet">
            <summary>设置 MSERDetector.get_MinDiversity() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimMSERDetector.AllInstances.MinMarginGet">
            <summary>设置 MSERDetector.get_MinMargin() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimORBDetector">
            <summary>Emgu.CV.Features2D.ORBDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.#ctor(Emgu.CV.Features2D.ORBDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.Bind(Emgu.CV.Features2D.IDescriptorExtractor{System.Byte})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimORBDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.ConstructorInt32">
            <summary>设置 ORBDetector.ORBDetector(Int32 numberOfFeatures) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.ConstructorInt32SingleInt32Int32Int32Int32ORBDetectorScoreTypeInt32">
            <summary>设置 ORBDetector.ORBDetector(Int32 numberOfFeatures, Single scaleFactor, Int32 nLevels, Int32 edgeThreshold, Int32 firstLevel, Int32 WTK_A, ScoreType scoreType, Int32 patchSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemByteget">
            <summary>设置 ORBDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Byte&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.DescriptorSizeGet">
            <summary>设置 ORBDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 ORBDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.DisposeObject">
            <summary>设置 ORBDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 ORBDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 ORBDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemByteget">
            <summary>设置 ORBDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Byte&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.DescriptorSizeGet">
            <summary>设置 ORBDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 ORBDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.DisposeObject">
            <summary>设置 ORBDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimORBDetector.AllInstances.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 ORBDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimPatchGenerator">
            <summary>Emgu.CV.Features2D.PatchGenerator 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPatchGenerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPatchGenerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPatchGenerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPatchGenerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimPatchGenerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector">
            <summary>Emgu.CV.Features2D.PlanarObjectDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.#ctor(Emgu.CV.Features2D.PlanarObjectDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.Constructor">
            <summary>设置 PlanarObjectDetector.PlanarObjectDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.DetectImageOfGrayByteHomographyMatrix">
            <summary>设置 PlanarObjectDetector.Detect(Image`2&lt;Gray,Byte&gt; image, HomographyMatrix h) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.DisposeObject">
            <summary>设置 PlanarObjectDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.GetModelPoints">
            <summary>设置 PlanarObjectDetector.GetModelPoints() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.TrainImageOfGrayByteInt32Int32Int32Int32Int32LDetectorRefPatchGeneratorRef">
            <summary>设置 PlanarObjectDetector.Train(Image`2&lt;Gray,Byte&gt; image, Int32 npoints, Int32 patchSize, Int32 nstructs, Int32 structSize, Int32 nviews, LDetector&amp; keyPointDetector, PatchGenerator&amp; patchGenerator) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.AllInstances.DetectImageOfGrayByteHomographyMatrix">
            <summary>设置 PlanarObjectDetector.Detect(Image`2&lt;Gray,Byte&gt; image, HomographyMatrix h) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.AllInstances.DisposeObject">
            <summary>设置 PlanarObjectDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.AllInstances.GetModelPoints">
            <summary>设置 PlanarObjectDetector.GetModelPoints() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimPlanarObjectDetector.AllInstances.TrainImageOfGrayByteInt32Int32Int32Int32Int32LDetectorRefPatchGeneratorRef">
            <summary>设置 PlanarObjectDetector.Train(Image`2&lt;Gray,Byte&gt; image, Int32 npoints, Int32 patchSize, Int32 nstructs, Int32 structSize, Int32 nviews, LDetector&amp; keyPointDetector, PatchGenerator&amp; patchGenerator) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSIFTDetector">
            <summary>Emgu.CV.Features2D.SIFTDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.#ctor(Emgu.CV.Features2D.SIFTDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.Bind(Emgu.CV.Features2D.IDescriptorExtractor{System.Single})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.Constructor">
            <summary>设置 SIFTDetector.SIFTDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.ConstructorInt32Int32DoubleDoubleDouble">
            <summary>设置 SIFTDetector.SIFTDetector(Int32 nFeatures, Int32 nOctaveLayers, Double contrastThreshold, Double edgeThreshold, Double sigma) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemSingleget">
            <summary>设置 SIFTDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Single&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.DescriptorSizeGet">
            <summary>设置 SIFTDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 SIFTDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.DisposeObject">
            <summary>设置 SIFTDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 SIFTDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SIFTDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemSingleget">
            <summary>设置 SIFTDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Single&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.DescriptorSizeGet">
            <summary>设置 SIFTDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 SIFTDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.DisposeObject">
            <summary>设置 SIFTDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSIFTDetector.AllInstances.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 SIFTDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSURFDetector">
            <summary>Emgu.CV.Features2D.SURFDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.#ctor(Emgu.CV.Features2D.SURFDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.Bind(Emgu.CV.Features2D.IDescriptorExtractor{System.Single})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ConstructorDoubleBoolean">
            <summary>设置 SURFDetector.SURFDetector(Double hessianThresh, Boolean extendedFlag) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ConstructorDoubleBooleanInt32Int32">
            <summary>设置 SURFDetector.SURFDetector(Double hessianThresh, Boolean extendedFlag, Int32 nOctaves, Int32 nOctaveLayers) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.ConstructorMCvSURFParams">
            <summary>设置 SURFDetector.SURFDetector(MCvSURFParams surfParams) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemSingleget">
            <summary>设置 SURFDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Single&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.DescriptorSizeGet">
            <summary>设置 SURFDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 SURFDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.DisposeObject">
            <summary>设置 SURFDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.FeatureDetectorPtrGet">
            <summary>设置 SURFDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.SURFParamsGet">
            <summary>设置 SURFDetector.get_SURFParams() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.ComputeDescriptorsRawHelperCvArrayOfByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRawHelper(CvArray`1&lt;Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.ComputeDescriptorsRawImageOfBgrByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRaw(Image`2&lt;Bgr,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.ComputeDescriptorsRawImageOfGrayByteImageOfGrayByteVectorOfKeyPoint">
            <summary>设置 SURFDetector.ComputeDescriptorsRaw(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask, VectorOfKeyPoint keyPoints) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.DescriptorExtratorPtrEmguCVFeatures2DIDescriptorExtractorSystemSingleget">
            <summary>设置 SURFDetector.Emgu.CV.Features2D.IDescriptorExtractor&lt;System.Single&gt;.get_DescriptorExtratorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.DescriptorSizeGet">
            <summary>设置 SURFDetector.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.DetectFeaturesImageOfGrayByteImageOfGrayByte">
            <summary>设置 SURFDetector.DetectFeatures(Image`2&lt;Gray,Byte&gt; image, Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.DisposeObject">
            <summary>设置 SURFDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.FeatureDetectorPtrGet">
            <summary>设置 SURFDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFDetector.AllInstances.SURFParamsGet">
            <summary>设置 SURFDetector.get_SURFParams() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSURFFeature">
            <summary>Emgu.CV.Features2D.SURFFeature 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFFeature.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFFeature.#ctor(Emgu.CV.Features2D.SURFFeature)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFFeature.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSURFFeature.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.ConstructorMCvSURFPointRefSingleArray">
            <summary>设置 SURFFeature.SURFFeature(MCvSURFPoint&amp; point, Single[] descriptor) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.DescriptorGet">
            <summary>设置 SURFFeature.get_Descriptor() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.DescriptorSetSingleArray">
            <summary>设置 SURFFeature.set_Descriptor(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.PointGet">
            <summary>设置 SURFFeature.get_Point() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.PointSetMCvSURFPoint">
            <summary>设置 SURFFeature.set_Point(MCvSURFPoint value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSURFFeature.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.AllInstances.DescriptorGet">
            <summary>设置 SURFFeature.get_Descriptor() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.AllInstances.DescriptorSetSingleArray">
            <summary>设置 SURFFeature.set_Descriptor(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.AllInstances.PointGet">
            <summary>设置 SURFFeature.get_Point() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSURFFeature.AllInstances.PointSetMCvSURFPoint">
            <summary>设置 SURFFeature.set_Point(MCvSURFPoint value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor">
            <summary>Emgu.CV.Features2D.SelfSimDescriptor 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.#ctor(Emgu.CV.Features2D.SelfSimDescriptor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.ComputeImageOfGrayByteSizePointArray">
            <summary>设置 SelfSimDescriptor.Compute(Image`2&lt;Gray,Byte&gt; image, Size winStride, Point[] locations) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.ConstructorInt32Int32Int32Int32Int32">
            <summary>设置 SelfSimDescriptor.SelfSimDescriptor(Int32 smallSize, Int32 largeSize, Int32 startDistanceBucket, Int32 numberOfDistanceBuckets, Int32 numberOfAngles) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.DescriptorSizeGet">
            <summary>设置 SelfSimDescriptor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.DisposeObject">
            <summary>设置 SelfSimDescriptor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.AllInstances.ComputeImageOfGrayByteSizePointArray">
            <summary>设置 SelfSimDescriptor.Compute(Image`2&lt;Gray,Byte&gt; image, Size winStride, Point[] locations) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.AllInstances.DescriptorSizeGet">
            <summary>设置 SelfSimDescriptor.get_DescriptorSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimSelfSimDescriptor.AllInstances.DisposeObject">
            <summary>设置 SelfSimDescriptor.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimStarDetector">
            <summary>Emgu.CV.Features2D.StarDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.#ctor(Emgu.CV.Features2D.StarDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.Bind(Emgu.CV.Features2D.IKeyPointDetector)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.ShimStarDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.Constructor">
            <summary>设置 StarDetector.StarDetector() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.ConstructorInt32Int32Int32Int32Int32">
            <summary>设置 StarDetector.StarDetector(Int32 maxSize, Int32 responseThreshold, Int32 lineThresholdProjected, Int32 lineThresholdBinarized, Int32 suppressNonmaxSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.DisposeObject">
            <summary>设置 StarDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 StarDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.LineThresholdBinarizedGet">
            <summary>设置 StarDetector.get_LineThresholdBinarized() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.LineThresholdProjectedGet">
            <summary>设置 StarDetector.get_LineThresholdProjected() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.MaxSizeGet">
            <summary>设置 StarDetector.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.ResponseThresholdGet">
            <summary>设置 StarDetector.get_ResponseThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.SuppressNonmaxSizeGet">
            <summary>设置 StarDetector.get_SuppressNonmaxSize() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.DisposeObject">
            <summary>设置 StarDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.FeatureDetectorPtrEmguCVFeatures2DIKeyPointDetectorget">
            <summary>设置 StarDetector.Emgu.CV.Features2D.IKeyPointDetector.get_FeatureDetectorPtr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.LineThresholdBinarizedGet">
            <summary>设置 StarDetector.get_LineThresholdBinarized() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.LineThresholdProjectedGet">
            <summary>设置 StarDetector.get_LineThresholdProjected() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.MaxSizeGet">
            <summary>设置 StarDetector.get_MaxSize() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.ResponseThresholdGet">
            <summary>设置 StarDetector.get_ResponseThreshold() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.ShimStarDetector.AllInstances.SuppressNonmaxSizeGet">
            <summary>设置 StarDetector.get_SuppressNonmaxSize() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor">
            <summary>Emgu.CV.Features2D.BriefDescriptorExtractor 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.DisposeObject">
            <summary>设置 BriefDescriptorExtractor.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.DisposeObject01">
            <summary>设置 BriefDescriptorExtractor.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.InitializeStub">
            <summary>初始化 type StubBriefDescriptorExtractor 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubBriefDescriptorExtractor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubFastDetector">
            <summary>Emgu.CV.Features2D.FastDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubFastDetector.#ctor(System.Int32,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubFastDetector.DisposeObject">
            <summary>设置 FastDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubFastDetector.DisposeObject01">
            <summary>设置 FastDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubFastDetector.InitializeStub">
            <summary>初始化 type StubFastDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubFastDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubFastDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubFastDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubFastDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubFastDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector">
            <summary>Emgu.CV.Features2D.GridAdaptedFeatureDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.#ctor(Emgu.CV.Features2D.IKeyPointDetector,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.DisposeObject">
            <summary>设置 GridAdaptedFeatureDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.DisposeObject01">
            <summary>设置 GridAdaptedFeatureDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.InitializeStub">
            <summary>初始化 type StubGridAdaptedFeatureDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubGridAdaptedFeatureDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubIKeyPointDetector">
            <summary>Emgu.CV.Features2D.IKeyPointDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubIKeyPointDetector.#ctor">
            <summary>初始化 type StubIKeyPointDetector 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubIKeyPointDetector.FeatureDetectorPtrGet">
            <summary>设置 IKeyPointDetector.get_FeatureDetectorPtr() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubIKeyPointDetector.ecv::Emgu#CV#Features2D#IKeyPointDetector#FeatureDetectorPtr">
            <summary>设置 IKeyPointDetector.get_FeatureDetectorPtr() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubMSERDetector">
            <summary>Emgu.CV.Features2D.MSERDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubMSERDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubMSERDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubMSERDetector.DisposeObject">
            <summary>设置 MSERDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubMSERDetector.DisposeObject01">
            <summary>设置 MSERDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubMSERDetector.InitializeStub">
            <summary>初始化 type StubMSERDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubMSERDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubMSERDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubMSERDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubMSERDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubMSERDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubORBDetector">
            <summary>Emgu.CV.Features2D.ORBDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubORBDetector.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubORBDetector.#ctor(System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,Emgu.CV.Features2D.ORBDetector.ScoreType,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubORBDetector.DisposeObject">
            <summary>设置 ORBDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubORBDetector.DisposeObject01">
            <summary>设置 ORBDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubORBDetector.InitializeStub">
            <summary>初始化 type StubORBDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubORBDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubORBDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubORBDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubORBDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubORBDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector">
            <summary>Emgu.CV.Features2D.PlanarObjectDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.DisposeObject">
            <summary>设置 PlanarObjectDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.DisposeObject01">
            <summary>设置 PlanarObjectDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.InitializeStub">
            <summary>初始化 type StubPlanarObjectDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubPlanarObjectDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubSIFTDetector">
            <summary>Emgu.CV.Features2D.SIFTDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSIFTDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSIFTDetector.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSIFTDetector.DisposeObject">
            <summary>设置 SIFTDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSIFTDetector.DisposeObject01">
            <summary>设置 SIFTDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSIFTDetector.InitializeStub">
            <summary>初始化 type StubSIFTDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSIFTDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSIFTDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSIFTDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSIFTDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSIFTDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubSURFDetector">
            <summary>Emgu.CV.Features2D.SURFDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.#ctor(Emgu.CV.Structure.MCvSURFParams)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.#ctor(System.Double,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.#ctor(System.Double,System.Boolean,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.DisposeObject">
            <summary>设置 SURFDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSURFDetector.DisposeObject01">
            <summary>设置 SURFDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.InitializeStub">
            <summary>初始化 type StubSURFDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSURFDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubSURFFeature">
            <summary>Emgu.CV.Features2D.SURFFeature 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFFeature.#ctor(Emgu.CV.Structure.MCvSURFPoint@,System.Single[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSURFFeature.InitializeStub">
            <summary>初始化 type StubSURFFeature 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFFeature.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFFeature.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSURFFeature.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor">
            <summary>Emgu.CV.Features2D.SelfSimDescriptor 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.DisposeObject">
            <summary>设置 SelfSimDescriptor.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.DisposeObject01">
            <summary>设置 SelfSimDescriptor.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.InitializeStub">
            <summary>初始化 type StubSelfSimDescriptor 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubSelfSimDescriptor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Features2D.Fakes.StubStarDetector">
            <summary>Emgu.CV.Features2D.StarDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubStarDetector.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubStarDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubStarDetector.DisposeObject">
            <summary>设置 StarDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubStarDetector.DisposeObject01">
            <summary>设置 StarDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubStarDetector.InitializeStub">
            <summary>初始化 type StubStarDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Features2D.Fakes.StubStarDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Features2D.Fakes.StubStarDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubStarDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubStarDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Features2D.Fakes.StubStarDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.ShimIndex">
            <summary>Emgu.CV.Flann.Index 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex.#ctor(Emgu.CV.Flann.Index)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.ConstructorMatrixOfSingle">
            <summary>设置 Index.Index(Matrix`1&lt;Single&gt; values) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.ConstructorMatrixOfSingleInt32">
            <summary>设置 Index.Index(Matrix`1&lt;Single&gt; values, Int32 numberOfKDTrees) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.ConstructorMatrixOfSingleInt32Int32CenterInitTypeSingle">
            <summary>设置 Index.Index(Matrix`1&lt;Single&gt; values, Int32 branching, Int32 iterations, CenterInitType centersInitType, Single cbIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.ConstructorMatrixOfSingleInt32Int32Int32CenterInitTypeSingle">
            <summary>设置 Index.Index(Matrix`1&lt;Single&gt; values, Int32 numberOfKDTrees, Int32 branching, Int32 iterations, CenterInitType centersInitType, Single cbIndex) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.ConstructorMatrixOfSingleSingleSingleSingleSingle">
            <summary>设置 Index.Index(Matrix`1&lt;Single&gt; values, Single targetPrecision, Single buildWeight, Single memoryWeight, Single sampleFraction) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.DisposeObject">
            <summary>设置 Index.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.KnnSearchMatrixOfSingleMatrixOfInt32MatrixOfSingleInt32Int32">
            <summary>设置 Index.KnnSearch(Matrix`1&lt;Single&gt; queries, Matrix`1&lt;Int32&gt; indices, Matrix`1&lt;Single&gt; squareDistances, Int32 knn, Int32 checks) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.RadiusSearchMatrixOfSingleMatrixOfInt32MatrixOfSingleSingleInt32">
            <summary>设置 Index.RadiusSearch(Matrix`1&lt;Single&gt; queries, Matrix`1&lt;Int32&gt; indices, Matrix`1&lt;Single&gt; squareDistances, Single radius, Int32 checks) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.ShimIndex.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.AllInstances.DisposeObject">
            <summary>设置 Index.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.AllInstances.KnnSearchMatrixOfSingleMatrixOfInt32MatrixOfSingleInt32Int32">
            <summary>设置 Index.KnnSearch(Matrix`1&lt;Single&gt; queries, Matrix`1&lt;Int32&gt; indices, Matrix`1&lt;Single&gt; squareDistances, Int32 knn, Int32 checks) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex.AllInstances.RadiusSearchMatrixOfSingleMatrixOfInt32MatrixOfSingleSingleInt32">
            <summary>设置 Index.RadiusSearch(Matrix`1&lt;Single&gt; queries, Matrix`1&lt;Int32&gt; indices, Matrix`1&lt;Single&gt; squareDistances, Single radius, Int32 checks) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.ShimIndex3D">
            <summary>Emgu.CV.Flann.Index3D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex3D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex3D.#ctor(Emgu.CV.Flann.Index3D)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex3D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex3D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.ShimIndex3D.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.ApproximateNearestNeighbourMCvPoint3D32fDoubleOut">
            <summary>设置 Index3D.ApproximateNearestNeighbour(MCvPoint3D32f position, Double&amp; squareDist) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.ConstructorMCvPoint3D32fArray">
            <summary>设置 Index3D.Index3D(MCvPoint3D32f[] points) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.DisposeObject">
            <summary>设置 Index3D.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.ShimIndex3D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.AllInstances.ApproximateNearestNeighbourMCvPoint3D32fDoubleOut">
            <summary>设置 Index3D.ApproximateNearestNeighbour(MCvPoint3D32f position, Double&amp; squareDist) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.ShimIndex3D.AllInstances.DisposeObject">
            <summary>设置 Index3D.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.StubIndex">
            <summary>Emgu.CV.Flann.Index 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.#ctor(Emgu.CV.Matrix{System.Single})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.#ctor(Emgu.CV.Matrix{System.Single},System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.#ctor(Emgu.CV.Matrix{System.Single},System.Int32,System.Int32,Emgu.CV.Flann.CenterInitType,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.#ctor(Emgu.CV.Matrix{System.Single},System.Single,System.Single,System.Single,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.#ctor(Emgu.CV.Matrix{System.Single},System.Int32,System.Int32,System.Int32,Emgu.CV.Flann.CenterInitType,System.Single)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.DisposeObject">
            <summary>设置 Index.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Flann.Fakes.StubIndex.DisposeObject01">
            <summary>设置 Index.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.InitializeStub">
            <summary>初始化 type StubIndex 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Flann.Fakes.StubIndex.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Flann.Fakes.StubIndex3D">
            <summary>Emgu.CV.Flann.Index3D 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex3D.#ctor(Emgu.CV.Structure.MCvPoint3D32f[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex3D.DisposeObject">
            <summary>设置 Index3D.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Flann.Fakes.StubIndex3D.DisposeObject01">
            <summary>设置 Index3D.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex3D.InitializeStub">
            <summary>初始化 type StubIndex3D 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Flann.Fakes.StubIndex3D.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Flann.Fakes.StubIndex3D.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex3D.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex3D.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Flann.Fakes.StubIndex3D.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate">
            <summary>Emgu.CV.Geodetic.GeodeticCoordinate 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.AdditionOpGeodeticCoordinateGeodeticCoordinate">
            <summary>设置 GeodeticCoordinate.op_Addition(GeodeticCoordinate coor1, GeodeticCoordinate coor2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.DegreeToRadianDouble">
            <summary>设置 GeodeticCoordinate.DegreeToRadian(Double degree) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.MultiplyOpGeodeticCoordinateDouble">
            <summary>设置 GeodeticCoordinate.op_Multiply(GeodeticCoordinate coor, Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.RadianToDegreeDouble">
            <summary>设置 GeodeticCoordinate.RadianToDegree(Double radian) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.StaticConstructor">
            <summary>设置 GeodeticCoordinate.GeodeticCoordinate() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.SubtractionOpGeodeticCoordinateGeodeticCoordinate">
            <summary>设置 GeodeticCoordinate.op_Subtraction(GeodeticCoordinate coor1, GeodeticCoordinate coor2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Geodetic.Fakes.ShimGeodeticCoordinate.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute">
            <summary>Emgu.CV.Reflection.ExposableMethodAttribute 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.#ctor(Emgu.CV.Reflection.ExposableMethodAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.CategoryGet">
            <summary>设置 ExposableMethodAttribute.get_Category() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.CategorySetString">
            <summary>设置 ExposableMethodAttribute.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.Constructor">
            <summary>设置 ExposableMethodAttribute.ExposableMethodAttribute() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.ExposableGet">
            <summary>设置 ExposableMethodAttribute.get_Exposable() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.ExposableSetBoolean">
            <summary>设置 ExposableMethodAttribute.set_Exposable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.GenericParametersOptionSizesGet">
            <summary>设置 ExposableMethodAttribute.get_GenericParametersOptionSizes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.GenericParametersOptionSizesSetInt32Array">
            <summary>设置 ExposableMethodAttribute.set_GenericParametersOptionSizes(Int32[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.GenericParametersOptionsGet">
            <summary>设置 ExposableMethodAttribute.get_GenericParametersOptions() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.GenericParametersOptionsSetTypeArray">
            <summary>设置 ExposableMethodAttribute.set_GenericParametersOptions(Type[] value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.CategoryGet">
            <summary>设置 ExposableMethodAttribute.get_Category() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.CategorySetString">
            <summary>设置 ExposableMethodAttribute.set_Category(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.ExposableGet">
            <summary>设置 ExposableMethodAttribute.get_Exposable() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.ExposableSetBoolean">
            <summary>设置 ExposableMethodAttribute.set_Exposable(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.GenericParametersOptionSizesGet">
            <summary>设置 ExposableMethodAttribute.get_GenericParametersOptionSizes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.GenericParametersOptionSizesSetInt32Array">
            <summary>设置 ExposableMethodAttribute.set_GenericParametersOptionSizes(Int32[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.GenericParametersOptionsGet">
            <summary>设置 ExposableMethodAttribute.get_GenericParametersOptions() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimExposableMethodAttribute.AllInstances.GenericParametersOptionsSetTypeArray">
            <summary>设置 ExposableMethodAttribute.set_GenericParametersOptions(Type[] value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimGenericParameter">
            <summary>Emgu.CV.Reflection.GenericParameter 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimGenericParameter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimGenericParameter.#ctor(Emgu.CV.Reflection.GenericParameter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimGenericParameter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimGenericParameter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AvailableTypesGet">
            <summary>设置 GenericParameter.get_AvailableTypes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AvailableTypesSetTypeArray">
            <summary>设置 GenericParameter.set_AvailableTypes(Type[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.ConstructorTypeTypeArray">
            <summary>设置 GenericParameter.GenericParameter(Type selectedType, Type[] availableType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.SelectedTypeGet">
            <summary>设置 GenericParameter.get_SelectedType() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.SelectedTypeSetType">
            <summary>设置 GenericParameter.set_SelectedType(Type value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AllInstances.AvailableTypesGet">
            <summary>设置 GenericParameter.get_AvailableTypes() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AllInstances.AvailableTypesSetTypeArray">
            <summary>设置 GenericParameter.set_AvailableTypes(Type[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AllInstances.SelectedTypeGet">
            <summary>设置 GenericParameter.get_SelectedType() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimGenericParameter.AllInstances.SelectedTypeSetType">
            <summary>设置 GenericParameter.set_SelectedType(Type value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimReflectColorType">
            <summary>Emgu.CV.Reflection.ReflectColorType 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectColorType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectColorType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectColorType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectColorType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectColorType.GetDisplayColorOfChannelsIColor">
            <summary>设置 ReflectColorType.GetDisplayColorOfChannels(IColor color) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectColorType.GetNamesOfChannelsIColor">
            <summary>设置 ReflectColorType.GetNamesOfChannels(IColor color) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.ShimReflectIImage">
            <summary>Emgu.CV.Reflection.ReflectIImage 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectIImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectIImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.ShimReflectIImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectIImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectIImage.GetImageMethodsIImage">
            <summary>设置 ReflectIImage.GetImageMethods(IImage image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectIImage.GetPixelColorIImagePoint">
            <summary>设置 ReflectIImage.GetPixelColor(IImage image, Point location) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectIImage.GetTypeOfColorIImage">
            <summary>设置 ReflectIImage.GetTypeOfColor(IImage image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.ShimReflectIImage.GetTypeOfDepthIImage">
            <summary>设置 ReflectIImage.GetTypeOfDepth(IImage image) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Reflection.Fakes.StubGenericParameter">
            <summary>Emgu.CV.Reflection.GenericParameter 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.StubGenericParameter.#ctor(System.Type,System.Type[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Reflection.Fakes.StubGenericParameter.InitializeStub">
            <summary>初始化 type StubGenericParameter 的新实例</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.StubGenericParameter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.StubGenericParameter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Reflection.Fakes.StubGenericParameter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimBgr">
            <summary>Emgu.CV.Structure.Bgr 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgr.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgr.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgr.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimBgr.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimBgr.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimBgra">
            <summary>Emgu.CV.Structure.Bgra 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgra.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgra.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimBgra.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimBgra.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimBgra.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCircleF">
            <summary>Emgu.CV.Structure.CircleF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCircleF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCircleF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCircleF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimCircleF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCircleF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCross2DF">
            <summary>Emgu.CV.Structure.Cross2DF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCross2DF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCross2DF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCross2DF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimCross2DF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCross2DF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCuboid">
            <summary>Emgu.CV.Structure.Cuboid 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCuboid.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCuboid.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimCuboid.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimCuboid.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimCuboid.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimEllipse">
            <summary>Emgu.CV.Structure.Ellipse 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimEllipse.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimEllipse.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimEllipse.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimEllipse.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimEllipse.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimGray">
            <summary>Emgu.CV.Structure.Gray 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimGray.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimGray.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimGray.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimGray.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimGray.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimHls">
            <summary>Emgu.CV.Structure.Hls 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHls.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHls.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHls.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimHls.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimHls.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimHsv">
            <summary>Emgu.CV.Structure.Hsv 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHsv.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHsv.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimHsv.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimHsv.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimHsv.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLab">
            <summary>Emgu.CV.Structure.Lab 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLab.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLab.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLab.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimLab.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLab.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment2D">
            <summary>Emgu.CV.Structure.LineSegment2D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimLineSegment2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment2DF">
            <summary>Emgu.CV.Structure.LineSegment2DF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2DF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2DF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment2DF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimLineSegment2DF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment2DF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment3DF">
            <summary>Emgu.CV.Structure.LineSegment3DF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment3DF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment3DF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLineSegment3DF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimLineSegment3DF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLineSegment3DF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLuv">
            <summary>Emgu.CV.Structure.Luv 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLuv.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLuv.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimLuv.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimLuv.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimLuv.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvAvgComp">
            <summary>Emgu.CV.Structure.MCvAvgComp 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvAvgComp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvAvgComp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvAvgComp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvAvgComp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvAvgComp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel">
            <summary>Emgu.CV.Structure.MCvBGCodeBookModel 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBGCodeBookModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel">
            <summary>Emgu.CV.Structure.MCvBGStatModel 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBGStatModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlob">
            <summary>Emgu.CV.Structure.MCvBlob 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlob.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlob.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlob.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlob.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlob.EmptyGet">
            <summary>设置 MCvBlob.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlob.ExplicitOpMCvBlobRectangle">
            <summary>设置 MCvBlob.op_Explicit(MCvBlob blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlob.ExplicitOpMCvBlobRectangleF">
            <summary>设置 MCvBlob.op_Explicit(MCvBlob blob) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlob.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1">
            <summary>Emgu.CV.Structure.MCvBlobTrackerAutoParam1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerAutoParam1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH">
            <summary>Emgu.CV.Structure.MCvBlobTrackerParamLH 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamLH.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS">
            <summary>Emgu.CV.Structure.MCvBlobTrackerParamMS 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBlobTrackerParamMS.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBox2D">
            <summary>Emgu.CV.Structure.MCvBox2D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBox2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBox2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvBox2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBox2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBox2D.EmptyGet">
            <summary>设置 MCvBox2D.get_Empty() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvBox2D.ImplicitOpRectangleFMCvBox2D">
            <summary>设置 MCvBox2D.op_Implicit(RectangleF rectangle) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvBox2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvChain">
            <summary>Emgu.CV.Structure.MCvChain 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvChain.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvChain.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvChain.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvChain.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvChain.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConDensation">
            <summary>Emgu.CV.Structure.MCvConDensation 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConDensation.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConDensation.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConDensation.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvConDensation.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConDensation.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp">
            <summary>Emgu.CV.Structure.MCvConnectedComp 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConnectedComp.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvContour">
            <summary>Emgu.CV.Structure.MCvContour 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvContour.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvContour.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvContour.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvContour.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvContour.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect">
            <summary>Emgu.CV.Structure.MCvConvexityDefect 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvConvexityDefect.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams">
            <summary>Emgu.CV.Structure.MCvFGDStatModelParams 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvFGDStatModelParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvFont">
            <summary>Emgu.CV.Structure.MCvFont 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFont.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFont.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvFont.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvFont.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvFont.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams">
            <summary>Emgu.CV.Structure.MCvGaussBGStatModelParams 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvGaussBGStatModelParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvHistogram">
            <summary>Emgu.CV.Structure.MCvHistogram 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHistogram.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHistogram.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHistogram.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvHistogram.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvHistogram.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvHuMoments">
            <summary>Emgu.CV.Structure.MCvHuMoments 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHuMoments.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHuMoments.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvHuMoments.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvHuMoments.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvHuMoments.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvKalman">
            <summary>Emgu.CV.Structure.MCvKalman 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvKalman.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvKalman.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvKalman.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvKalman.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvKalman.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMSERParams">
            <summary>Emgu.CV.Structure.MCvMSERParams 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMSERParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMSERParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMSERParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvMSERParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMSERParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMat">
            <summary>Emgu.CV.Structure.MCvMat 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvMat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMatND">
            <summary>Emgu.CV.Structure.MCvMatND 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvMatND.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMatND.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension">
            <summary>Emgu.CV.Structure.MCvMatND+Dimension 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMatND.ShimDimension.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMoments">
            <summary>Emgu.CV.Structure.MCvMoments 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMoments.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMoments.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvMoments.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvMoments.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvMoments.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection">
            <summary>Emgu.CV.Structure.MCvObjectDetection 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvObjectDetection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f">
            <summary>Emgu.CV.Structure.MCvPoint2D64f 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.AdditionOpMCvPoint2D64fMCvPoint2D64f">
            <summary>设置 MCvPoint2D64f.op_Addition(MCvPoint2D64f p1, MCvPoint2D64f p2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.MultiplyOpDoubleMCvPoint2D64f">
            <summary>设置 MCvPoint2D64f.op_Multiply(Double scale, MCvPoint2D64f p) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.MultiplyOpMCvPoint2D64fDouble">
            <summary>设置 MCvPoint2D64f.op_Multiply(MCvPoint2D64f p, Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.SubtractionOpMCvPoint2D64fMCvPoint2D64f">
            <summary>设置 MCvPoint2D64f.op_Subtraction(MCvPoint2D64f p1, MCvPoint2D64f p2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint2D64f.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f">
            <summary>Emgu.CV.Structure.MCvPoint3D32f 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.AdditionOpMCvPoint3D32fMCvPoint3D32f">
            <summary>设置 MCvPoint3D32f.op_Addition(MCvPoint3D32f p1, MCvPoint3D32f p2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.ImplicitOpMCvPoint3D32fMCvPoint3D64f">
            <summary>设置 MCvPoint3D32f.op_Implicit(MCvPoint3D32f point) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.MultiplyOpMCvPoint3D32fSingle">
            <summary>设置 MCvPoint3D32f.op_Multiply(MCvPoint3D32f p, Single scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.MultiplyOpSingleMCvPoint3D32f">
            <summary>设置 MCvPoint3D32f.op_Multiply(Single scale, MCvPoint3D32f p) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.SubtractionOpMCvPoint3D32fMCvPoint3D32f">
            <summary>设置 MCvPoint3D32f.op_Subtraction(MCvPoint3D32f p1, MCvPoint3D32f p2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint3D32f.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f">
            <summary>Emgu.CV.Structure.MCvPoint3D64f 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.AdditionOpMCvPoint3D64fMCvPoint3D64f">
            <summary>设置 MCvPoint3D64f.op_Addition(MCvPoint3D64f p1, MCvPoint3D64f p2) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.MultiplyOpDoubleMCvPoint3D64f">
            <summary>设置 MCvPoint3D64f.op_Multiply(Double scale, MCvPoint3D64f p) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.MultiplyOpMCvPoint3D64fDouble">
            <summary>设置 MCvPoint3D64f.op_Multiply(MCvPoint3D64f p, Double scale) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.SubtractionOpMCvPoint3D64fMCvPoint3D64f">
            <summary>设置 MCvPoint3D64f.op_Subtraction(MCvPoint3D64f p1, MCvPoint3D64f p2) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvPoint3D64f.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D">
            <summary>Emgu.CV.Structure.MCvQuadEdge2D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvQuadEdge2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSURFParams">
            <summary>Emgu.CV.Structure.MCvSURFParams 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSURFParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSURFParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint">
            <summary>Emgu.CV.Structure.MCvSURFPoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSURFPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvScalar">
            <summary>Emgu.CV.Structure.MCvScalar 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvScalar.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvScalar.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvScalar.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvScalar.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvScalar.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeq">
            <summary>Emgu.CV.Structure.MCvSeq 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSeq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock">
            <summary>Emgu.CV.Structure.MCvSeqBlock 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeqBlock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeqReader">
            <summary>Emgu.CV.Structure.MCvSeqReader 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSeqReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSeqReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSeqReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSet">
            <summary>Emgu.CV.Structure.MCvSet 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSet.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSet.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSet.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSet.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSet.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSetElem">
            <summary>Emgu.CV.Structure.MCvSetElem 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSetElem.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSetElem.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSetElem.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSetElem.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSetElem.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSlice">
            <summary>Emgu.CV.Structure.MCvSlice 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSlice.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSlice.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSlice.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSlice.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSlice.WholeSeqGet">
            <summary>设置 MCvSlice.get_WholeSeq() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSlice.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams">
            <summary>Emgu.CV.Structure.MCvStarDetectorParams 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStarDetectorParams.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint">
            <summary>Emgu.CV.Structure.MCvStarKeypoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStarKeypoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState">
            <summary>Emgu.CV.Structure.MCvStereoBMState 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStereoBMState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState">
            <summary>Emgu.CV.Structure.MCvStereoGCState 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvStereoGCState.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D">
            <summary>Emgu.CV.Structure.MCvSubdiv2D 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2D.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge">
            <summary>Emgu.CV.Structure.MCvSubdiv2DEdge 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DEdge.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint">
            <summary>Emgu.CV.Structure.MCvSubdiv2DPoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvSubdiv2DPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria">
            <summary>Emgu.CV.Structure.MCvTermCriteria 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMCvTermCriteria.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMDMatch">
            <summary>Emgu.CV.Structure.MDMatch 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMDMatch.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMDMatch.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMDMatch.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMDMatch.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMDMatch.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMIplImage">
            <summary>Emgu.CV.Structure.MIplImage 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMIplImage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMIplImage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMIplImage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMIplImage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMIplImage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMKeyPoint">
            <summary>Emgu.CV.Structure.MKeyPoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMKeyPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMKeyPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimMKeyPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimMKeyPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimMKeyPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRangeF">
            <summary>Emgu.CV.Structure.RangeF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRangeF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRangeF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRangeF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimRangeF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRangeF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRgb">
            <summary>Emgu.CV.Structure.Rgb 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgb.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgb.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgb.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimRgb.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRgb.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRgba">
            <summary>Emgu.CV.Structure.Rgba 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgba.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgba.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimRgba.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimRgba.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimRgba.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimTriangle2DF">
            <summary>Emgu.CV.Structure.Triangle2DF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle2DF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle2DF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle2DF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimTriangle2DF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimTriangle2DF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimTriangle3DF">
            <summary>Emgu.CV.Structure.Triangle3DF 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle3DF.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle3DF.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimTriangle3DF.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimTriangle3DF.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimTriangle3DF.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimXyz">
            <summary>Emgu.CV.Structure.Xyz 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimXyz.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimXyz.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimXyz.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimXyz.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimXyz.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimYcc">
            <summary>Emgu.CV.Structure.Ycc 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimYcc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimYcc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Structure.Fakes.ShimYcc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Structure.Fakes.ShimYcc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Emgu.CV.Structure.Fakes.ShimYcc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimCvException">
            <summary>Emgu.CV.Util.CvException 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvException.#ctor(Emgu.CV.Util.CvException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.Constructor">
            <summary>设置 CvException.CvException() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.ConstructorInt32StringStringStringInt32">
            <summary>设置 CvException.CvException(Int32 status, String funcName, String errMsg, String fileName, Int32 line) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.ErrorMessageGet">
            <summary>设置 CvException.get_ErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.ErrorMessageSetString">
            <summary>设置 CvException.set_ErrorMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.ErrorStrGet">
            <summary>设置 CvException.get_ErrorStr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.FileNameGet">
            <summary>设置 CvException.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.FileNameSetString">
            <summary>设置 CvException.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.FunctionNameGet">
            <summary>设置 CvException.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.FunctionNameSetString">
            <summary>设置 CvException.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.LineGet">
            <summary>设置 CvException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.LineSetInt32">
            <summary>设置 CvException.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.StatusGet">
            <summary>设置 CvException.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.StatusSetInt32">
            <summary>设置 CvException.set_Status(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimCvException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.ErrorMessageGet">
            <summary>设置 CvException.get_ErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.ErrorMessageSetString">
            <summary>设置 CvException.set_ErrorMessage(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.ErrorStrGet">
            <summary>设置 CvException.get_ErrorStr() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.FileNameGet">
            <summary>设置 CvException.get_FileName() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.FileNameSetString">
            <summary>设置 CvException.set_FileName(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.FunctionNameGet">
            <summary>设置 CvException.get_FunctionName() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.FunctionNameSetString">
            <summary>设置 CvException.set_FunctionName(String value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.LineGet">
            <summary>设置 CvException.get_Line() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.LineSetInt32">
            <summary>设置 CvException.set_Line(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.StatusGet">
            <summary>设置 CvException.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvException.AllInstances.StatusSetInt32">
            <summary>设置 CvException.set_Status(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimCvToolbox">
            <summary>Emgu.CV.Util.CvToolbox 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvToolbox.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvToolbox.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimCvToolbox.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.ColorPaletteToLookupTableColorPaletteMatrixOfByteOutMatrixOfByteOutMatrixOfByteOutMatrixOfByteOut">
            <summary>设置 CvToolbox.ColorPaletteToLookupTable(ColorPalette pallette, Matrix`1&lt;Byte&gt;&amp; bTable, Matrix`1&lt;Byte&gt;&amp; gTable, Matrix`1&lt;Byte&gt;&amp; rTable, Matrix`1&lt;Byte&gt;&amp; aTable) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GenerateGrayscalePalette">
            <summary>设置 CvToolbox.GenerateGrayscalePalette() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GetCodeTypeType">
            <summary>设置 CvToolbox.GetCode(Type srcType, Type destType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GetColorCvtCodeTypeType">
            <summary>设置 CvToolbox.GetColorCvtCode(Type srcColorType, Type destColorType) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GetMatrixDepthType">
            <summary>设置 CvToolbox.GetMatrixDepth(Type typeOfDepth) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GetMinMaxIEnumerableOfMCvPoint3D64fMCvPoint3D64fOutMCvPoint3D64fOut">
            <summary>设置 CvToolbox.GetMinMax(IEnumerable`1&lt;MCvPoint3D64f&gt; points, MCvPoint3D64f&amp; min, MCvPoint3D64f&amp; max) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.GetModuleInfoStringOutStringOut">
            <summary>设置 CvToolbox.GetModuleInfo(String&amp; pluginName, String&amp; versionName) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.OptimizeCVBoolean">
            <summary>设置 CvToolbox.OptimizeCV(Boolean enable) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimCvToolbox.StaticConstructor">
            <summary>设置 CvToolbox.CvToolbox() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimDataLogger">
            <summary>Emgu.CV.Util.DataLogger 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger.#ctor(Emgu.CV.Util.DataLogger)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.ConstructorInt32">
            <summary>设置 DataLogger.DataLogger(Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.DisposeObject">
            <summary>设置 DataLogger.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.HelperDataHandlerIntPtrInt32">
            <summary>设置 DataLogger.HelperDataHandler(IntPtr data, Int32 loggerId) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.LogIntPtrInt32">
            <summary>设置 DataLogger.Log(IntPtr data, Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.OnDataReceivedAddDataLoggerDataCallbackHandler">
            <summary>设置 DataLogger.add_OnDataReceived(DataCallbackHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.OnDataReceivedRemoveDataLoggerDataCallbackHandler">
            <summary>设置 DataLogger.remove_OnDataReceived(DataCallbackHandler value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances.DisposeObject">
            <summary>设置 DataLogger.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances.HelperDataHandlerIntPtrInt32">
            <summary>设置 DataLogger.HelperDataHandler(IntPtr data, Int32 loggerId) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances.LogIntPtrInt32">
            <summary>设置 DataLogger.Log(IntPtr data, Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances.OnDataReceivedAddDataLoggerDataCallbackHandler">
            <summary>设置 DataLogger.add_OnDataReceived(DataCallbackHandler value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger.AllInstances.OnDataReceivedRemoveDataLoggerDataCallbackHandler">
            <summary>设置 DataLogger.remove_OnDataReceived(DataCallbackHandler value) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimDataLogger`1">
            <summary>Emgu.CV.Util.DataLogger`1 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger`1.#ctor(Emgu.CV.Util.DataLogger{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimDataLogger`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.ConstructorInt32">
            <summary>设置 DataLogger`1.DataLogger`1(Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.DataHandlerObjectEventArgsOfIntPtr">
            <summary>设置 DataLogger`1.DataHandler(Object sender, EventArgs`1&lt;IntPtr&gt; e) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.DisposeObject">
            <summary>设置 DataLogger`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.ImplicitOpDataLoggerOfT0IntPtr">
            <summary>设置 DataLogger`1.op_Implicit(DataLogger`1&lt;!0&gt; obj) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.LogT0Int32">
            <summary>设置 DataLogger`1.Log(!0 data, Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.OnDataReceivedAddDataLoggerDataCallbackHandlerOfT0">
            <summary>设置 DataLogger`1.add_OnDataReceived(DataCallbackHandler&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.OnDataReceivedRemoveDataLoggerDataCallbackHandlerOfT0">
            <summary>设置 DataLogger`1.remove_OnDataReceived(DataCallbackHandler&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.PtrGet">
            <summary>设置 DataLogger`1.get_Ptr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.DataHandlerObjectEventArgsOfIntPtr">
            <summary>设置 DataLogger`1.DataHandler(Object sender, EventArgs`1&lt;IntPtr&gt; e) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.DisposeObject">
            <summary>设置 DataLogger`1.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.LogT0Int32">
            <summary>设置 DataLogger`1.Log(!0 data, Int32 logLevel) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.OnDataReceivedAddDataLoggerDataCallbackHandlerOfT0">
            <summary>设置 DataLogger`1.add_OnDataReceived(DataCallbackHandler&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.OnDataReceivedRemoveDataLoggerDataCallbackHandlerOfT0">
            <summary>设置 DataLogger`1.remove_OnDataReceived(DataCallbackHandler&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimDataLogger`1.AllInstances.PtrGet">
            <summary>设置 DataLogger`1.get_Ptr() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimStructSize">
            <summary>Emgu.CV.Util.StructSize 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimStructSize.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimStructSize.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimStructSize.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvBlobGet">
            <summary>设置 StructSize.get_MCvBlob() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvContourGet">
            <summary>设置 StructSize.get_MCvContour() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvHistogramGet">
            <summary>设置 StructSize.get_MCvHistogram() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvMatGet">
            <summary>设置 StructSize.get_MCvMat() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvMatNDGet">
            <summary>设置 StructSize.get_MCvMatND() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvPoint2D64fGet">
            <summary>设置 StructSize.get_MCvPoint2D64f() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvPoint3D32fGet">
            <summary>设置 StructSize.get_MCvPoint3D32f() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvSeqBlockGet">
            <summary>设置 StructSize.get_MCvSeqBlock() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MCvSeqGet">
            <summary>设置 StructSize.get_MCvSeq() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.MIplImageGet">
            <summary>设置 StructSize.get_MIplImage() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.PointFGet">
            <summary>设置 StructSize.get_PointF() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.RangFGet">
            <summary>设置 StructSize.get_RangF() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimStructSize.StaticConstructor">
            <summary>设置 StructSize.StructSize() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler">
            <summary>Emgu.CV.Util.TbbTaskScheduler 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.#ctor(Emgu.CV.Util.TbbTaskScheduler)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.Constructor">
            <summary>设置 TbbTaskScheduler.TbbTaskScheduler() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.DisposeObject">
            <summary>设置 TbbTaskScheduler.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimTbbTaskScheduler.AllInstances.DisposeObject">
            <summary>设置 TbbTaskScheduler.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfByte">
            <summary>Emgu.CV.Util.VectorOfByte 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfByte.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfByte.#ctor(Emgu.CV.Util.VectorOfByte)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfByte.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfByte.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfByte.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.Clear">
            <summary>设置 VectorOfByte.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.Constructor">
            <summary>设置 VectorOfByte.VectorOfByte() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.ConstructorInt32">
            <summary>设置 VectorOfByte.VectorOfByte(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.DisposeObject">
            <summary>设置 VectorOfByte.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.PushSingleArray">
            <summary>设置 VectorOfByte.Push(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.SizeGet">
            <summary>设置 VectorOfByte.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.StartAddressGet">
            <summary>设置 VectorOfByte.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.ToArray">
            <summary>设置 VectorOfByte.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.Clear">
            <summary>设置 VectorOfByte.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.DisposeObject">
            <summary>设置 VectorOfByte.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.PushSingleArray">
            <summary>设置 VectorOfByte.Push(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.SizeGet">
            <summary>设置 VectorOfByte.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.StartAddressGet">
            <summary>设置 VectorOfByte.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfByte.AllInstances.ToArray">
            <summary>设置 VectorOfByte.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfDMatch">
            <summary>Emgu.CV.Util.VectorOfDMatch 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.#ctor(Emgu.CV.Util.VectorOfDMatch)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.Clear">
            <summary>设置 VectorOfDMatch.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.Constructor">
            <summary>设置 VectorOfDMatch.VectorOfDMatch() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.ConstructorInt32">
            <summary>设置 VectorOfDMatch.VectorOfDMatch(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.DisposeObject">
            <summary>设置 VectorOfDMatch.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.PushMDMatchArray">
            <summary>设置 VectorOfDMatch.Push(MDMatch[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.SizeGet">
            <summary>设置 VectorOfDMatch.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.StartAddressGet">
            <summary>设置 VectorOfDMatch.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.ToArray">
            <summary>设置 VectorOfDMatch.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.Clear">
            <summary>设置 VectorOfDMatch.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.DisposeObject">
            <summary>设置 VectorOfDMatch.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.PushMDMatchArray">
            <summary>设置 VectorOfDMatch.Push(MDMatch[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.SizeGet">
            <summary>设置 VectorOfDMatch.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.StartAddressGet">
            <summary>设置 VectorOfDMatch.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDMatch.AllInstances.ToArray">
            <summary>设置 VectorOfDMatch.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode">
            <summary>Emgu.CV.Util.VectorOfDataMatrixCode 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.#ctor(Emgu.CV.Util.VectorOfDataMatrixCode)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.Constructor">
            <summary>设置 VectorOfDataMatrixCode.VectorOfDataMatrixCode() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.DisposeObject">
            <summary>设置 VectorOfDataMatrixCode.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.SizeGet">
            <summary>设置 VectorOfDataMatrixCode.get_Size() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.AllInstances.DisposeObject">
            <summary>设置 VectorOfDataMatrixCode.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfDataMatrixCode.AllInstances.SizeGet">
            <summary>设置 VectorOfDataMatrixCode.get_Size() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfFloat">
            <summary>Emgu.CV.Util.VectorOfFloat 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfFloat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfFloat.#ctor(Emgu.CV.Util.VectorOfFloat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfFloat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfFloat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfFloat.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.Clear">
            <summary>设置 VectorOfFloat.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.Constructor">
            <summary>设置 VectorOfFloat.VectorOfFloat() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.ConstructorInt32">
            <summary>设置 VectorOfFloat.VectorOfFloat(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.DisposeObject">
            <summary>设置 VectorOfFloat.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.PushSingleArray">
            <summary>设置 VectorOfFloat.Push(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.SizeGet">
            <summary>设置 VectorOfFloat.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.StartAddressGet">
            <summary>设置 VectorOfFloat.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.ToArray">
            <summary>设置 VectorOfFloat.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.Clear">
            <summary>设置 VectorOfFloat.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.DisposeObject">
            <summary>设置 VectorOfFloat.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.PushSingleArray">
            <summary>设置 VectorOfFloat.Push(Single[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.SizeGet">
            <summary>设置 VectorOfFloat.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.StartAddressGet">
            <summary>设置 VectorOfFloat.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfFloat.AllInstances.ToArray">
            <summary>设置 VectorOfFloat.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint">
            <summary>Emgu.CV.Util.VectorOfKeyPoint 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.#ctor(Emgu.CV.Util.VectorOfKeyPoint)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.Clear">
            <summary>设置 VectorOfKeyPoint.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.Constructor">
            <summary>设置 VectorOfKeyPoint.VectorOfKeyPoint() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.ConstructorInt32">
            <summary>设置 VectorOfKeyPoint.VectorOfKeyPoint(Int32 size) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.ConstructorSerializationInfoStreamingContext">
            <summary>设置 VectorOfKeyPoint.VectorOfKeyPoint(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.DisposeObject">
            <summary>设置 VectorOfKeyPoint.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.FilterByImageBorderSizeInt32">
            <summary>设置 VectorOfKeyPoint.FilterByImageBorder(Size imageSize, Int32 borderSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.FilterByKeypointSizeSingleSingle">
            <summary>设置 VectorOfKeyPoint.FilterByKeypointSize(Single minSize, Single maxSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.FilterByPixelsMaskImageOfGrayByte">
            <summary>设置 VectorOfKeyPoint.FilterByPixelsMask(Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 VectorOfKeyPoint.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.ItemGetInt32">
            <summary>设置 VectorOfKeyPoint.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.PushMKeyPointArray">
            <summary>设置 VectorOfKeyPoint.Push(MKeyPoint[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.SizeGet">
            <summary>设置 VectorOfKeyPoint.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.StartAddressGet">
            <summary>设置 VectorOfKeyPoint.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.ToArray">
            <summary>设置 VectorOfKeyPoint.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.Clear">
            <summary>设置 VectorOfKeyPoint.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.DisposeObject">
            <summary>设置 VectorOfKeyPoint.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.FilterByImageBorderSizeInt32">
            <summary>设置 VectorOfKeyPoint.FilterByImageBorder(Size imageSize, Int32 borderSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.FilterByKeypointSizeSingleSingle">
            <summary>设置 VectorOfKeyPoint.FilterByKeypointSize(Single minSize, Single maxSize) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.FilterByPixelsMaskImageOfGrayByte">
            <summary>设置 VectorOfKeyPoint.FilterByPixelsMask(Image`2&lt;Gray,Byte&gt; mask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 VectorOfKeyPoint.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.ItemGetInt32">
            <summary>设置 VectorOfKeyPoint.get_Item(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.PushMKeyPointArray">
            <summary>设置 VectorOfKeyPoint.Push(MKeyPoint[] value) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.SizeGet">
            <summary>设置 VectorOfKeyPoint.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.StartAddressGet">
            <summary>设置 VectorOfKeyPoint.get_StartAddress() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.ShimVectorOfKeyPoint.AllInstances.ToArray">
            <summary>设置 VectorOfKeyPoint.ToArray() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubCvException">
            <summary>Emgu.CV.Util.CvException 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.#ctor(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubCvException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubCvException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.InitializeStub">
            <summary>初始化 type StubCvException 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubCvException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubCvException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubCvException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubDataLogger">
            <summary>Emgu.CV.Util.DataLogger 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger.DisposeObject">
            <summary>设置 DataLogger.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubDataLogger.DisposeObject01">
            <summary>设置 DataLogger.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger.InitializeStub">
            <summary>初始化 type StubDataLogger 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubDataLogger.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubDataLogger`1">
            <summary>Emgu.CV.Util.DataLogger`1 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger`1.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger`1.DisposeObject">
            <summary>设置 DataLogger`1.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubDataLogger`1.DisposeObject01">
            <summary>设置 DataLogger`1.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger`1.InitializeStub">
            <summary>初始化 type StubDataLogger 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubDataLogger`1.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubDataLogger`1.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubDataLogger`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubTbbTaskScheduler">
            <summary>Emgu.CV.Util.TbbTaskScheduler 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.DisposeObject">
            <summary>设置 TbbTaskScheduler.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.DisposeObject01">
            <summary>设置 TbbTaskScheduler.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.InitializeStub">
            <summary>初始化 type StubTbbTaskScheduler 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubTbbTaskScheduler.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubVectorOfByte">
            <summary>Emgu.CV.Util.VectorOfByte 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfByte.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfByte.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfByte.DisposeObject">
            <summary>设置 VectorOfByte.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfByte.DisposeObject01">
            <summary>设置 VectorOfByte.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfByte.InitializeStub">
            <summary>初始化 type StubVectorOfByte 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfByte.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfByte.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfByte.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfByte.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfByte.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubVectorOfDMatch">
            <summary>Emgu.CV.Util.VectorOfDMatch 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDMatch.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDMatch.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDMatch.DisposeObject">
            <summary>设置 VectorOfDMatch.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfDMatch.DisposeObject01">
            <summary>设置 VectorOfDMatch.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDMatch.InitializeStub">
            <summary>初始化 type StubVectorOfDMatch 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDMatch.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfDMatch.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDMatch.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDMatch.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDMatch.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode">
            <summary>Emgu.CV.Util.VectorOfDataMatrixCode 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.DisposeObject">
            <summary>设置 VectorOfDataMatrixCode.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.DisposeObject01">
            <summary>设置 VectorOfDataMatrixCode.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.InitializeStub">
            <summary>初始化 type StubVectorOfDataMatrixCode 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfDataMatrixCode.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubVectorOfFloat">
            <summary>Emgu.CV.Util.VectorOfFloat 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfFloat.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfFloat.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfFloat.DisposeObject">
            <summary>设置 VectorOfFloat.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfFloat.DisposeObject01">
            <summary>设置 VectorOfFloat.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfFloat.InitializeStub">
            <summary>初始化 type StubVectorOfFloat 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfFloat.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfFloat.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfFloat.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfFloat.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfFloat.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint">
            <summary>Emgu.CV.Util.VectorOfKeyPoint 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.DisposeObject">
            <summary>设置 VectorOfKeyPoint.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.DisposeObject01">
            <summary>设置 VectorOfKeyPoint.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.InitializeStub">
            <summary>初始化 type StubVectorOfKeyPoint 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.Util.Fakes.StubVectorOfKeyPoint.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractor 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.#ctor(Emgu.CV.VideoSurveillance.BackgroundSubstractor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.Bind(Emgu.CV.VideoSurveillance.IBGFGDetector{Emgu.CV.Structure.Bgr})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.BackgroundMaskGet">
            <summary>设置 BackgroundSubstractor.get_BackgroundMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.Constructor">
            <summary>设置 BackgroundSubstractor.BackgroundSubstractor() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.ForgroundMaskGet">
            <summary>设置 BackgroundSubstractor.get_ForgroundMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.ReleaseManagedResources">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.UpdateImageOfBgrByte">
            <summary>设置 BackgroundSubstractor.Update(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.UpdateImageOfBgrByteDouble">
            <summary>设置 BackgroundSubstractor.Update(Image`2&lt;Bgr,Byte&gt; image, Double learningRate) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances.BackgroundMaskGet">
            <summary>设置 BackgroundSubstractor.get_BackgroundMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances.ForgroundMaskGet">
            <summary>设置 BackgroundSubstractor.get_ForgroundMask() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances.ReleaseManagedResources">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances.UpdateImageOfBgrByte">
            <summary>设置 BackgroundSubstractor.Update(Image`2&lt;Bgr,Byte&gt; image) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractor.AllInstances.UpdateImageOfBgrByteDouble">
            <summary>设置 BackgroundSubstractor.Update(Image`2&lt;Bgr,Byte&gt; image, Double learningRate) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.#ctor(Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.Bind(Emgu.CV.VideoSurveillance.IBGFGDetector{Emgu.CV.Structure.Bgr})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.ConstructorInt32Int32DoubleDouble">
            <summary>设置 BackgroundSubstractorMOG.BackgroundSubstractorMOG(Int32 history, Int32 nmixtures, Double backgroundRatio, Double noiseSigma) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG.AllInstances.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG2 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.#ctor(Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG2)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.Bind(Emgu.CV.VideoSurveillance.IBGFGDetector{Emgu.CV.Structure.Bgr})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.ConstructorInt32SingleBoolean">
            <summary>设置 BackgroundSubstractorMOG2.BackgroundSubstractorMOG2(Int32 history, Single varThreshold, Boolean bShadowDetection) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG2.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBackgroundSubstractorMOG2.AllInstances.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG2.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector">
            <summary>Emgu.CV.VideoSurveillance.BlobDetector 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.#ctor(Emgu.CV.VideoSurveillance.BlobDetector)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.ConstructorBLOB_DETECTOR_TYPE">
            <summary>设置 BlobDetector.BlobDetector(BLOB_DETECTOR_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.DetectNewBlobImageOfGrayByteBlobSeqBlobSeq">
            <summary>设置 BlobDetector.DetectNewBlob(Image`2&lt;Gray,Byte&gt; imageForeground, BlobSeq newBlob, BlobSeq oldBlob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.DisposeObject">
            <summary>设置 BlobDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.AllInstances.DetectNewBlobImageOfGrayByteBlobSeqBlobSeq">
            <summary>设置 BlobDetector.DetectNewBlob(Image`2&lt;Gray,Byte&gt; imageForeground, BlobSeq newBlob, BlobSeq oldBlob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobDetector.AllInstances.DisposeObject">
            <summary>设置 BlobDetector.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq">
            <summary>Emgu.CV.VideoSurveillance.BlobSeq 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.#ctor(Emgu.CV.VideoSurveillance.BlobSeq)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Bind(System.Collections.Generic.IEnumerable{Emgu.CV.Structure.MCvBlob})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AddMCvBlob">
            <summary>设置 BlobSeq.Add(MCvBlob blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Clear">
            <summary>设置 BlobSeq.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.Constructor">
            <summary>设置 BlobSeq.BlobSeq() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.ConstructorIntPtr">
            <summary>设置 BlobSeq.BlobSeq(IntPtr ptr) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.CountGet">
            <summary>设置 BlobSeq.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.DisposeObject">
            <summary>设置 BlobSeq.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.GetBlobByIDInt32">
            <summary>设置 BlobSeq.GetBlobByID(Int32 blobID) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.ItemGetInt32">
            <summary>设置 BlobSeq.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.AddMCvBlob">
            <summary>设置 BlobSeq.Add(MCvBlob blob) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.Clear">
            <summary>设置 BlobSeq.Clear() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.CountGet">
            <summary>设置 BlobSeq.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.DisposeObject">
            <summary>设置 BlobSeq.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.GetBlobByIDInt32">
            <summary>设置 BlobSeq.GetBlobByID(Int32 blobID) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeq.AllInstances.ItemGetInt32">
            <summary>设置 BlobSeq.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase">
            <summary>Emgu.CV.VideoSurveillance.BlobSeqBase 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.#ctor(Emgu.CV.VideoSurveillance.BlobSeqBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.Bind(System.Collections.Generic.IEnumerable{Emgu.CV.Structure.MCvBlob})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.Constructor">
            <summary>设置 BlobSeqBase.BlobSeqBase() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.GetEnumerator">
            <summary>设置 BlobSeqBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 BlobSeqBase.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.AllInstances.GetEnumerator">
            <summary>设置 BlobSeqBase.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobSeqBase.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 BlobSeqBase.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc">
            <summary>Emgu.CV.VideoSurveillance.BlobTrackPostProc 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.#ctor(Emgu.CV.VideoSurveillance.BlobTrackPostProc)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.ConstructorBLOB_POST_PROCESS_TYPE">
            <summary>设置 BlobTrackPostProc.BlobTrackPostProc(BLOB_POST_PROCESS_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.DisposeObject">
            <summary>设置 BlobTrackPostProc.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTrackPostProc.AllInstances.DisposeObject">
            <summary>设置 BlobTrackPostProc.DisposeObject() 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker">
            <summary>Emgu.CV.VideoSurveillance.BlobTracker 的填充码类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.#ctor(Emgu.CV.VideoSurveillance.BlobTracker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.Bind(System.Collections.Generic.IEnumerable{Emgu.CV.Structure.MCvBlob})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AddMCvBlobIImageImageOfGrayByte">
            <summary>设置 BlobTracker.Add(MCvBlob blob, IImage currentImage, Image`2&lt;Gray,Byte&gt; currentForegroundMask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.ConstructorBLOBTRACKER_TYPE">
            <summary>设置 BlobTracker.BlobTracker(BLOBTRACKER_TYPE type) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.CountGet">
            <summary>设置 BlobTracker.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.DisposeObject">
            <summary>设置 BlobTracker.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.GetBlobByIDInt32">
            <summary>设置 BlobTracker.GetBlobByID(Int32 blobID) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.ItemGetInt32">
            <summary>设置 BlobTracker.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.RemoveAtInt32">
            <summary>设置 BlobTracker.RemoveAt(Int32 blobIndex) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.AddMCvBlobIImageImageOfGrayByte">
            <summary>设置 BlobTracker.Add(MCvBlob blob, IImage currentImage, Image`2&lt;Gray,Byte&gt; currentForegroundMask) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.CountGet">
            <summary>设置 BlobTracker.get_Count() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.DisposeObject">
            <summary>设置 BlobTracker.DisposeObject() 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.GetBlobByIDInt32">
            <summary>设置 BlobTracker.GetBlobByID(Int32 blobID) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.ItemGetInt32">
            <summary>设置 BlobTracker.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.ShimBlobTracker.AllInstances.RemoveAtInt32">
            <summary>设置 BlobTracker.RemoveAt(Int32 blobIndex) 的 填充码</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractor 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.DisposeObject">
            <summary>设置 DisposableObject.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.DisposeObject01">
            <summary>设置 DisposableObject.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.InitializeStub">
            <summary>初始化 type StubBackgroundSubstractor 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.ReleaseManagedResources">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.ReleaseManagedResources01">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.#ctor(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.DisposeObject01">
            <summary>设置 BackgroundSubstractorMOG.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.InitializeStub">
            <summary>初始化 type StubBackgroundSubstractorMOG 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.ReleaseManagedResources">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.ReleaseManagedResources01">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2">
            <summary>Emgu.CV.VideoSurveillance.BackgroundSubstractorMOG2 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.#ctor(System.Int32,System.Single,System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.DisposeObject">
            <summary>设置 BackgroundSubstractorMOG2.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.DisposeObject01">
            <summary>设置 BackgroundSubstractorMOG2.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.InitializeStub">
            <summary>初始化 type StubBackgroundSubstractorMOG2 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.ReleaseManagedResources">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.ReleaseManagedResources01">
            <summary>设置 BackgroundSubstractor.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBackgroundSubstractorMOG2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector">
            <summary>Emgu.CV.VideoSurveillance.BlobDetector 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.#ctor(Emgu.CV.CvEnum.BLOB_DETECTOR_TYPE)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.DisposeObject">
            <summary>设置 BlobDetector.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.DisposeObject01">
            <summary>设置 BlobDetector.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.InitializeStub">
            <summary>初始化 type StubBlobDetector 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobDetector.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq">
            <summary>Emgu.CV.VideoSurveillance.BlobSeq 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.#ctor(System.IntPtr)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.CountGet">
            <summary>设置 BlobSeq.get_Count() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.DisposeObject">
            <summary>设置 BlobSeq.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.DisposeObject01">
            <summary>设置 BlobSeq.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.GetBlobByID(System.Int32)">
            <summary>设置 BlobSeq.GetBlobByID(Int32 blobID) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.GetBlobByIDInt32">
            <summary>设置 BlobSeq.GetBlobByID(Int32 blobID) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.InitializeStub">
            <summary>初始化 type StubBlobSeq 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.ItemGetInt32">
            <summary>设置 BlobSeq.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.Count">
            <summary>设置 BlobSeq.get_Count() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeq.Item(System.Int32)">
            <summary>设置 BlobSeq.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase">
            <summary>Emgu.CV.VideoSurveillance.BlobSeqBase 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.CountGet">
            <summary>设置 BlobSeqBase.get_Count() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.DisposeObject">
            <summary>设置 DisposableObject.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.DisposeObject01">
            <summary>设置 DisposableObject.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.GetBlobByID(System.Int32)">
            <summary>设置 BlobSeqBase.GetBlobByID(Int32 blobID) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.GetBlobByIDInt32">
            <summary>设置 BlobSeqBase.GetBlobByID(Int32 blobID) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.InitializeStub">
            <summary>初始化 type StubBlobSeqBase 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.ItemGetInt32">
            <summary>设置 BlobSeqBase.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.Count">
            <summary>设置 BlobSeqBase.get_Count() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobSeqBase.Item(System.Int32)">
            <summary>设置 BlobSeqBase.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc">
            <summary>Emgu.CV.VideoSurveillance.BlobTrackPostProc 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.#ctor(Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.DisposeObject">
            <summary>设置 BlobTrackPostProc.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.DisposeObject01">
            <summary>设置 BlobTrackPostProc.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.InitializeStub">
            <summary>初始化 type StubBlobTrackPostProc 的新实例</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTrackPostProc.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker">
            <summary>Emgu.CV.VideoSurveillance.BlobTracker 的存根类型</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.#ctor(Emgu.CV.CvEnum.BLOBTRACKER_TYPE)">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.CountGet">
            <summary>设置 BlobTracker.get_Count() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.DisposeObject">
            <summary>设置 BlobTracker.DisposeObject() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.DisposeObject01">
            <summary>设置 BlobTracker.DisposeObject() 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.GetBlobByID(System.Int32)">
            <summary>设置 BlobTracker.GetBlobByID(Int32 blobID) 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.GetBlobByIDInt32">
            <summary>设置 BlobTracker.GetBlobByID(Int32 blobID) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.InitializeStub">
            <summary>初始化 type StubBlobTracker 的新实例</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.ItemGetInt32">
            <summary>设置 BlobTracker.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="M:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.ReleaseManagedResources">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 存根</summary>
        </member>
        <member name="F:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.ReleaseManagedResources01">
            <summary>设置 DisposableObject.ReleaseManagedResources() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.Count">
            <summary>设置 BlobTracker.get_Count() 的 stub</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Emgu.CV.VideoSurveillance.Fakes.StubBlobTracker.Item(System.Int32)">
            <summary>设置 BlobTracker.get_Item(Int32 i) 的 stub</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.EmguCVDelegates">
            <summary>包含用于 Emgu.CV 的存根和填充码的自定义委托</summary>
        </member>
    </members>
</doc>
